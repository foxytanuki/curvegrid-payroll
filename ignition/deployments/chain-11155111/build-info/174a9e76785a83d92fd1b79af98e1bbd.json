{
  "id": "174a9e76785a83d92fd1b79af98e1bbd",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      },
      "contracts/core/MultichainPayrollWithHook.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../lib/interfaces/ITokenMessengerV2.sol\";\n\n/// @title MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments\n/// @notice This contract provides payroll functionality using contract's USDC balance.\n/// USDC must be deposited to the contract before making payments.\ncontract MultichainPayrollWithHook is Ownable {\n    // ============ Constants ============\n    \n    string private constant ERROR_INVALID_ADDRESS = \"MultichainPayrollWithHook: Invalid address\";\n    string private constant ERROR_INVALID_AMOUNT = \"MultichainPayrollWithHook: Amount must be greater than 0\";\n    string private constant ERROR_ROUTE_NOT_CONFIGURED = \"MultichainPayrollWithHook: Employee route not configured\";\n    string private constant ERROR_INVALID_USDC = \"MultichainPayrollWithHook: Invalid USDC address\";\n    string private constant ERROR_INVALID_TOKEN_MESSENGER = \"MultichainPayrollWithHook: Invalid TokenMessenger address\";\n    string private constant ERROR_INVALID_HOOK_WRAPPER = \"MultichainPayrollWithHook: Invalid HookWrapper address\";\n    string private constant ERROR_INVALID_MULTICHAIN_PAYROLL = \"MultichainPayrollWithHook: Invalid MultichainPayroll address\";\n\n    // ================================\n    // ============ Events ============\n    // ================================\n    \n    // ============ Admin Events ============ \n    // ----- both on destination chain and source chain -----\n    event USDCWithdrawn(address indexed recipient, uint256 amount);\n    // ----- only on source chain -----\n    event PaymentSent(\n        address indexed employee,\n        uint256 amount,\n        uint32 destinationDomain\n    );\n    // ----- only on destination chain -----\n    event EmployeeRouteSet(\n        address indexed employee,\n        uint32 domain,\n        address token,\n        bool lending\n    );\n\n    // ============ Destination Chain Hooks Events ============\n    // ----- only on destination chain -----\n    event PaymentReceived(\n        address indexed employee,\n        address token,\n        uint256 amount,\n        uint32 destinationDomain,\n        PaymentType paymentType\n    );\n    event DirectTransferExecuted(\n        address indexed employee,\n        address token,\n        uint256 amount\n    );\n    event TokenSwapExecuted(\n        address indexed employee,\n        uint256 usdcAmount,\n        address targetToken,\n        uint256 receivedAmount\n    );\n    event LendingDepositExecuted(\n        address indexed employee,\n        address token,\n        uint256 amount\n    );\n\n    event PaymentRequestedFromHook(\n        address indexed employee,\n        address token,\n        uint256 amount,\n        uint32 destinationDomain\n    );\n    \n    // ================================\n    // ============ Structs ===========\n    // ================================\n    \n    // Define payment type enum\n    enum PaymentType { DIRECT, SWAP, LENDING }\n\n    struct RouteInfo {\n        uint32 destinationCCTPDomain;\n        address desiredERC20Token;\n        bool lendingEnabled;\n    }\n\n    struct Employee {\n        address employee;\n        uint256 amount;\n    }\n\n    // ================================\n    // ============ Storage ===========\n    // ================================\n\n    mapping(address => RouteInfo) public routes;\n    address public immutable USDC;\n    ITokenMessengerV2 public immutable tokenMessenger;\n    address public immutable hookWrapper;\n    // In the future, this can be changed to a mapping that supports domains for better multichain compatibility\n    address public immutable targetMultichainPayroll;\n\n    // ================================\n    // ============ Constructor =======\n    // ================================\n\n    constructor(address _usdc, address _tokenMessenger, address _hookWrapper, address _targetMultichainPayroll) {\n        require(_usdc != address(0), ERROR_INVALID_USDC);\n        require(_tokenMessenger != address(0), ERROR_INVALID_TOKEN_MESSENGER);\n        require(_hookWrapper != address(0), ERROR_INVALID_HOOK_WRAPPER);\n        require(_targetMultichainPayroll != address(0), ERROR_INVALID_MULTICHAIN_PAYROLL);\n\n        USDC = _usdc;\n        tokenMessenger = ITokenMessengerV2(_tokenMessenger);\n        hookWrapper = _hookWrapper;\n        targetMultichainPayroll = _targetMultichainPayroll;\n    }\n\n    // =========================================\n    // ============ Admin Functions ============\n    // =========================================\n\n    /// @notice Admin registers payroll route info for an employee\n    /// @param employee The address of the employee\n    /// @param domain The CCTP domain where the employee will receive payments\n    /// @param token The token the employee wants to receive (can be USDC)\n    /// @param lending Whether to deposit to DeFi protocols or transfer directly\n    function setRouteInfo(\n        address employee,\n        uint32 domain,\n        address token,\n        bool lending\n    ) external onlyOwner {\n        require(employee != address(0), ERROR_INVALID_ADDRESS);\n        routes[employee] = RouteInfo(domain, token, lending);\n        emit EmployeeRouteSet(employee, domain, token, lending);\n    }\n\n    /// @notice Admin sends USDC to employees across chains via CCTP\n    /// @dev Uses contract's USDC balance\n    /// @param employees Array of employee addresses and payment amounts\n    function batchPayEmployees(Employee[] calldata employees) external onlyOwner {\n        for (uint256 i = 0; i < employees.length; i++) {\n            Employee memory emp = employees[i];\n            _validateEmployee(emp);\n            \n            RouteInfo memory route = routes[emp.employee];\n            require(isRouteConfigured(emp.employee), ERROR_ROUTE_NOT_CONFIGURED);\n            \n            // Send USDC to hookWrapper on destination chain at first,\n            // then the hookWrapper will call handleReceiveMessage on the targetMultichainPayroll\n            _sendCCTP(emp.employee, emp.amount, route.destinationCCTPDomain);\n            \n            emit PaymentSent(emp.employee, emp.amount, route.destinationCCTPDomain);\n        }\n    }\n\n    /// @notice Allows the owner to withdraw USDC from the contract\n    /// @param amount The amount of USDC to withdraw\n    /// @param recipient The address to send the withdrawn USDC to\n    function withdrawUSDC(uint256 amount, address recipient) external onlyOwner {\n        require(recipient != address(0), ERROR_INVALID_ADDRESS);\n        require(amount > 0, ERROR_INVALID_AMOUNT);\n        \n        IERC20(USDC).transfer(recipient, amount);\n        emit USDCWithdrawn(recipient, amount);\n    }\n\n    // ============ Internal Functions ============\n\n    /// @dev Validate employee data\n    /// @param emp Employee struct to validate\n    function _validateEmployee(Employee memory emp) internal pure {\n        require(emp.employee != address(0), ERROR_INVALID_ADDRESS);\n        require(emp.amount > 0, ERROR_INVALID_AMOUNT);\n    }\n\n    /// @dev Checks if a route has been configured for an employee\n    /// @param employee The employee address to check\n    /// @return true if the route has been configured, false otherwise\n    function isRouteConfigured(address employee) internal view returns (bool) {\n        return routes[employee].desiredERC20Token != address(0);\n    }\n\n    /// @dev Calls CCTP depositForBurn using TokenMessenger\n    /// @param to Recipient address (hookWrapper)\n    /// @param amount Amount to send\n    /// @param domain CCTP destination domain\n    function _sendCCTP(address to, uint256 amount, uint32 domain) internal {\n        IERC20(USDC).approve(address(tokenMessenger), amount);\n\n        // 1. Prepare calldata for handleReceiveMessage(address recipient, uint256 amount)\n        // This function resides on the targetMultichainPayroll contract, which will be called by the hookWrapper\n        bytes memory targetCalldata = abi.encodeWithSelector(\n            // Use the selector from the target contract instance/interface if available\n            // Casting the address assumes MultichainPayrollWithHook type compatibility\n            MultichainPayrollWithHook(targetMultichainPayroll).directTransfer.selector,\n            to,\n            amount\n        );\n\n        // 2. Construct hookData by tightly packing the target contract address (targetMultichainPayroll) and its calldata\n        // The hookWrapper will use this data to make the final call\n        bytes memory hookData = abi.encodePacked(bytes20(targetMultichainPayroll), targetCalldata);\n\n        // 3. Call CCTP's depositForBurnWithHook function with corrected parameters\n        bytes32 mintRecipient = _addressToBytes32(targetMultichainPayroll);\n        bytes32 destinationCaller = bytes32(0); // Any address can broadcast the message\n        uint256 cctpMaxFee = 500; // Set max fee (0.0005 USDC)\n        uint32 cctpMinFinalityThreshold = 1000; // Set min finality threshold (consistent with TS example)\n\n        tokenMessenger.depositForBurnWithHook(\n           amount,                    // amount to burn\n           domain,                    // destination CCTP domain\n           mintRecipient,              // mintRecipient on destination\n           USDC,                       // address of token being burned\n           destinationCaller,          // authorized caller on the destination domain\n           cctpMaxFee,                 // maximum fee to pay on the destination domain\n           cctpMinFinalityThreshold,   // minimum finality threshold\n           hookData                    // custom data passed to the hook contract\n        );\n    }\n\n    /// @dev Converts an Ethereum address to bytes32 format for CCTP\n    function _addressToBytes32(address addr) internal pure returns (bytes32) {\n        return bytes32(uint256(uint160(addr)));\n    }\n\n    // =========================================\n    // =========== Called via Hooks ============\n    // =========================================\n\n    /// @notice Called via CCTPHookWrapper relay(), triggered by Multichain message\n    /// @dev hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)\n    /// @param recipient The employee receiving the payment\n    /// @param amount The USDC amount received\n    function handleReceiveMessage(address recipient, uint256 amount) external {\n        require(recipient != address(0), ERROR_INVALID_ADDRESS);\n        require(amount > 0, ERROR_INVALID_AMOUNT);\n        \n        RouteInfo memory route = routes[recipient];\n        address finalToken = route.desiredERC20Token;\n        PaymentType paymentType = PaymentType.DIRECT;\n\n        emit PaymentRequestedFromHook(recipient, USDC, amount, route.destinationCCTPDomain);\n        \n        // Determine if token swap is needed\n        bool isSwapNeeded = finalToken != address(0) && finalToken != USDC;\n        \n        if (isSwapNeeded) {\n            amount = _swapUSDCToToken(amount, finalToken);\n            emit TokenSwapExecuted(recipient, amount, finalToken, amount);\n            paymentType = PaymentType.SWAP;\n        }\n\n        // Override payment type if lending is enabled\n        if (route.lendingEnabled) {\n            _depositToLendingProtocol(finalToken, amount, recipient);\n            emit LendingDepositExecuted(recipient, finalToken, amount);\n            paymentType = PaymentType.LENDING;\n        } else {\n            _transferToRecipient(finalToken, amount, recipient);\n            emit DirectTransferExecuted(recipient, finalToken, amount);\n        }\n\n        emit PaymentReceived(\n            recipient, \n            finalToken, \n            amount, \n            route.destinationCCTPDomain, \n            paymentType\n        );\n    }\n\n    function directTransfer(address recipient, uint256 amount) external {\n        require(recipient != address(0), ERROR_INVALID_ADDRESS);\n        require(amount > 0, ERROR_INVALID_AMOUNT);\n\n        _transferToRecipient(USDC, amount, recipient);\n        emit DirectTransferExecuted(recipient, USDC, amount);\n        // TODO: replace with a real destination domain\n        emit PaymentReceived(recipient, USDC, amount, 6, PaymentType.DIRECT);\n    }\n\n    // ============ Internal Token Logic (Mocked) ============\n\n    /// @dev Swap USDC to another token (implementation would use DEX)\n    function _swapUSDCToToken(uint256 amount, address /* token */) internal pure returns (uint256) {\n        // Swap logic via Uniswap etc. (mocked for demo)\n        return amount;\n    }\n\n    /// @dev Deposit tokens to DeFi lending protocol\n    function _depositToLendingProtocol(address token, uint256 amount, address recipient) internal {\n        // Lending protocol integration, e.g., Aave's deposit onBehalfOf\n    }\n\n    /// @dev Transfer tokens directly to recipient\n    function _transferToRecipient(address token, uint256 amount, address recipient) internal {\n        IERC20(token).transfer(recipient, amount);\n    }\n}\n"
      },
      "contracts/lib/interfaces/ITokenMessengerV2.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\n/**\n * @title ITokenMessengerV2\n * @notice Interface for Circle's CCTP TokenMessengerV2 contract\n */\ninterface ITokenMessengerV2 {\n    /**\n     * @notice Burns tokens and sends a message to the destination domain for minting\n     * @param amount Amount of tokens to burn\n     * @param destinationDomain Destination domain (Chain ID in CCTP)\n     * @param mintRecipient Address (as bytes32) of recipient on destination domain\n     * @param burnToken Address of token to burn\n     * @param destinationCaller Authorized caller on the destination domain, as bytes32\n     * @param maxFee Maximum fee to pay on the destination domain\n     * @param minFinalityThreshold Minimum finality at which the message should be attested to\n     */\n    function depositForBurn(\n        uint256 amount,\n        uint32 destinationDomain,\n        bytes32 mintRecipient,\n        address burnToken,\n        bytes32 destinationCaller,\n        uint256 maxFee,\n        uint32 minFinalityThreshold\n    ) external;\n\n    /**\n     * @notice Burns tokens and sends a message with hook data to the destination domain for minting\n     * @param amount Amount of tokens to burn\n     * @param destinationDomain Destination domain (Chain ID in CCTP)\n     * @param mintRecipient Address (as bytes32) of recipient on destination domain\n     * @param burnToken Address of token to burn\n     * @param destinationCaller Authorized caller on the destination domain, as bytes32\n     * @param maxFee Maximum fee to pay on the destination domain\n     * @param minFinalityThreshold Minimum finality at which the message should be attested to\n     * @param hookData Hook data to append to burn message for interpretation on destination domain\n     */\n    function depositForBurnWithHook(\n        uint256 amount,\n        uint32 destinationDomain,\n        bytes32 mintRecipient,\n        address burnToken,\n        bytes32 destinationCaller,\n        uint256 maxFee,\n        uint32 minFinalityThreshold,\n        bytes calldata hookData\n    ) external;\n} \n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout",
            "userdoc",
            "devdoc"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 1009,
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "start": 850
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              210
            ],
            "Ownable": [
              109
            ]
          },
          "id": 110,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 110,
              "sourceUnit": 211,
              "src": "66:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 210,
                    "src": "621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$210",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "621:7:0"
                }
              ],
              "contractDependencies": [
                210
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "97:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 109,
              "linearizedBaseContracts": [
                109,
                210
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "635:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "691:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "722:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:57:0"
                  },
                  "src": "664:84:0"
                },
                {
                  "body": {
                    "id": 34,
                    "nodeType": "Block",
                    "src": "874:135:0",
                    "statements": [
                      {
                        "assignments": [
                          18
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nodeType": "VariableDeclaration",
                            "scope": 34,
                            "src": "884:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 17,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "884:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "904:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "904:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "884:32:0"
                      },
                      {
                        "expression": {
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 22,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "926:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 23,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "935:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "926:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25,
                        "nodeType": "ExpressionStatement",
                        "src": "926:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 29,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "988:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 28,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "980:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 27,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "980:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "980:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "992:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "959:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "959:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "EmitStatement",
                        "src": "954:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "754:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 35,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "862:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "874:0:0"
                  },
                  "scope": 109,
                  "src": "850:159:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "1140:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1157:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 40,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "1150:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "1015:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 44,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1099:2:0"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1131:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1131:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1130:9:0"
                  },
                  "scope": 109,
                  "src": "1085:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1279:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 48,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "1297:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1297:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 50,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "1308:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 51,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1308:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1297:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1322:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 47,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1289:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1289:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:68:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1367:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1176:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1276:2:0"
                  },
                  "src": "1258:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1771:91:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1807:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 68,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1823:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1815:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1815:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1815:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 64,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1786:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1786:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "EmitStatement",
                        "src": "1781:45:0"
                      },
                      {
                        "expression": {
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 72,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1836:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1853:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1845:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1845:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1845:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1836:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1836:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1381:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 62,
                      "modifierName": {
                        "id": 61,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1761:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1761:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1743:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1771:0:0"
                  },
                  "scope": 109,
                  "src": "1717:145:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "2081:170:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 89,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "2099:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2119:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 91,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2111:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 90,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2111:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2111:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2099:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2123:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 88,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2091:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2091:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "ExpressionStatement",
                        "src": "2091:73:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 99,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2200:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2208:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 98,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2179:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2179:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "2174:43:0"
                      },
                      {
                        "expression": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 103,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2227:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 104,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2236:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2227:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "2227:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "1868:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 86,
                      "modifierName": {
                        "id": 85,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2071:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2071:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "2038:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2037:18:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2081:0:0"
                  },
                  "scope": 109,
                  "src": "2011:240:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 110,
              "src": "592:1661:0"
            }
          ],
          "src": "33:2221:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              187
            ]
          },
          "id": 188,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 111,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 112,
                "nodeType": "StructuredDocumentation",
                "src": "66:70:1",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 187,
              "linearizedBaseContracts": [
                187
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 113,
                    "nodeType": "StructuredDocumentation",
                    "src": "160:66:1",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 118,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "251:2:1"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "277:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "276:9:1"
                  },
                  "scope": 187,
                  "src": "231:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "292:72:1",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 126,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "388:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:17:1"
                  },
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "428:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "427:9:1"
                  },
                  "scope": 187,
                  "src": "369:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "443:209:1",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 136,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "675:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "694:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "694:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:35:1"
                  },
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "728:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:6:1"
                  },
                  "scope": 187,
                  "src": "657:77:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "740:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1028:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1043:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1027:32:1"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1083:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1083:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1082:9:1"
                  },
                  "scope": 187,
                  "src": "1009:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "1098:642:1",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1762:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1762:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1779:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1779:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1761:33:1"
                  },
                  "returnParameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1813:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:6:1"
                  },
                  "scope": 187,
                  "src": "1745:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 157,
                    "nodeType": "StructuredDocumentation",
                    "src": "1825:296:1",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2148:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2148:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2164:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2164:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2183:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2147:51:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2217:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2216:6:1"
                  },
                  "scope": 187,
                  "src": "2126:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "2229:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 177,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2407:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2429:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2449:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2449:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2406:57:1"
                  },
                  "src": "2392:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 178,
                    "nodeType": "StructuredDocumentation",
                    "src": "2470:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 186,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2638:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2638:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2661:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2686:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2637:63:1"
                  },
                  "src": "2623:78:1"
                }
              ],
              "scope": 188,
              "src": "137:2566:1"
            }
          ],
          "src": "33:2671:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              210
            ]
          },
          "id": 211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 189,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 210,
              "linearizedBaseContracts": [
                210
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "668:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "685:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "685:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 196,
                        "nodeType": "Return",
                        "src": "678:17:2"
                      }
                    ]
                  },
                  "id": 198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "617:2:2"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "651:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "651:15:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "650:17:2"
                  },
                  "scope": 210,
                  "src": "598:104:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "773:165:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "783:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$210",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "783:4:2"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "923:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "923:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 207,
                        "nodeType": "Return",
                        "src": "916:15:2"
                      }
                    ]
                  },
                  "id": 209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "725:2:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "759:12:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:14:2"
                  },
                  "scope": 210,
                  "src": "708:230:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 211,
              "src": "566:374:2"
            }
          ],
          "src": "33:908:2"
        },
        "id": 2
      },
      "contracts/core/MultichainPayrollWithHook.sol": {
        "ast": {
          "absolutePath": "contracts/core/MultichainPayrollWithHook.sol",
          "exportedSymbols": {
            "Context": [
              210
            ],
            "IERC20": [
              187
            ],
            "ITokenMessengerV2": [
              964
            ],
            "MultichainPayrollWithHook": [
              922
            ],
            "Ownable": [
              109
            ]
          },
          "id": 923,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 212,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:3"
            },
            {
              "id": 213,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "55:19:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 214,
              "nodeType": "ImportDirective",
              "scope": 923,
              "sourceUnit": 110,
              "src": "76:52:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 215,
              "nodeType": "ImportDirective",
              "scope": 923,
              "sourceUnit": 188,
              "src": "129:56:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/interfaces/ITokenMessengerV2.sol",
              "file": "../lib/interfaces/ITokenMessengerV2.sol",
              "id": 216,
              "nodeType": "ImportDirective",
              "scope": 923,
              "sourceUnit": 965,
              "src": "186:49:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 218,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 109,
                    "src": "523:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$109",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 219,
                  "nodeType": "InheritanceSpecifier",
                  "src": "523:7:3"
                }
              ],
              "contractDependencies": [
                109,
                210
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 217,
                "nodeType": "StructuredDocumentation",
                "src": "237:248:3",
                "text": "@title MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments\n @notice This contract provides payroll functionality using contract's USDC balance.\n USDC must be deposited to the contract before making payments."
              },
              "fullyImplemented": true,
              "id": 922,
              "linearizedBaseContracts": [
                922,
                109,
                210
              ],
              "name": "MultichainPayrollWithHook",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 222,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "585:92:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c69642061646472657373",
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "633:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1d57c702312658a7776cfbdc7d9862e69beb1f37c6cd8b7243e4bacce77480ff",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 225,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_AMOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "683:105:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "730:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fa64515d673bb404789e7e29e86f87ca1c0bcdb3d88f1bab5bfd018bd394961",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Amount must be greater than 0\""
                    },
                    "value": "MultichainPayrollWithHook: Amount must be greater than 0"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 228,
                  "mutability": "constant",
                  "name": "ERROR_ROUTE_NOT_CONFIGURED",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "794:111:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20456d706c6f79656520726f757465206e6f7420636f6e66696775726564",
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "847:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24af20652807755d7ec5737b86e21ab7c7205b9bc6b4c7b55dd263c9b0145f99",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Employee route not configured\""
                    },
                    "value": "MultichainPayrollWithHook: Employee route not configured"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 231,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_USDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "911:94:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420555344432061646472657373",
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "956:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b31d32ea72e5e5d24376a8a54024b4b373e54e423b9c3e2401e0e49d62b25eb8",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid USDC address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid USDC address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 234,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_TOKEN_MESSENGER",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "1011:115:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420546f6b656e4d657373656e6765722061646472657373",
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1067:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_825afad68fa47986413d609fc503997b774dc998124eb5a72cffd015fac6b8de",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid TokenMessenger address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid TokenMessenger address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 237,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_HOOK_WRAPPER",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "1132:109:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420486f6f6b577261707065722061646472657373",
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1185:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_282f9534ffef2f125da8e6276d0b3ff89ed5f97a090d36eda8c3084588655c4f",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid HookWrapper address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid HookWrapper address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 240,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_MULTICHAIN_PAYROLL",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "1247:121:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c6964204d756c7469636861696e506179726f6c6c2061646472657373",
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1306:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_073433202b4432b3a447cd5e967591e7670a5bcacb2275b7576edd252b765d6a",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid MultichainPayroll address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid MultichainPayroll address"
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 246,
                  "name": "USDCWithdrawn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "1629:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1629:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 244,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "1656:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1628:43:3"
                  },
                  "src": "1609:63:3"
                },
                {
                  "anonymous": false,
                  "id": 254,
                  "name": "PaymentSent",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1744:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1744:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1778:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1778:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1802:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1802:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1734:98:3"
                  },
                  "src": "1717:116:3"
                },
                {
                  "anonymous": false,
                  "id": 264,
                  "name": "EmployeeRouteSet",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1915:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1915:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "domain",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1949:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1949:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 260,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1972:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1972:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 262,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "lending",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1995:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1905:108:3"
                  },
                  "src": "1883:131:3"
                },
                {
                  "anonymous": false,
                  "id": 276,
                  "name": "PaymentReceived",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2160:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2160:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2194:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2194:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2217:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2241:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paymentType",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2275:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentType_$316",
                          "typeString": "enum MultichainPayrollWithHook.PaymentType"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "PaymentType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 316,
                          "src": "2275:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PaymentType_$316",
                            "typeString": "enum MultichainPayrollWithHook.PaymentType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2150:154:3"
                  },
                  "src": "2129:176:3"
                },
                {
                  "anonymous": false,
                  "id": 284,
                  "name": "DirectTransferExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "2348:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2348:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "2382:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2382:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 282,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "2405:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2405:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2338:87:3"
                  },
                  "src": "2310:116:3"
                },
                {
                  "anonymous": false,
                  "id": 294,
                  "name": "TokenSwapExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2464:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2464:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usdcAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2498:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2498:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 290,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "targetToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2526:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2526:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 292,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "receivedAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2555:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2555:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2454:129:3"
                  },
                  "src": "2431:153:3"
                },
                {
                  "anonymous": false,
                  "id": 302,
                  "name": "LendingDepositExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 296,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2627:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2627:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 298,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2661:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 300,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2684:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2684:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2617:87:3"
                  },
                  "src": "2589:116:3"
                },
                {
                  "anonymous": false,
                  "id": 312,
                  "name": "PaymentRequestedFromHook",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2751:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2751:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 306,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2785:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2785:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2808:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "2832:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2741:121:3"
                  },
                  "src": "2711:152:3"
                },
                {
                  "canonicalName": "MultichainPayrollWithHook.PaymentType",
                  "id": 316,
                  "members": [
                    {
                      "id": 313,
                      "name": "DIRECT",
                      "nodeType": "EnumValue",
                      "src": "3049:6:3"
                    },
                    {
                      "id": 314,
                      "name": "SWAP",
                      "nodeType": "EnumValue",
                      "src": "3057:4:3"
                    },
                    {
                      "id": 315,
                      "name": "LENDING",
                      "nodeType": "EnumValue",
                      "src": "3063:7:3"
                    }
                  ],
                  "name": "PaymentType",
                  "nodeType": "EnumDefinition",
                  "src": "3030:42:3"
                },
                {
                  "canonicalName": "MultichainPayrollWithHook.RouteInfo",
                  "id": 323,
                  "members": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "destinationCCTPDomain",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3105:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3105:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "desiredERC20Token",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3143:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3143:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "lendingEnabled",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3178:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3178:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RouteInfo",
                  "nodeType": "StructDefinition",
                  "scope": 922,
                  "src": "3078:126:3",
                  "visibility": "public"
                },
                {
                  "canonicalName": "MultichainPayrollWithHook.Employee",
                  "id": 328,
                  "members": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "employee",
                      "nodeType": "VariableDeclaration",
                      "scope": 328,
                      "src": "3236:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3236:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 327,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 328,
                      "src": "3262:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3262:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Employee",
                  "nodeType": "StructDefinition",
                  "scope": 922,
                  "src": "3210:73:3",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d7409659",
                  "id": 332,
                  "mutability": "mutable",
                  "name": "routes",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "3410:43:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$323_storage_$",
                    "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo)"
                  },
                  "typeName": {
                    "id": 331,
                    "keyType": {
                      "id": 329,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3418:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3410:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$323_storage_$",
                      "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo)"
                    },
                    "valueType": {
                      "id": 330,
                      "name": "RouteInfo",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 323,
                      "src": "3429:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RouteInfo_$323_storage_ptr",
                        "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "89a30271",
                  "id": 334,
                  "mutability": "immutable",
                  "name": "USDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "3459:29:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3459:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46117830",
                  "id": 336,
                  "mutability": "immutable",
                  "name": "tokenMessenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "3494:49:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                    "typeString": "contract ITokenMessengerV2"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "ITokenMessengerV2",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 964,
                    "src": "3494:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                      "typeString": "contract ITokenMessengerV2"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5a316f7a",
                  "id": 338,
                  "mutability": "immutable",
                  "name": "hookWrapper",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "3549:36:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3549:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "460cb6a6",
                  "id": 340,
                  "mutability": "immutable",
                  "name": "targetMultichainPayroll",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "3704:48:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3704:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "3988:488:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 352,
                                "name": "_usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 342,
                                "src": "4006:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4023:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4015:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 353,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4015:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4015:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4006:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 358,
                              "name": "ERROR_INVALID_USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "4027:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 351,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3998:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3998:48:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "3998:48:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 362,
                                "name": "_tokenMessenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "4064:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4091:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4083:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 363,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4083:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4083:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4064:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 368,
                              "name": "ERROR_INVALID_TOKEN_MESSENGER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "4095:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 361,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4056:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4056:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 370,
                        "nodeType": "ExpressionStatement",
                        "src": "4056:69:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 372,
                                "name": "_hookWrapper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "4143:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4167:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4159:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 373,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4159:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4159:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4143:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 378,
                              "name": "ERROR_INVALID_HOOK_WRAPPER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "4171:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 371,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4135:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4135:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "4135:63:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 382,
                                "name": "_targetMultichainPayroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "4216:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4252:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4244:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 383,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4244:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4244:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4216:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 388,
                              "name": "ERROR_INVALID_MULTICHAIN_PAYROLL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4256:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 381,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4208:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4208:81:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "4208:81:3"
                      },
                      {
                        "expression": {
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 391,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "4300:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 392,
                            "name": "_usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "4307:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4300:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 394,
                        "nodeType": "ExpressionStatement",
                        "src": "4300:12:3"
                      },
                      {
                        "expression": {
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 395,
                            "name": "tokenMessenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "4322:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                              "typeString": "contract ITokenMessengerV2"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 397,
                                "name": "_tokenMessenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "4357:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 396,
                              "name": "ITokenMessengerV2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 964,
                              "src": "4339:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ITokenMessengerV2_$964_$",
                                "typeString": "type(contract ITokenMessengerV2)"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4339:34:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                              "typeString": "contract ITokenMessengerV2"
                            }
                          },
                          "src": "4322:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                            "typeString": "contract ITokenMessengerV2"
                          }
                        },
                        "id": 400,
                        "nodeType": "ExpressionStatement",
                        "src": "4322:51:3"
                      },
                      {
                        "expression": {
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 401,
                            "name": "hookWrapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 338,
                            "src": "4383:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 402,
                            "name": "_hookWrapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "4397:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4383:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 404,
                        "nodeType": "ExpressionStatement",
                        "src": "4383:26:3"
                      },
                      {
                        "expression": {
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 405,
                            "name": "targetMultichainPayroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "4419:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 406,
                            "name": "_targetMultichainPayroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "4445:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4419:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 408,
                        "nodeType": "ExpressionStatement",
                        "src": "4419:50:3"
                      }
                    ]
                  },
                  "id": 410,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "_usdc",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3892:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3892:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "_tokenMessenger",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3907:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3907:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "_hookWrapper",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3932:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3932:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "_targetMultichainPayroll",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "3954:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3954:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3891:96:3"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3988:0:3"
                  },
                  "scope": 922,
                  "src": "3880:596:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 451,
                    "nodeType": "Block",
                    "src": "5125:198:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 425,
                                "name": "employee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "5143:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5163:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5155:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 426,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5155:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5155:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5143:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 431,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "5167:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 424,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5135:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5135:54:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "5135:54:3"
                      },
                      {
                        "expression": {
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 434,
                              "name": "routes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "5199:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$323_storage_$",
                                "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                              }
                            },
                            "id": 436,
                            "indexExpression": {
                              "id": 435,
                              "name": "employee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "5206:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5199:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$323_storage",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 438,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "5228:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 439,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 417,
                                "src": "5236:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 440,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "5243:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 437,
                              "name": "RouteInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "5218:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RouteInfo_$323_storage_ptr_$",
                                "typeString": "type(struct MultichainPayrollWithHook.RouteInfo storage pointer)"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5218:33:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                            }
                          },
                          "src": "5199:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RouteInfo_$323_storage",
                            "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "5199:52:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 445,
                              "name": "employee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "5283:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 446,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5293:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 447,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "5301:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 448,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "5308:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 444,
                            "name": "EmployeeRouteSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "5266:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint32,address,bool)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5266:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 450,
                        "nodeType": "EmitStatement",
                        "src": "5261:55:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 411,
                    "nodeType": "StructuredDocumentation",
                    "src": "4630:349:3",
                    "text": "@notice Admin registers payroll route info for an employee\n @param employee The address of the employee\n @param domain The CCTP domain where the employee will receive payments\n @param token The token the employee wants to receive (can be USDC)\n @param lending Whether to deposit to DeFi protocols or transfer directly"
                  },
                  "functionSelector": "49843f01",
                  "id": 452,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 422,
                      "modifierName": {
                        "id": 421,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5115:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5115:9:3"
                    }
                  ],
                  "name": "setRouteInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "5015:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5015:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "domain",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "5041:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5041:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "5064:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5064:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "lending",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "5087:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5087:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5005:100:3"
                  },
                  "returnParameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5125:0:3"
                  },
                  "scope": 922,
                  "src": "4984:339:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 517,
                    "nodeType": "Block",
                    "src": "5590:670:3",
                    "statements": [
                      {
                        "body": {
                          "id": 515,
                          "nodeType": "Block",
                          "src": "5647:607:3",
                          "statements": [
                            {
                              "assignments": [
                                473
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 473,
                                  "mutability": "mutable",
                                  "name": "emp",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 515,
                                  "src": "5661:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee"
                                  },
                                  "typeName": {
                                    "id": 472,
                                    "name": "Employee",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 328,
                                    "src": "5661:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Employee_$328_storage_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 477,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 474,
                                  "name": "employees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 456,
                                  "src": "5683:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee calldata[] calldata"
                                  }
                                },
                                "id": 476,
                                "indexExpression": {
                                  "id": 475,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 462,
                                  "src": "5693:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5683:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Employee_$328_calldata_ptr",
                                  "typeString": "struct MultichainPayrollWithHook.Employee calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5661:34:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 479,
                                    "name": "emp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 473,
                                    "src": "5727:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                    }
                                  ],
                                  "id": 478,
                                  "name": "_validateEmployee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 585,
                                  "src": "5709:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_Employee_$328_memory_ptr_$returns$__$",
                                    "typeString": "function (struct MultichainPayrollWithHook.Employee memory) pure"
                                  }
                                },
                                "id": 480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5709:22:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 481,
                              "nodeType": "ExpressionStatement",
                              "src": "5709:22:3"
                            },
                            {
                              "assignments": [
                                483
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 483,
                                  "mutability": "mutable",
                                  "name": "route",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 515,
                                  "src": "5758:22:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                                  },
                                  "typeName": {
                                    "id": 482,
                                    "name": "RouteInfo",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 323,
                                    "src": "5758:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RouteInfo_$323_storage_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 488,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 484,
                                  "name": "routes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 332,
                                  "src": "5783:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$323_storage_$",
                                    "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                                  }
                                },
                                "id": 487,
                                "indexExpression": {
                                  "expression": {
                                    "id": 485,
                                    "name": "emp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 473,
                                    "src": "5790:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                    }
                                  },
                                  "id": 486,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "employee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 325,
                                  "src": "5790:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5783:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RouteInfo_$323_storage",
                                  "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5758:45:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 491,
                                          "name": "emp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 473,
                                          "src": "5843:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                            "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                          }
                                        },
                                        "id": 492,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "employee",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 325,
                                        "src": "5843:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 490,
                                      "name": "isRouteConfigured",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 604,
                                      "src": "5825:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) view returns (bool)"
                                      }
                                    },
                                    "id": 493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5825:31:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 494,
                                    "name": "ERROR_ROUTE_NOT_CONFIGURED",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 228,
                                    "src": "5858:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 489,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5817:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5817:68:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 496,
                              "nodeType": "ExpressionStatement",
                              "src": "5817:68:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 498,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 473,
                                      "src": "6091:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 499,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "employee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 325,
                                    "src": "6091:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 500,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 473,
                                      "src": "6105:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 327,
                                    "src": "6105:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 502,
                                      "name": "route",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 483,
                                      "src": "6117:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                      }
                                    },
                                    "id": 503,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "destinationCCTPDomain",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 318,
                                    "src": "6117:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 497,
                                  "name": "_sendCCTP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 684,
                                  "src": "6081:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                                    "typeString": "function (address,uint256,uint32)"
                                  }
                                },
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6081:64:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 505,
                              "nodeType": "ExpressionStatement",
                              "src": "6081:64:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 507,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 473,
                                      "src": "6189:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 508,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "employee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 325,
                                    "src": "6189:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 509,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 473,
                                      "src": "6203:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 510,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 327,
                                    "src": "6203:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 511,
                                      "name": "route",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 483,
                                      "src": "6215:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                      }
                                    },
                                    "id": 512,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "destinationCCTPDomain",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 318,
                                    "src": "6215:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 506,
                                  "name": "PaymentSent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "6177:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                                    "typeString": "function (address,uint256,uint32)"
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6177:66:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 514,
                              "nodeType": "EmitStatement",
                              "src": "6172:71:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 465,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "5620:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 466,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "5624:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct MultichainPayrollWithHook.Employee calldata[] calldata"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5624:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5620:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 516,
                        "initializationExpression": {
                          "assignments": [
                            462
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 462,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 516,
                              "src": "5605:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 461,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5605:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 464,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5617:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5605:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5642:3:3",
                            "subExpression": {
                              "id": 469,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "5642:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 471,
                          "nodeType": "ExpressionStatement",
                          "src": "5642:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "5600:654:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 453,
                    "nodeType": "StructuredDocumentation",
                    "src": "5329:179:3",
                    "text": "@notice Admin sends USDC to employees across chains via CCTP\n @dev Uses contract's USDC balance\n @param employees Array of employee addresses and payment amounts"
                  },
                  "functionSelector": "2055a637",
                  "id": 518,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 459,
                      "modifierName": {
                        "id": 458,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5580:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5580:9:3"
                    }
                  ],
                  "name": "batchPayEmployees",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "employees",
                        "nodeType": "VariableDeclaration",
                        "scope": 518,
                        "src": "5540:29:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct MultichainPayrollWithHook.Employee[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 454,
                            "name": "Employee",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 328,
                            "src": "5540:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$328_storage_ptr",
                              "typeString": "struct MultichainPayrollWithHook.Employee"
                            }
                          },
                          "id": 455,
                          "nodeType": "ArrayTypeName",
                          "src": "5540:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Employee_$328_storage_$dyn_storage_ptr",
                            "typeString": "struct MultichainPayrollWithHook.Employee[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5539:31:3"
                  },
                  "returnParameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5590:0:3"
                  },
                  "scope": 922,
                  "src": "5513:747:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 558,
                    "nodeType": "Block",
                    "src": "6530:229:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 529,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 523,
                                "src": "6548:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6569:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6561:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 530,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6561:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6561:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "6548:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 535,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "6573:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 528,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6540:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6540:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 537,
                        "nodeType": "ExpressionStatement",
                        "src": "6540:55:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 539,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 521,
                                "src": "6613:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6622:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6613:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 542,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "6625:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 538,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6605:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "6605:41:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 549,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "6687:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 550,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "6698:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 546,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 334,
                                  "src": "6672:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 545,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "6665:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6665:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$187",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136,
                            "src": "6665:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6665:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 552,
                        "nodeType": "ExpressionStatement",
                        "src": "6665:40:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 554,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "6734:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 555,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "6745:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 553,
                            "name": "USDCWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "6720:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6720:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "EmitStatement",
                        "src": "6715:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 519,
                    "nodeType": "StructuredDocumentation",
                    "src": "6266:183:3",
                    "text": "@notice Allows the owner to withdraw USDC from the contract\n @param amount The amount of USDC to withdraw\n @param recipient The address to send the withdrawn USDC to"
                  },
                  "functionSelector": "0c1241b5",
                  "id": 559,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 526,
                      "modifierName": {
                        "id": 525,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6520:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6520:9:3"
                    }
                  ],
                  "name": "withdrawUSDC",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "6476:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6476:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "6492:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6492:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6475:35:3"
                  },
                  "returnParameters": {
                    "id": 527,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6530:0:3"
                  },
                  "scope": 922,
                  "src": "6454:305:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "6963:130:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 566,
                                  "name": "emp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "6981:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                  }
                                },
                                "id": 567,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "employee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 325,
                                "src": "6981:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7005:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6997:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 568,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6997:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6997:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "6981:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 573,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "7009:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 565,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6973:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6973:58:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "6973:58:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 577,
                                  "name": "emp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "7049:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                  }
                                },
                                "id": 578,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 327,
                                "src": "7049:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7062:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7049:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 581,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "7065:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 576,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7041:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7041:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "7041:45:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 560,
                    "nodeType": "StructuredDocumentation",
                    "src": "6818:78:3",
                    "text": "@dev Validate employee data\n @param emp Employee struct to validate"
                  },
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateEmployee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "emp",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6928:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$328_memory_ptr",
                          "typeString": "struct MultichainPayrollWithHook.Employee"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "Employee",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "6928:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$328_storage_ptr",
                            "typeString": "struct MultichainPayrollWithHook.Employee"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6927:21:3"
                  },
                  "returnParameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6963:0:3"
                  },
                  "scope": 922,
                  "src": "6901:192:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 603,
                    "nodeType": "Block",
                    "src": "7365:72:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 593,
                                "name": "routes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "7382:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$323_storage_$",
                                  "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                                }
                              },
                              "id": 595,
                              "indexExpression": {
                                "id": 594,
                                "name": "employee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "7389:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7382:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RouteInfo_$323_storage",
                                "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "desiredERC20Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "7382:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7428:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7420:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 597,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7420:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7420:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7382:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 592,
                        "id": 602,
                        "nodeType": "Return",
                        "src": "7375:55:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "7099:187:3",
                    "text": "@dev Checks if a route has been configured for an employee\n @param employee The employee address to check\n @return true if the route has been configured, false otherwise"
                  },
                  "id": 604,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRouteConfigured",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 604,
                        "src": "7318:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7318:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7317:18:3"
                  },
                  "returnParameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 604,
                        "src": "7359:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7359:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7358:6:3"
                  },
                  "scope": 922,
                  "src": "7291:146:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "7707:2009:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 620,
                                  "name": "tokenMessenger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 336,
                                  "src": "7746:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                                    "typeString": "contract ITokenMessengerV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                                    "typeString": "contract ITokenMessengerV2"
                                  }
                                ],
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7738:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 618,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7738:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7738:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 622,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7763:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 615,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 334,
                                  "src": "7724:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 614,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "7717:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7717:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$187",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 156,
                            "src": "7717:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7717:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 624,
                        "nodeType": "ExpressionStatement",
                        "src": "7717:53:3"
                      },
                      {
                        "assignments": [
                          626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 626,
                            "mutability": "mutable",
                            "name": "targetCalldata",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "7986:27:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 625,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7986:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 637,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 630,
                                      "name": "targetMultichainPayroll",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "8255:23:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 629,
                                    "name": "MultichainPayrollWithHook",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 922,
                                    "src": "8229:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MultichainPayrollWithHook_$922_$",
                                      "typeString": "type(contract MultichainPayrollWithHook)"
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8229:50:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MultichainPayrollWithHook_$922",
                                    "typeString": "contract MultichainPayrollWithHook"
                                  }
                                },
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "directTransfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 878,
                                "src": "8229:65:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256) external"
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "8229:74:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 634,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "8317:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "8333:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 627,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8016:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "8016:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8016:333:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7986:363:3"
                      },
                      {
                        "assignments": [
                          639
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 639,
                            "mutability": "mutable",
                            "name": "hookData",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8552:21:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 638,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8552:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 648,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 644,
                                  "name": "targetMultichainPayroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 340,
                                  "src": "8601:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8593:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 642,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8593:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8593:32:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            },
                            {
                              "id": 646,
                              "name": "targetCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "8627:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 640,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8576:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8576:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8576:66:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8552:90:3"
                      },
                      {
                        "assignments": [
                          650
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 650,
                            "mutability": "mutable",
                            "name": "mintRecipient",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8737:21:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8737:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 654,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 652,
                              "name": "targetMultichainPayroll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "8779:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 651,
                            "name": "_addressToBytes32",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "8761:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                              "typeString": "function (address) pure returns (bytes32)"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8761:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8737:66:3"
                      },
                      {
                        "assignments": [
                          656
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 656,
                            "mutability": "mutable",
                            "name": "destinationCaller",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8813:25:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 655,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8813:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 661,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8849:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8841:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 657,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8841:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8841:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8813:38:3"
                      },
                      {
                        "assignments": [
                          663
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 663,
                            "mutability": "mutable",
                            "name": "cctpMaxFee",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8902:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 662,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8902:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 665,
                        "initialValue": {
                          "hexValue": "353030",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8923:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8902:24:3"
                      },
                      {
                        "assignments": [
                          667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 667,
                            "mutability": "mutable",
                            "name": "cctpMinFinalityThreshold",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8965:31:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 666,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8965:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 669,
                        "initialValue": {
                          "hexValue": "31303030",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8999:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8965:38:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "9123:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 674,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "9179:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 675,
                              "name": "mintRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "9244:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 676,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "9315:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 677,
                              "name": "destinationCaller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 656,
                              "src": "9387:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 678,
                              "name": "cctpMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "9473:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 679,
                              "name": "cctpMinFinalityThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 667,
                              "src": "9560:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 680,
                              "name": "hookData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "9629:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 670,
                              "name": "tokenMessenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 336,
                              "src": "9073:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenMessengerV2_$964",
                                "typeString": "contract ITokenMessengerV2"
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositForBurnWithHook",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 963,
                            "src": "9073:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes memory) external"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9073:636:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 682,
                        "nodeType": "ExpressionStatement",
                        "src": "9073:636:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 605,
                    "nodeType": "StructuredDocumentation",
                    "src": "7443:188:3",
                    "text": "@dev Calls CCTP depositForBurn using TokenMessenger\n @param to Recipient address (hookWrapper)\n @param amount Amount to send\n @param domain CCTP destination domain"
                  },
                  "id": 684,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_sendCCTP",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "7655:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7655:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "7667:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7667:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "domain",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "7683:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7683:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7654:43:3"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7707:0:3"
                  },
                  "scope": 922,
                  "src": "7636:2080:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "9864:55:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 698,
                                      "name": "addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 687,
                                      "src": "9905:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 697,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9897:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 696,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9897:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9897:13:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9889:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 694,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9889:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9889:22:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9881:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 692,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9881:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9881:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 691,
                        "id": 702,
                        "nodeType": "Return",
                        "src": "9874:38:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 685,
                    "nodeType": "StructuredDocumentation",
                    "src": "9722:64:3",
                    "text": "@dev Converts an Ethereum address to bytes32 format for CCTP"
                  },
                  "id": 704,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addressToBytes32",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "9818:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9818:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9817:14:3"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "9855:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9855:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9854:9:3"
                  },
                  "scope": 922,
                  "src": "9791:128:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "10444:1364:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 713,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "10462:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10483:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10475:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 714,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10475:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10475:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "10462:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 719,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "10487:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 712,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10454:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10454:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "10454:55:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 723,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 709,
                                "src": "10527:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10536:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10527:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 726,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "10539:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 722,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10519:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10519:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 728,
                        "nodeType": "ExpressionStatement",
                        "src": "10519:41:3"
                      },
                      {
                        "assignments": [
                          730
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 730,
                            "mutability": "mutable",
                            "name": "route",
                            "nodeType": "VariableDeclaration",
                            "scope": 831,
                            "src": "10579:22:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                            },
                            "typeName": {
                              "id": 729,
                              "name": "RouteInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 323,
                              "src": "10579:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RouteInfo_$323_storage_ptr",
                                "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 734,
                        "initialValue": {
                          "baseExpression": {
                            "id": 731,
                            "name": "routes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "10604:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$323_storage_$",
                              "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                            }
                          },
                          "id": 733,
                          "indexExpression": {
                            "id": 732,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "10611:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10604:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RouteInfo_$323_storage",
                            "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10579:42:3"
                      },
                      {
                        "assignments": [
                          736
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 736,
                            "mutability": "mutable",
                            "name": "finalToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 831,
                            "src": "10631:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 735,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10631:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 739,
                        "initialValue": {
                          "expression": {
                            "id": 737,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "10652:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "desiredERC20Token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 320,
                          "src": "10652:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10631:44:3"
                      },
                      {
                        "assignments": [
                          741
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 741,
                            "mutability": "mutable",
                            "name": "paymentType",
                            "nodeType": "VariableDeclaration",
                            "scope": 831,
                            "src": "10685:23:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PaymentType_$316",
                              "typeString": "enum MultichainPayrollWithHook.PaymentType"
                            },
                            "typeName": {
                              "id": 740,
                              "name": "PaymentType",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 316,
                              "src": "10685:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentType_$316",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 744,
                        "initialValue": {
                          "expression": {
                            "id": 742,
                            "name": "PaymentType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "10711:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PaymentType_$316_$",
                              "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DIRECT",
                          "nodeType": "MemberAccess",
                          "src": "10711:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PaymentType_$316",
                            "typeString": "enum MultichainPayrollWithHook.PaymentType"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10685:44:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 746,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "10770:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 747,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "10781:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 748,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "10787:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 749,
                                "name": "route",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 730,
                                "src": "10795:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                                  "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "destinationCCTPDomain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 318,
                              "src": "10795:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 745,
                            "name": "PaymentRequestedFromHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "10745:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32)"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10745:78:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 752,
                        "nodeType": "EmitStatement",
                        "src": "10740:83:3"
                      },
                      {
                        "assignments": [
                          754
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 754,
                            "mutability": "mutable",
                            "name": "isSwapNeeded",
                            "nodeType": "VariableDeclaration",
                            "scope": 831,
                            "src": "10887:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 753,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10887:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 765,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 755,
                              "name": "finalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "10907:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10929:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10921:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 756,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10921:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10921:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "10907:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 761,
                              "name": "finalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "10935:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 762,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "10949:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10935:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10907:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10887:66:3"
                      },
                      {
                        "condition": {
                          "id": 766,
                          "name": "isSwapNeeded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "10976:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 787,
                        "nodeType": "IfStatement",
                        "src": "10972:207:3",
                        "trueBody": {
                          "id": 786,
                          "nodeType": "Block",
                          "src": "10990:189:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 767,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 709,
                                  "src": "11004:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 769,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 709,
                                      "src": "11030:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 770,
                                      "name": "finalToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "11038:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 768,
                                    "name": "_swapUSDCToToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 891,
                                    "src": "11013:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,address) pure returns (uint256)"
                                    }
                                  },
                                  "id": 771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11013:36:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11004:45:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 773,
                              "nodeType": "ExpressionStatement",
                              "src": "11004:45:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 775,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "11086:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 776,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "11097:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 777,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 736,
                                    "src": "11105:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 778,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "11117:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 774,
                                  "name": "TokenSwapExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "11068:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,address,uint256)"
                                  }
                                },
                                "id": 779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11068:56:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 780,
                              "nodeType": "EmitStatement",
                              "src": "11063:61:3"
                            },
                            {
                              "expression": {
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 781,
                                  "name": "paymentType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 741,
                                  "src": "11138:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$316",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 782,
                                    "name": "PaymentType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "11152:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PaymentType_$316_$",
                                      "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                                    }
                                  },
                                  "id": 783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "SWAP",
                                  "nodeType": "MemberAccess",
                                  "src": "11152:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$316",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "src": "11138:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentType_$316",
                                  "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                }
                              },
                              "id": 785,
                              "nodeType": "ExpressionStatement",
                              "src": "11138:30:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 788,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "11248:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lendingEnabled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 322,
                          "src": "11248:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "11476:148:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 809,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 736,
                                    "src": "11511:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 810,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "11523:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 811,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "11531:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 808,
                                  "name": "_transferToRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "11490:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (address,uint256,address)"
                                  }
                                },
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11490:51:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 813,
                              "nodeType": "ExpressionStatement",
                              "src": "11490:51:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 815,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "11583:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 816,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 736,
                                    "src": "11594:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 817,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "11606:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 814,
                                  "name": "DirectTransferExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "11560:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11560:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 819,
                              "nodeType": "EmitStatement",
                              "src": "11555:58:3"
                            }
                          ]
                        },
                        "id": 821,
                        "nodeType": "IfStatement",
                        "src": "11244:380:3",
                        "trueBody": {
                          "id": 807,
                          "nodeType": "Block",
                          "src": "11270:200:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 791,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 736,
                                    "src": "11310:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 792,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "11322:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 793,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "11330:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 790,
                                  "name": "_depositToLendingProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 902,
                                  "src": "11284:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (address,uint256,address)"
                                  }
                                },
                                "id": 794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11284:56:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 795,
                              "nodeType": "ExpressionStatement",
                              "src": "11284:56:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 797,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "11382:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 798,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 736,
                                    "src": "11393:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 799,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "11405:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 796,
                                  "name": "LendingDepositExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "11359:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11359:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 801,
                              "nodeType": "EmitStatement",
                              "src": "11354:58:3"
                            },
                            {
                              "expression": {
                                "id": 805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 802,
                                  "name": "paymentType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 741,
                                  "src": "11426:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$316",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 803,
                                    "name": "PaymentType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "11440:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PaymentType_$316_$",
                                      "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                                    }
                                  },
                                  "id": 804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "LENDING",
                                  "nodeType": "MemberAccess",
                                  "src": "11440:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$316",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "src": "11426:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentType_$316",
                                  "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                }
                              },
                              "id": 806,
                              "nodeType": "ExpressionStatement",
                              "src": "11426:33:3"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 823,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "11668:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 824,
                              "name": "finalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "11692:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 825,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "11717:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 826,
                                "name": "route",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 730,
                                "src": "11738:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RouteInfo_$323_memory_ptr",
                                  "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                }
                              },
                              "id": 827,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "destinationCCTPDomain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 318,
                              "src": "11738:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 828,
                              "name": "paymentType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "11780:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentType_$316",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentType_$316",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            ],
                            "id": 822,
                            "name": "PaymentReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "11639:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_enum$_PaymentType_$316_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,enum MultichainPayrollWithHook.PaymentType)"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11639:162:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 830,
                        "nodeType": "EmitStatement",
                        "src": "11634:167:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 705,
                    "nodeType": "StructuredDocumentation",
                    "src": "10073:292:3",
                    "text": "@notice Called via CCTPHookWrapper relay(), triggered by Multichain message\n @dev hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)\n @param recipient The employee receiving the payment\n @param amount The USDC amount received"
                  },
                  "functionSelector": "a34971f7",
                  "id": 832,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "handleReceiveMessage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 710,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "10400:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10400:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "10419:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10399:35:3"
                  },
                  "returnParameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10444:0:3"
                  },
                  "scope": 922,
                  "src": "10370:1438:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 877,
                    "nodeType": "Block",
                    "src": "11882:375:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 840,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 834,
                                "src": "11900:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 843,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11921:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11913:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 841,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11913:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11913:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "11900:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 846,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "11925:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 839,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11892:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 848,
                        "nodeType": "ExpressionStatement",
                        "src": "11892:55:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 850,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "11965:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11974:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11965:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 853,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "11977:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 849,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11957:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11957:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 855,
                        "nodeType": "ExpressionStatement",
                        "src": "11957:41:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 857,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "12030:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 858,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "12036:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 859,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "12044:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 856,
                            "name": "_transferToRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "12009:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address)"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12009:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 861,
                        "nodeType": "ExpressionStatement",
                        "src": "12009:45:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 863,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "12092:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 864,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "12103:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "12109:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 862,
                            "name": "DirectTransferExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "12069:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12069:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 867,
                        "nodeType": "EmitStatement",
                        "src": "12064:52:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 869,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "12203:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 870,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "12214:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 871,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "12220:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "36",
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12228:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            {
                              "expression": {
                                "id": 873,
                                "name": "PaymentType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "12231:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_PaymentType_$316_$",
                                  "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                                }
                              },
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "DIRECT",
                              "nodeType": "MemberAccess",
                              "src": "12231:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentType_$316",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentType_$316",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            ],
                            "id": 868,
                            "name": "PaymentReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "12187:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_enum$_PaymentType_$316_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,enum MultichainPayrollWithHook.PaymentType)"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12187:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 876,
                        "nodeType": "EmitStatement",
                        "src": "12182:68:3"
                      }
                    ]
                  },
                  "functionSelector": "6c61d60f",
                  "id": 878,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "directTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 878,
                        "src": "11838:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11838:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 878,
                        "src": "11857:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11857:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11837:35:3"
                  },
                  "returnParameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11882:0:3"
                  },
                  "scope": 922,
                  "src": "11814:443:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 890,
                    "nodeType": "Block",
                    "src": "12493:87:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 888,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 881,
                          "src": "12567:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 887,
                        "id": 889,
                        "nodeType": "Return",
                        "src": "12560:13:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 879,
                    "nodeType": "StructuredDocumentation",
                    "src": "12327:66:3",
                    "text": "@dev Swap USDC to another token (implementation would use DEX)"
                  },
                  "id": 891,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapUSDCToToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "12424:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12424:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "12440:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12440:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12423:37:3"
                  },
                  "returnParameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 886,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 891,
                        "src": "12484:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12484:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12483:9:3"
                  },
                  "scope": 922,
                  "src": "12398:182:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "12733:80:3",
                    "statements": []
                  },
                  "documentation": {
                    "id": 892,
                    "nodeType": "StructuredDocumentation",
                    "src": "12586:48:3",
                    "text": "@dev Deposit tokens to DeFi lending protocol"
                  },
                  "id": 902,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_depositToLendingProtocol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "12674:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12674:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 896,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "12689:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12689:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "12705:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12705:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12673:50:3"
                  },
                  "returnParameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12733:0:3"
                  },
                  "scope": 922,
                  "src": "12639:174:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "12959:58:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 916,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "12992:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 917,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "13003:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 913,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 905,
                                  "src": "12976:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 912,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "12969:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12969:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$187",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136,
                            "src": "12969:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12969:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "12969:41:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 903,
                    "nodeType": "StructuredDocumentation",
                    "src": "12819:46:3",
                    "text": "@dev Transfer tokens directly to recipient"
                  },
                  "id": 921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferToRecipient",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 905,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "12900:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 904,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12900:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 907,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "12915:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12915:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "12931:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12899:50:3"
                  },
                  "returnParameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12959:0:3"
                  },
                  "scope": 922,
                  "src": "12870:147:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 923,
              "src": "485:12534:3"
            }
          ],
          "src": "32:12988:3"
        },
        "id": 3
      },
      "contracts/lib/interfaces/ITokenMessengerV2.sol": {
        "ast": {
          "absolutePath": "contracts/lib/interfaces/ITokenMessengerV2.sol",
          "exportedSymbols": {
            "ITokenMessengerV2": [
              964
            ]
          },
          "id": 965,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 924,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 925,
                "nodeType": "StructuredDocumentation",
                "src": "56:100:4",
                "text": " @title ITokenMessengerV2\n @notice Interface for Circle's CCTP TokenMessengerV2 contract"
              },
              "fullyImplemented": false,
              "id": 964,
              "linearizedBaseContracts": [
                964
              ],
              "name": "ITokenMessengerV2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 926,
                    "nodeType": "StructuredDocumentation",
                    "src": "191:595:4",
                    "text": " @notice Burns tokens and sends a message to the destination domain for minting\n @param amount Amount of tokens to burn\n @param destinationDomain Destination domain (Chain ID in CCTP)\n @param mintRecipient Address (as bytes32) of recipient on destination domain\n @param burnToken Address of token to burn\n @param destinationCaller Authorized caller on the destination domain, as bytes32\n @param maxFee Maximum fee to pay on the destination domain\n @param minFinalityThreshold Minimum finality at which the message should be attested to"
                  },
                  "functionSelector": "8e0250ee",
                  "id": 943,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositForBurn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "824:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "848:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "848:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "mintRecipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "882:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "burnToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "913:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "913:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "destinationCaller",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "940:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "maxFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "975:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "975:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "minFinalityThreshold",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "999:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "999:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "814:218:4"
                  },
                  "returnParameters": {
                    "id": 942,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1041:0:4"
                  },
                  "scope": 964,
                  "src": "791:251:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 944,
                    "nodeType": "StructuredDocumentation",
                    "src": "1048:710:4",
                    "text": " @notice Burns tokens and sends a message with hook data to the destination domain for minting\n @param amount Amount of tokens to burn\n @param destinationDomain Destination domain (Chain ID in CCTP)\n @param mintRecipient Address (as bytes32) of recipient on destination domain\n @param burnToken Address of token to burn\n @param destinationCaller Authorized caller on the destination domain, as bytes32\n @param maxFee Maximum fee to pay on the destination domain\n @param minFinalityThreshold Minimum finality at which the message should be attested to\n @param hookData Hook data to append to burn message for interpretation on destination domain"
                  },
                  "functionSelector": "779b432d",
                  "id": 963,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositForBurnWithHook",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 961,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1804:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1804:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1828:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1828:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "mintRecipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1862:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1862:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "burnToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1893:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 954,
                        "mutability": "mutable",
                        "name": "destinationCaller",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1920:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 953,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1920:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "maxFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1955:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1955:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "minFinalityThreshold",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1979:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1979:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 960,
                        "mutability": "mutable",
                        "name": "hookData",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "2016:23:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 959,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2016:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1794:251:4"
                  },
                  "returnParameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2054:0:4"
                  },
                  "scope": 964,
                  "src": "1763:292:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 965,
              "src": "157:1900:4"
            }
          ],
          "src": "32:2027:4"
        },
        "id": 4
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/core/MultichainPayrollWithHook.sol": {
        "MultichainPayrollWithHook": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdc",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_tokenMessenger",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_hookWrapper",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_targetMultichainPayroll",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "DirectTransferExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "lending",
                  "type": "bool"
                }
              ],
              "name": "EmployeeRouteSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LendingDepositExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                },
                {
                  "indexed": false,
                  "internalType": "enum MultichainPayrollWithHook.PaymentType",
                  "name": "paymentType",
                  "type": "uint8"
                }
              ],
              "name": "PaymentReceived",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                }
              ],
              "name": "PaymentRequestedFromHook",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                }
              ],
              "name": "PaymentSent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usdcAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "receivedAmount",
                  "type": "uint256"
                }
              ],
              "name": "TokenSwapExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "USDCWithdrawn",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "USDC",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "employee",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MultichainPayrollWithHook.Employee[]",
                  "name": "employees",
                  "type": "tuple[]"
                }
              ],
              "name": "batchPayEmployees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "directTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "handleReceiveMessage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "hookWrapper",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "routes",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "destinationCCTPDomain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "desiredERC20Token",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "lendingEnabled",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "lending",
                  "type": "bool"
                }
              ],
              "name": "setRouteInfo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "targetMultichainPayroll",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tokenMessenger",
              "outputs": [
                {
                  "internalType": "contract ITokenMessengerV2",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "withdrawUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "batchPayEmployees((address,uint256)[])": {
                "details": "Uses contract's USDC balance",
                "params": {
                  "employees": "Array of employee addresses and payment amounts"
                }
              },
              "handleReceiveMessage(address,uint256)": {
                "details": "hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)",
                "params": {
                  "amount": "The USDC amount received",
                  "recipient": "The employee receiving the payment"
                }
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "setRouteInfo(address,uint32,address,bool)": {
                "params": {
                  "domain": "The CCTP domain where the employee will receive payments",
                  "employee": "The address of the employee",
                  "lending": "Whether to deposit to DeFi protocols or transfer directly",
                  "token": "The token the employee wants to receive (can be USDC)"
                }
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              },
              "withdrawUSDC(uint256,address)": {
                "params": {
                  "amount": "The amount of USDC to withdraw",
                  "recipient": "The address to send the withdrawn USDC to"
                }
              }
            },
            "title": "MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2664:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:5",
                            "type": ""
                          }
                        ],
                        "src": "7:143:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "284:625:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "331:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "340:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "343:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "333:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "333:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "333:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "305:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "314:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "301:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "301:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "326:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "297:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "297:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "294:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "357:128:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "372:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "386:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "376:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "401:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "447:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "458:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "443:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "443:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "467:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "411:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "411:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "401:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "495:129:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "510:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "524:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "514:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "540:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "586:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "597:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "582:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "582:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "606:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "550:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "550:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "540:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "634:129:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "649:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "663:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "653:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "679:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "725:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "736:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "721:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "721:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "745:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "689:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "689:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "679:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "773:129:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "788:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "802:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "792:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "818:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "864:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "875:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "860:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "860:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "884:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "828:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "828:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "818:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "230:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "241:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "253:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "261:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "269:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "277:6:5",
                            "type": ""
                          }
                        ],
                        "src": "156:753:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1007:272:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1017:53:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1064:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1031:32:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1031:39:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1021:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1079:78:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1145:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1150:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1086:58:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1086:71:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1192:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1199:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1188:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1188:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1206:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1211:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1166:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1166:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1166:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1227:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1238:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1265:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "1243:21:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1243:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1234:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1234:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "988:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "995:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1003:3:5",
                            "type": ""
                          }
                        ],
                        "src": "915:364:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1403:195:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1413:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1425:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1436:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1421:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1421:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1413:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1460:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1471:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1456:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1456:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "1479:4:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1485:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1475:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1475:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1449:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1449:47:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1505:86:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1577:6:5"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "1586:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1513:63:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1513:78:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1505:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1375:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1387:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1398:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1285:313:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1663:40:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1674:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1690:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1684:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1684:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1674:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1646:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1656:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1604:99:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1805:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1822:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1827:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1815:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1815:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1815:19:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1843:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1862:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1867:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1858:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1858:14:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1843:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1777:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1782:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "1793:11:5",
                            "type": ""
                          }
                        ],
                        "src": "1709:169:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1929:51:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1939:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "1950:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1950:24:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1939:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1911:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1921:7:5",
                            "type": ""
                          }
                        ],
                        "src": "1884:96:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2031:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2041:65:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2056:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2063:42:5",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2052:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2041:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2013:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2023:7:5",
                            "type": ""
                          }
                        ],
                        "src": "1986:126:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2167:258:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2177:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2186:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2181:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2246:63:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "2271:3:5"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2276:1:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2267:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2267:11:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2290:3:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2295:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2286:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2286:11:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2280:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2280:18:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2260:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2260:39:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2260:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2207:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2210:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2204:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2204:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2218:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2220:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2229:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2232:2:5",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2225:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2225:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2220:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2200:3:5",
                                "statements": []
                              },
                              "src": "2196:113:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2343:76:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "2393:3:5"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "2398:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2389:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2389:16:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2407:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2382:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2382:27:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2382:27:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2324:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2327:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2321:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2321:13:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2318:2:5"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "2149:3:5",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "2154:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2159:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2118:307:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2479:54:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2489:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2507:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2514:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2503:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2503:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2523:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2519:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2519:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2499:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2499:28:5"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2489:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2462:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2472:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2431:102:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2582:79:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2639:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2648:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2651:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2641:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2641:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2641:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2605:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2630:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "2612:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2612:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2602:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2602:35:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2595:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2595:43:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2592:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2575:5:5",
                            "type": ""
                          }
                        ],
                        "src": "2539:122:5"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "6101006040523480156200001257600080fd5b5060405162002ab738038062002ab783398181016040528101906200003891906200042d565b60006200004a6200040e60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602f815260200162002a88602f91399062000177576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016e9190620004da565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141560405180606001604052806039815260200162002a4f603991399062000207576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001fe9190620004da565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141560405180606001604052806036815260200162002a19603691399062000297576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028e9190620004da565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280603c8152602001620029dd603c91399062000327576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200031e9190620004da565b60405180910390fd5b508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505050620005af565b600033905090565b600081519050620004278162000595565b92915050565b600080600080608085870312156200044457600080fd5b6000620004548782880162000416565b9450506020620004678782880162000416565b93505060406200047a8782880162000416565b92505060606200048d8782880162000416565b91505092959194509250565b6000620004a682620004fe565b620004b2818562000509565b9350620004c48185602086016200054e565b620004cf8162000584565b840191505092915050565b60006020820190508181036000830152620004f6818462000499565b905092915050565b600081519050919050565b600082825260208201905092915050565b600062000527826200052e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200056e57808201518184015260208101905062000551565b838111156200057e576000848401525b50505050565b6000601f19601f8301169050919050565b620005a0816200051a565b8114620005ac57600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6123b06200062d600039806107ae528061181e528061186a525080610a925250806107d2528061170e52806118a85250806103ea5280610ba45280610c045280610c745280610e23528061108352806110fa52806116d252806118e752506123b06000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636c61d60f1161008c5780638da5cb5b116100665780638da5cb5b146101c6578063a34971f7146101e4578063d740965914610200578063f2fde38b14610232576100cf565b80636c61d60f14610182578063715018a61461019e57806389a30271146101a8576100cf565b80630c1241b5146100d45780632055a637146100f0578063460cb6a61461010c578063461178301461012a57806349843f01146101485780635a316f7a14610164575b600080fd5b6100ee60048036038101906100e99190611c8e565b61024e565b005b61010a60048036038101906101059190611bf7565b6104e8565b005b6101146107ac565b6040516101219190611e24565b60405180910390f35b6101326107d0565b60405161013f9190611f29565b60405180910390f35b610162600480360381019061015d9190611b94565b6107f4565b005b61016c610a90565b6040516101799190611e24565b60405180910390f35b61019c60048036038101906101979190611b58565b610ab4565b005b6101a6610cb4565b005b6101b0610e21565b6040516101bd9190611e24565b60405180910390f35b6101ce610e45565b6040516101db9190611e24565b60405180910390f35b6101fe60048036038101906101f99190611b58565b610e6e565b005b61021a60048036038101906102159190611b2f565b6112de565b60405161022993929190612066565b60405180910390f35b61024c60048036038101906102479190611b2f565b611345565b005b610256611537565b73ffffffffffffffffffffffffffffffffffffffff16610274610e45565b73ffffffffffffffffffffffffffffffffffffffff16146102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a913990610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9190611f44565b60405180910390fd5b506000821160405180606001604052806038815260200161234360389139906103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de9190611f44565b60405180910390fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610443929190611e3f565b602060405180830381600087803b15801561045d57600080fd5b505af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190611c3c565b508073ffffffffffffffffffffffffffffffffffffffff167f2aa7fb97600ea702b454359fc3d02ae9fa48367e7155505d38cee896e5b5aae7836040516104dc9190611f66565b60405180910390a25050565b6104f0611537565b73ffffffffffffffffffffffffffffffffffffffff1661050e610e45565b73ffffffffffffffffffffffffffffffffffffffff1614610597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b828290508110156107a75760008383838181106105b357fe5b9050604002018036038101906105c99190611c65565b90506105d48161153f565b600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900460ff16151515158152505090506106ca8260000151611635565b60405180606001604052806038815260200161230b6038913990610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9190611f44565b60405180910390fd5b5061073c8260000151836020015183600001516116d0565b816000015173ffffffffffffffffffffffffffffffffffffffff167ff71683287bc1001960d58bc3c44fdf0a48968c40e7dd1e89664eddf3693bbf9d83602001518360000151604051610790929190611fb8565b60405180910390a25050808060010191505061059a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107fc611537565b73ffffffffffffffffffffffffffffffffffffffff1661081a610e45565b73ffffffffffffffffffffffffffffffffffffffff16146108a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a91399061092e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109259190611f44565b60405180910390fd5b5060405180606001604052808463ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001821515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160186101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff167fa60aa31da7f23b6c3cfe7606fad5f49495d86b0a8c134c3985b840284cbd8d88848484604051610a8293929190612066565b60405180910390a250505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a913990610b3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b369190611f44565b60405180910390fd5b50600081116040518060600160405280603881526020016123436038913990610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b959190611f44565b60405180910390fd5b50610bca7f0000000000000000000000000000000000000000000000000000000000000000828461196a565b8173ffffffffffffffffffffffffffffffffffffffff167fe3ade051475bed3fd2d4a21a238ed43abc7cce06f9fe24b68382a8dcc7fe1f167f000000000000000000000000000000000000000000000000000000000000000083604051610c32929190611e3f565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f0eb95b360b92e2136a60d877820272dd60a5c2d716a504bdbdc3b629c89a8fec7f00000000000000000000000000000000000000000000000000000000000000008360066000604051610ca89493929190611e68565b60405180910390a25050565b610cbc611537565b73ffffffffffffffffffffffffffffffffffffffff16610cda610e45565b73ffffffffffffffffffffffffffffffffffffffff1614610d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a913990610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef09190611f44565b60405180910390fd5b50600081116040518060600160405280603881526020016123436038913990610f58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4f9190611f44565b60405180910390fd5b506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900460ff161515151581525050905060008160200151905060008473ffffffffffffffffffffffffffffffffffffffff167f6e75bd20bca1e1292782409b1c6d6df18c4b412d2b2eb216b6e8798fd92b63427f00000000000000000000000000000000000000000000000000000000000000008686600001516040516110b793929190611ead565b60405180910390a260008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561114957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b905080156111b45761115b85846119fd565b94508573ffffffffffffffffffffffffffffffffffffffff167f22939cf4a3ee95f380e4cfe7c0fbd42fd1c7427618122df3665dbf34e00160918685886040516111a793929190611f81565b60405180910390a2600191505b836040015115611222576111c9838688611a08565b8573ffffffffffffffffffffffffffffffffffffffff167f4252d8e852cf9c67f19b86ae3bf4c88abeca15875b71dd57e2f4ee6a57b0a9808487604051611211929190611e3f565b60405180910390a26002915061127e565b61122d83868861196a565b8573ffffffffffffffffffffffffffffffffffffffff167fe3ade051475bed3fd2d4a21a238ed43abc7cce06f9fe24b68382a8dcc7fe1f168487604051611275929190611e3f565b60405180910390a25b8573ffffffffffffffffffffffffffffffffffffffff167f0eb95b360b92e2136a60d877820272dd60a5c2d716a504bdbdc3b629c89a8fec84878760000151866040516112ce9493929190611ee4565b60405180910390a2505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900463ffffffff16908060000160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160189054906101000a900460ff16905083565b61134d611537565b73ffffffffffffffffffffffffffffffffffffffff1661136b610e45565b73ffffffffffffffffffffffffffffffffffffffff16146113f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561147a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122e56026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a9139906115ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c59190611f44565b60405180910390fd5b5060008160200151116040518060600160405280603881526020016123436038913990611631576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116289190611f44565b60405180910390fd5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161174b929190611e3f565b602060405180830381600087803b15801561176557600080fd5b505af1158015611779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179d9190611c3c565b506000636c61d60f60e01b84846040516024016117bb929190611e3f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060007f000000000000000000000000000000000000000000000000000000000000000060601b82604051602001611852929190611dfc565b6040516020818303038152906040529050600061188e7f0000000000000000000000000000000000000000000000000000000000000000611a0d565b905060008060001b905060006101f4905060006103e890507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663779b432d8989877f00000000000000000000000000000000000000000000000000000000000000008888888d6040518963ffffffff1660e01b815260040161192d989796959493929190611fe1565b600060405180830381600087803b15801561194757600080fd5b505af115801561195b573d6000803e3d6000fd5b50505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016119a5929190611e3f565b602060405180830381600087803b1580156119bf57600080fd5b505af11580156119d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f79190611c3c565b50505050565b600082905092915050565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660001b9050919050565b600081359050611a3f8161225e565b92915050565b60008083601f840112611a5757600080fd5b8235905067ffffffffffffffff811115611a7057600080fd5b602083019150836040820283011115611a8857600080fd5b9250929050565b600081359050611a9e81612275565b92915050565b600081519050611ab381612275565b92915050565b600060408284031215611acb57600080fd5b611ad5604061209d565b90506000611ae584828501611a30565b6000830152506020611af984828501611b05565b60208301525092915050565b600081359050611b148161228c565b92915050565b600081359050611b29816122a3565b92915050565b600060208284031215611b4157600080fd5b6000611b4f84828501611a30565b91505092915050565b60008060408385031215611b6b57600080fd5b6000611b7985828601611a30565b9250506020611b8a85828601611b05565b9150509250929050565b60008060008060808587031215611baa57600080fd5b6000611bb887828801611a30565b9450506020611bc987828801611b1a565b9350506040611bda87828801611a30565b9250506060611beb87828801611a8f565b91505092959194509250565b60008060208385031215611c0a57600080fd5b600083013567ffffffffffffffff811115611c2457600080fd5b611c3085828601611a45565b92509250509250929050565b600060208284031215611c4e57600080fd5b6000611c5c84828501611aa4565b91505092915050565b600060408284031215611c7757600080fd5b6000611c8584828501611ab9565b91505092915050565b60008060408385031215611ca157600080fd5b6000611caf85828601611b05565b9250506020611cc085828601611a30565b9150509250929050565b611cd381612111565b82525050565b611ce281612123565b82525050565b611cf9611cf48261212f565b61222d565b82525050565b611d088161215b565b82525050565b6000611d19826120ce565b611d2381856120e4565b9350611d338185602086016121fa565b611d3c81612239565b840191505092915050565b6000611d52826120ce565b611d5c81856120f5565b9350611d6c8185602086016121fa565b80840191505092915050565b611d81816121b2565b82525050565b611d90816121d6565b82525050565b611d9f816121e8565b82525050565b6000611db0826120d9565b611dba8185612100565b9350611dca8185602086016121fa565b611dd381612239565b840191505092915050565b611de781612198565b82525050565b611df6816121a2565b82525050565b6000611e088285611ce8565b601482019150611e188284611d47565b91508190509392505050565b6000602082019050611e396000830184611cca565b92915050565b6000604082019050611e546000830185611cca565b611e616020830184611dde565b9392505050565b6000608082019050611e7d6000830187611cca565b611e8a6020830186611dde565b611e976040830185611d96565b611ea46060830184611d87565b95945050505050565b6000606082019050611ec26000830186611cca565b611ecf6020830185611dde565b611edc6040830184611ded565b949350505050565b6000608082019050611ef96000830187611cca565b611f066020830186611dde565b611f136040830185611ded565b611f206060830184611d87565b95945050505050565b6000602082019050611f3e6000830184611d78565b92915050565b60006020820190508181036000830152611f5e8184611da5565b905092915050565b6000602082019050611f7b6000830184611dde565b92915050565b6000606082019050611f966000830186611dde565b611fa36020830185611cca565b611fb06040830184611dde565b949350505050565b6000604082019050611fcd6000830185611dde565b611fda6020830184611ded565b9392505050565b600061010082019050611ff7600083018b611dde565b612004602083018a611ded565b6120116040830189611cff565b61201e6060830188611cca565b61202b6080830187611cff565b61203860a0830186611dde565b61204560c0830185611ded565b81810360e08301526120578184611d0e565b90509998505050505050505050565b600060608201905061207b6000830186611ded565b6120886020830185611cca565b6120956040830184611cd9565b949350505050565b6000604051905081810181811067ffffffffffffffff821117156120c4576120c3612237565b5b8060405250919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061211c82612178565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000819050919050565b60008190506121738261224a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006121bd826121c4565b9050919050565b60006121cf82612178565b9050919050565b60006121e182612165565b9050919050565b60006121f3826121a2565b9050919050565b60005b838110156122185780820151818401526020810190506121fd565b83811115612227576000848401525b50505050565b6000819050919050565bfe5b6000601f19601f8301169050919050565b6003811061225b5761225a612237565b5b50565b61226781612111565b811461227257600080fd5b50565b61227e81612123565b811461228957600080fd5b50565b61229581612198565b81146122a057600080fd5b50565b6122ac816121a2565b81146122b757600080fd5b5056fe4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d756c7469636861696e506179726f6c6c57697468486f6f6b3a20456d706c6f79656520726f757465206e6f7420636f6e666967757265644d756c7469636861696e506179726f6c6c57697468486f6f6b3a20416d6f756e74206d7573742062652067726561746572207468616e2030a2646970667358221220911b7a8dbeb706516474a452bb0e7a25929c87e3e2af094d5e5156e707efd5a164736f6c634300070600334d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c6964204d756c7469636861696e506179726f6c6c20616464726573734d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420486f6f6b5772617070657220616464726573734d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420546f6b656e4d657373656e67657220616464726573734d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420555344432061646472657373",
              "opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2AB7 CODESIZE SUB DUP1 PUSH3 0x2AB7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A PUSH3 0x40E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A88 PUSH1 0x2F SWAP2 CODECOPY SWAP1 PUSH3 0x177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16E SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A4F PUSH1 0x39 SWAP2 CODECOPY SWAP1 PUSH3 0x207 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1FE SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A19 PUSH1 0x36 SWAP2 CODECOPY SWAP1 PUSH3 0x297 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x29DD PUSH1 0x3C SWAP2 CODECOPY SWAP1 PUSH3 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x31E SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x5AF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x427 DUP2 PUSH3 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x454 DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x467 DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x47A DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x48D DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A6 DUP3 PUSH3 0x4FE JUMP JUMPDEST PUSH3 0x4B2 DUP2 DUP6 PUSH3 0x509 JUMP JUMPDEST SWAP4 POP PUSH3 0x4C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x54E JUMP JUMPDEST PUSH3 0x4CF DUP2 PUSH3 0x584 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4F6 DUP2 DUP5 PUSH3 0x499 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x527 DUP3 PUSH3 0x52E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x56E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x57E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5A0 DUP2 PUSH3 0x51A JUMP JUMPDEST DUP2 EQ PUSH3 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x23B0 PUSH3 0x62D PUSH1 0x0 CODECOPY DUP1 PUSH2 0x7AE MSTORE DUP1 PUSH2 0x181E MSTORE DUP1 PUSH2 0x186A MSTORE POP DUP1 PUSH2 0xA92 MSTORE POP DUP1 PUSH2 0x7D2 MSTORE DUP1 PUSH2 0x170E MSTORE DUP1 PUSH2 0x18A8 MSTORE POP DUP1 PUSH2 0x3EA MSTORE DUP1 PUSH2 0xBA4 MSTORE DUP1 PUSH2 0xC04 MSTORE DUP1 PUSH2 0xC74 MSTORE DUP1 PUSH2 0xE23 MSTORE DUP1 PUSH2 0x1083 MSTORE DUP1 PUSH2 0x10FA MSTORE DUP1 PUSH2 0x16D2 MSTORE DUP1 PUSH2 0x18E7 MSTORE POP PUSH2 0x23B0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C61D60F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA34971F7 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xD7409659 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x232 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6C61D60F EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1A8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xC1241B5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2055A637 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x460CB6A6 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x46117830 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x49843F01 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5A316F7A EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0xCB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x274 PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2AA7FB97600EA702B454359FC3D02AE9FA48367E7155505D38CEE896E5B5AAE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x50E PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x5B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D4 DUP2 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x6CA DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x230B PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x73C DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x16D0 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF71683287BC1001960D58BC3C44FDF0A48968C40E7DD1E89664EDDF3693BBF9D DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7FC PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81A PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA60AA31DA7F23B6C3CFE7606FAD5F49495D86B0A8C134C3985B840284CBD8D88 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBCA PUSH32 0x0 DUP3 DUP5 PUSH2 0x196A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC PUSH32 0x0 DUP4 PUSH1 0x6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDA PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xEF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6E75BD20BCA1E1292782409B1C6D6DF18C4B412D2B2EB216B6E8798FD92B6342 PUSH32 0x0 DUP7 DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x10B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1149 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x115B DUP6 DUP5 PUSH2 0x19FD JUMP JUMPDEST SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22939CF4A3EE95F380E4CFE7C0FBD42FD1C7427618122DF3665DBF34E0016091 DUP7 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x11A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x1222 JUMPI PUSH2 0x11C9 DUP4 DUP7 DUP9 PUSH2 0x1A08 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4252D8E852CF9C67F19B86AE3BF4C88ABECA15875B71DD57E2F4EE6A57B0A980 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1211 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SWAP2 POP PUSH2 0x127E JUMP JUMPDEST PUSH2 0x122D DUP4 DUP7 DUP9 PUSH2 0x196A JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1275 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC DUP5 DUP8 DUP8 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0x12CE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x134D PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x136B PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22E5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174B SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1779 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179D SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0x6C61D60F PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17BB SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x60 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1852 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x188E PUSH32 0x0 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH2 0x1F4 SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x779B432D DUP10 DUP10 DUP8 PUSH32 0x0 DUP9 DUP9 DUP9 DUP14 PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x195B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A5 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19F7 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3F DUP2 PUSH2 0x225E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9E DUP2 PUSH2 0x2275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB3 DUP2 PUSH2 0x2275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AE5 DUP5 DUP3 DUP6 ADD PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1AF9 DUP5 DUP3 DUP6 ADD PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B14 DUP2 PUSH2 0x228C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B29 DUP2 PUSH2 0x22A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B4F DUP5 DUP3 DUP6 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B79 DUP6 DUP3 DUP7 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B8A DUP6 DUP3 DUP7 ADD PUSH2 0x1B05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BB8 DUP8 DUP3 DUP9 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BC9 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BDA DUP8 DUP3 DUP9 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1BEB DUP8 DUP3 DUP9 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C30 DUP6 DUP3 DUP7 ADD PUSH2 0x1A45 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C5C DUP5 DUP3 DUP6 ADD PUSH2 0x1AA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C85 DUP5 DUP3 DUP6 ADD PUSH2 0x1AB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CAF DUP6 DUP3 DUP7 ADD PUSH2 0x1B05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x2111 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CE2 DUP2 PUSH2 0x2123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CF9 PUSH2 0x1CF4 DUP3 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x222D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D08 DUP2 PUSH2 0x215B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D19 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x1D23 DUP2 DUP6 PUSH2 0x20E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x1D3C DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D52 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x1D5C DUP2 DUP6 PUSH2 0x20F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21FA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D81 DUP2 PUSH2 0x21B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D90 DUP2 PUSH2 0x21D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x21E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB0 DUP3 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x1DBA DUP2 DUP6 PUSH2 0x2100 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x1DD3 DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE7 DUP2 PUSH2 0x2198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DF6 DUP2 PUSH2 0x21A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E08 DUP3 DUP6 PUSH2 0x1CE8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E18 DUP3 DUP5 PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E54 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1E61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E7D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1E8A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1E97 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1EA4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D87 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EC2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1ECF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EF9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1F06 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1F13 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x1F20 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D87 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5E DUP2 DUP5 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F96 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1FA3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1FB0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1FDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1FF7 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x2011 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x201E PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x202B PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x2038 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x2045 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1DED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x2057 DUP2 DUP5 PUSH2 0x1D0E JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x207B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x2088 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x2095 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20C4 JUMPI PUSH2 0x20C3 PUSH2 0x2237 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP3 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2173 DUP3 PUSH2 0x224A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD DUP3 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CF DUP3 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E1 DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F3 DUP3 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2218 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2227 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x225B JUMPI PUSH2 0x225A PUSH2 0x2237 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2267 DUP2 PUSH2 0x2111 JUMP JUMPDEST DUP2 EQ PUSH2 0x2272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x227E DUP2 PUSH2 0x2123 JUMP JUMPDEST DUP2 EQ PUSH2 0x2289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2295 DUP2 PUSH2 0x2198 JUMP JUMPDEST DUP2 EQ PUSH2 0x22A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22AC DUP2 PUSH2 0x21A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4D PUSH22 0x6C7469636861696E506179726F6C6C57697468486F6F PUSH12 0x3A20496E76616C6964206164 PUSH5 0x726573734F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734D756C7469636861696E506179726F6C PUSH13 0x57697468486F6F6B3A20456D70 PUSH13 0x6F79656520726F757465206E6F PUSH21 0x20636F6E666967757265644D756C7469636861696E POP PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20416D6F75 PUSH15 0x74206D757374206265206772656174 PUSH6 0x72207468616E KECCAK256 ADDRESS LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SHL PUSH27 0x8DBEB706516474A452BB0E7A25929C87E3E2AF094D5E5156E707EF 0xD5 LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER 0x4D PUSH22 0x6C7469636861696E506179726F6C6C57697468486F6F PUSH12 0x3A20496E76616C6964204D75 PUSH13 0x7469636861696E506179726F6C PUSH13 0x20616464726573734D756C7469 PUSH4 0x6861696E POP PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20496E7661 PUSH13 0x696420486F6F6B577261707065 PUSH19 0x20616464726573734D756C7469636861696E50 PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20496E7661 PUSH13 0x696420546F6B656E4D65737365 PUSH15 0x67657220616464726573734D756C74 PUSH10 0x636861696E506179726F PUSH13 0x6C57697468486F6F6B3A20496E PUSH23 0x616C696420555344432061646472657373000000000000 ",
              "sourceMap": "485:12534:3:-:0;;;3880:596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:17:0;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;4023:1:3;4006:19;;:5;:19;;;;4027:18;;;;;;;;;;;;;;;;;3998:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4091:1;4064:29;;:15;:29;;;;4095;;;;;;;;;;;;;;;;;4056:69;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4167:1;4143:26;;:12;:26;;;;4171;;;;;;;;;;;;;;;;;4135:63;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4252:1;4216:38;;:24;:38;;;;4256:32;;;;;;;;;;;;;;;;;4208:81;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4307:5;4300:12;;;;;;;;;;;;4357:15;4322:51;;;;;;;;;;;;4397:12;4383:26;;;;;;;;;;;;4445:24;4419:50;;;;;;;;;;;;3880:596;;;;485:12534;;598:104:2;651:15;685:10;678:17;;598:104;:::o;7:143:5:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:753::-;;;;;326:3;314:9;305:7;301:23;297:33;294:2;;;343:1;340;333:12;294:2;386:1;411:64;467:7;458:6;447:9;443:22;411:64;:::i;:::-;401:74;;357:128;524:2;550:64;606:7;597:6;586:9;582:22;550:64;:::i;:::-;540:74;;495:129;663:2;689:64;745:7;736:6;725:9;721:22;689:64;:::i;:::-;679:74;;634:129;802:2;828:64;884:7;875:6;864:9;860:22;828:64;:::i;:::-;818:74;;773:129;284:625;;;;;;;:::o;915:364::-;;1031:39;1064:5;1031:39;:::i;:::-;1086:71;1150:6;1145:3;1086:71;:::i;:::-;1079:78;;1166:52;1211:6;1206:3;1199:4;1192:5;1188:16;1166:52;:::i;:::-;1243:29;1265:6;1243:29;:::i;:::-;1238:3;1234:39;1227:46;;1007:272;;;;;:::o;1285:313::-;;1436:2;1425:9;1421:18;1413:26;;1485:9;1479:4;1475:20;1471:1;1460:9;1456:17;1449:47;1513:78;1586:4;1577:6;1513:78;:::i;:::-;1505:86;;1403:195;;;;:::o;1604:99::-;;1690:5;1684:12;1674:22;;1663:40;;;:::o;1709:169::-;;1827:6;1822:3;1815:19;1867:4;1862:3;1858:14;1843:29;;1805:73;;;;:::o;1884:96::-;;1950:24;1968:5;1950:24;:::i;:::-;1939:35;;1929:51;;;:::o;1986:126::-;;2063:42;2056:5;2052:54;2041:65;;2031:81;;;:::o;2118:307::-;2186:1;2196:113;2210:6;2207:1;2204:13;2196:113;;;2295:1;2290:3;2286:11;2280:18;2276:1;2271:3;2267:11;2260:39;2232:2;2229:1;2225:10;2220:15;;2196:113;;;2327:6;2324:1;2321:13;2318:2;;;2407:1;2398:6;2393:3;2389:16;2382:27;2318:2;2167:258;;;;:::o;2431:102::-;;2523:2;2519:7;2514:2;2507:5;2503:14;2499:28;2489:38;;2479:54;;;:::o;2539:122::-;2612:24;2630:5;2612:24;:::i;:::-;2605:5;2602:35;2592:2;;2651:1;2648;2641:12;2592:2;2582:79;:::o;485:12534:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:16406:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:5",
                            "type": ""
                          }
                        ],
                        "src": "7:139:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "320:277:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "369:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "378:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "381:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "371:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "371:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "371:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "348:6:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "356:4:5",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "344:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "344:17:5"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "363:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "340:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "340:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "333:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "333:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "330:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "394:30:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "417:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "404:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "394:6:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "467:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "476:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "479:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "469:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "469:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "469:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "439:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "447:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "436:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "436:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "433:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "492:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "508:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "516:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "504:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "504:17:5"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "492:8:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "575:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "584:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "587:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "577:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "577:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "577:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "540:8:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "554:6:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "562:4:5",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "550:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "550:17:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "536:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "536:32:5"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "570:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "533:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "533:41:5"
                              },
                              "nodeType": "YulIf",
                              "src": "530:2:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "287:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "295:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "303:8:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "313:6:5",
                            "type": ""
                          }
                        ],
                        "src": "203:394:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "652:84:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "662:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "684:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "671:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "671:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "662:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "724:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:23:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "700:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "700:30:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "630:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "638:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "646:5:5",
                            "type": ""
                          }
                        ],
                        "src": "603:133:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "802:77:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "812:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "821:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "867:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "843:23:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "843:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "843:30:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "780:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "788:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "796:5:5",
                            "type": ""
                          }
                        ],
                        "src": "742:137:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1014:432:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1058:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1067:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1070:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1060:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1060:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1060:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1035:3:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1031:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1031:19:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1052:4:5",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1027:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1027:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1024:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1083:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1107:4:5",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1092:14:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1092:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:5:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1122:154:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1161:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1175:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1165:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1201:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1208:4:5",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1197:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1197:16:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "1240:9:5"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "1251:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1236:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1236:22:5"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "1260:3:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1215:20:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1215:49:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "1190:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1190:75:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1190:75:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1286:153:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1323:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1337:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1327:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1364:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1371:4:5",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1360:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1360:16:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "1403:9:5"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "1414:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1399:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1399:22:5"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "1423:3:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "1378:20:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1378:49:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "1353:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1353:75:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1353:75:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_struct$_Employee_$328_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "989:9:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1000:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1008:5:5",
                            "type": ""
                          }
                        ],
                        "src": "934:512:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1504:87:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1514:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1536:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1523:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1523:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1514:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1579:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1552:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1552:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1552:33:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1482:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1490:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1498:5:5",
                            "type": ""
                          }
                        ],
                        "src": "1452:139:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1648:86:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1658:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1680:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1667:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1667:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1722:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:25:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:32:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1696:32:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1626:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1634:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1642:5:5",
                            "type": ""
                          }
                        ],
                        "src": "1597:137:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1806:196:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1852:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1861:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1864:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1854:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1854:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1854:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1827:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1836:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1823:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1823:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1848:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1819:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1819:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1816:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1878:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1893:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1907:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1897:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1922:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1957:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1968:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1953:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1953:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1977:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1932:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1932:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1922:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1776:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1787:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1799:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1740:262:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2091:324:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2137:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2146:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2149:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2139:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2139:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2139:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2112:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2121:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2108:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2108:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2133:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2104:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2104:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2101:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2163:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2178:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2192:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2182:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2207:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2242:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2253:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2238:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2238:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2262:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2217:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2217:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2207:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2290:118:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2305:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2319:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2309:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2335:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2370:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2381:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2366:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2366:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2390:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2345:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2345:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2335:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2053:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2064:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2076:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2084:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2008:407:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2534:577:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2581:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2590:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2593:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2583:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2583:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2583:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2555:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2564:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2551:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2551:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2576:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2547:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2547:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2544:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2607:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2622:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2636:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2626:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2651:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2686:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2697:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2682:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2682:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2706:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2661:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2661:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2651:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2734:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2749:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2763:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2753:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2779:62:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2813:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2824:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2809:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2809:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2833:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint32",
                                      "nodeType": "YulIdentifier",
                                      "src": "2789:19:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2789:52:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2779:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2861:118:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2876:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2890:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2880:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2906:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2941:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2952:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2937:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2937:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2961:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2916:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2916:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2906:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2989:115:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3004:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3018:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3008:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3034:60:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3066:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3077:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3062:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3062:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3086:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "3044:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3044:50:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3034:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint32t_addresst_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2480:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2491:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2503:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2511:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2519:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2527:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2421:690:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3245:351:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3291:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3300:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3303:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3293:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3293:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3293:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3266:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3275:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3262:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3262:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3287:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3258:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3258:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3255:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3317:272:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3332:45:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3363:9:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3374:1:5",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3359:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3359:17:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3346:12:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3346:31:5"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3336:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3424:16:5",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3433:1:5",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3436:1:5",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3426:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3426:12:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3426:12:5"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3396:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3404:18:5",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3393:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3393:30:5"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3390:2:5"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3454:125:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3551:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3562:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3547:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3547:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3571:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3472:74:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3472:107:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3454:6:5"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3462:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3207:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3218:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3230:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3238:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3117:479:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3676:204:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3722:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3731:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3734:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3724:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3724:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3724:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3697:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3706:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3693:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3693:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3718:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3689:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3689:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3686:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3748:125:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3763:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3777:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3767:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3792:71:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3835:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3846:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3831:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3831:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3855:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3802:28:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3802:61:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3792:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3646:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3657:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3669:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3602:278:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3977:221:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4023:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4032:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4035:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4025:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4025:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4025:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3998:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4007:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3994:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3994:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4019:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3990:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3990:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3987:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4049:142:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4064:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4078:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4068:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4093:88:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4153:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4164:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4149:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4149:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4173:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_Employee_$328_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4103:45:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4103:78:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4093:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_Employee_$328_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3947:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3958:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3970:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3886:312:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4287:324:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4333:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4342:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4345:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4335:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4335:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4335:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4308:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4317:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4304:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4304:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4329:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4300:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4297:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4359:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4374:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4388:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4378:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4403:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4438:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4449:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4434:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4434:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4458:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4413:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4413:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4403:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4486:118:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4501:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4515:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4505:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4531:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4566:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4577:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4562:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4562:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4586:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4541:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4541:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4531:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4249:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4260:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4272:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4280:6:5",
                            "type": ""
                          }
                        ],
                        "src": "4204:407:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4682:53:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4699:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4722:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4704:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4704:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4692:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4692:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4692:37:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4670:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4677:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4617:118:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4800:50:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4817:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4837:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "4822:14:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4822:21:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4810:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4810:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4810:34:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4788:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4795:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4741:109:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4939:74:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4956:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4999:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bytes20",
                                          "nodeType": "YulIdentifier",
                                          "src": "4981:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4981:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "leftAlign_t_bytes20",
                                      "nodeType": "YulIdentifier",
                                      "src": "4961:19:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4961:45:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4949:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4949:58:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4949:58:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4927:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4934:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4856:157:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5084:53:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5101:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5124:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5106:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5106:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5094:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5094:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5094:37:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5072:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5079:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5019:118:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5233:270:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5243:52:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5289:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5257:31:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5257:38:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5247:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5304:77:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5369:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5374:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5311:57:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5311:70:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5304:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5416:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5423:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5412:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5412:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5430:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5435:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5390:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5390:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5390:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5451:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5462:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5489:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5467:21:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5467:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5458:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5458:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5451:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5214:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5221:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5229:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5143:360:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5617:265:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5627:52:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5673:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5641:31:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5641:38:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5631:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5688:95:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5771:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5776:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5695:75:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5695:88:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5688:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5818:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5825:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5814:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5814:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5832:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5837:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5792:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5792:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5792:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5853:23:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5864:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5869:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5860:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5860:16:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5853:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5598:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5605:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5613:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5509:373:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5978:91:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5995:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6056:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ITokenMessengerV2_$964_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6000:55:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6000:62:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5988:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5988:75:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5988:75:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ITokenMessengerV2_$964_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5966:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5973:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5888:181:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6153:79:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6170:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6219:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_PaymentType_$316_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6175:43:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6175:50:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6163:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6163:63:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6163:63:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_PaymentType_$316_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6141:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6148:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6075:157:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6310:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6327:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6370:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_rational_6_by_1_to_t_uint32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6332:37:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6332:44:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6320:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6320:57:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6320:57:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_rational_6_by_1_to_t_uint32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6298:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6305:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6238:145:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6481:272:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6491:53:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6538:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6505:32:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6505:39:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6495:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6553:78:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6619:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6624:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6560:58:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6560:71:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6553:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6666:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6673:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6662:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6662:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6680:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6685:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6640:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6640:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6640:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6701:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6712:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6739:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6717:21:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6717:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6708:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6708:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6701:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6462:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6469:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6477:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6389:364:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6824:53:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6841:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6864:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6846:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6846:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6834:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6834:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6834:37:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6812:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6819:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6759:118:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6946:52:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6963:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6985:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6968:16:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6968:23:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6956:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6956:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6956:36:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6934:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6941:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6883:115:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7166:250:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7239:6:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7248:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7177:61:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7177:75:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7177:75:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7261:19:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7272:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7277:2:5",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7268:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7268:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7261:3:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7290:100:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7377:6:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7386:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7297:79:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7297:93:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7290:3:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7400:10:5",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7407:3:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7400:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7137:3:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7143:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7151:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7162:3:5",
                            "type": ""
                          }
                        ],
                        "src": "7004:412:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7520:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7530:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7542:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7553:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7538:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7538:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7530:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7610:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7623:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7634:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7619:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7619:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7566:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7566:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7566:71:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7492:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7504:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7515:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7422:222:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7776:206:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7786:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7798:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7809:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7794:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7794:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7786:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7866:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7879:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7890:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7875:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7875:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7822:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7822:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7822:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7947:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7960:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7971:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7956:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7956:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7903:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7903:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7903:72:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7740:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7752:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7760:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7771:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7650:332:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8190:391:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8200:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8212:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8223:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8208:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8208:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8200:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8281:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8294:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8305:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8290:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8290:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8237:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8237:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8237:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8362:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8375:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8386:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8371:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8371:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8318:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8318:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8318:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8451:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8464:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8475:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8460:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8460:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_6_by_1_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8400:50:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8400:79:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8400:79:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "8546:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8559:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8570:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8555:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8555:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_PaymentType_$316_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8489:56:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8489:85:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8489:85:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_rational_6_by_1_t_enum$_PaymentType_$316__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8138:9:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "8150:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8158:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8166:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8174:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8185:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7988:593:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8739:286:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8749:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8761:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8772:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8757:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8757:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8749:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8829:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8842:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8853:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8838:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8838:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8785:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8785:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8785:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8910:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8923:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8934:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8919:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8919:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8866:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8866:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8990:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9003:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9014:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8999:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8999:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8948:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8948:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8948:70:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint32__to_t_address_t_uint256_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8695:9:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8707:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8715:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8723:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8734:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8587:438:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9224:382:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9234:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9246:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9257:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9242:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9242:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9234:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9315:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9328:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9339:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9324:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9324:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9271:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9271:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9271:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9396:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9409:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9420:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9405:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9405:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9352:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9352:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9352:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9476:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9489:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9500:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9485:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9485:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9434:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9434:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9434:70:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "9571:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9584:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9595:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9580:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9580:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_PaymentType_$316_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9514:56:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9514:85:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9514:85:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint32_t_enum$_PaymentType_$316__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9172:9:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "9184:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9192:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9200:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9208:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9219:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9031:575:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9735:149:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9745:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9757:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9768:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9753:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9753:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9745:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9850:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9863:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9874:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ITokenMessengerV2_$964_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9781:68:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9781:96:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9781:96:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ITokenMessengerV2_$964__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9707:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9719:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9730:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9612:272:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10008:195:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10018:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10030:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10041:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10026:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10026:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10018:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10065:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10076:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10061:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10061:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "10084:4:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10090:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10080:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10080:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10054:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10054:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10054:47:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10110:86:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10182:6:5"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10191:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10118:63:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10118:78:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10110:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9980:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9992:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10003:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9890:313:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10307:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10317:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10329:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10340:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10325:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10325:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10317:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10397:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10410:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10421:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10406:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10406:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10353:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10353:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10353:71:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10279:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10291:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10302:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10209:222:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10591:288:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10601:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10613:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10624:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10609:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10609:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10601:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10681:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10694:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10705:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10690:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10690:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10637:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10637:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10637:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10762:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10775:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10786:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10771:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10771:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10718:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10718:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10718:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10844:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10857:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10868:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10853:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10853:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10800:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10800:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10800:72:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10547:9:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10559:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10567:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10575:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10586:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10437:442:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11009:204:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11019:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11031:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11042:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11027:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11027:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11019:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11099:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11112:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11123:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11108:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11108:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11055:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11055:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11055:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11178:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11191:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11202:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11187:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11187:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11136:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11136:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11136:70:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10973:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10985:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10993:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11004:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10885:328:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11527:768:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11537:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11549:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11560:3:5",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11545:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11545:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11537:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11618:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11631:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11642:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11627:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11627:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11574:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11574:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11574:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11697:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11710:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11721:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11706:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11706:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11655:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11655:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11655:70:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11779:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11792:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11803:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11788:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11788:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11735:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11735:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11735:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11861:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11874:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11885:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11870:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11870:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11817:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11817:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11817:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "11943:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11956:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11967:3:5",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11952:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11952:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11899:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11899:73:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11899:73:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "12026:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12039:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12050:3:5",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12035:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12035:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11982:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11982:73:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11982:73:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "12107:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12120:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12131:3:5",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12116:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12116:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12065:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12065:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12065:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12157:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12168:3:5",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12153:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12153:19:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "12178:4:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12184:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12174:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12174:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12146:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12146:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12146:49:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12204:84:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "12274:6:5"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "12283:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12212:61:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12212:76:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12204:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11443:9:5",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "11455:6:5",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "11463:6:5",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "11471:6:5",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "11479:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "11487:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11495:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11503:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11511:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11522:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11219:1076:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12447:280:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12457:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12469:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12480:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12465:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12465:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12457:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12535:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12548:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12559:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12544:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12544:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12493:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12493:69:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12493:69:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12616:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12629:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12640:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12625:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12625:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12572:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12572:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12572:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "12692:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12705:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12716:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12701:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12701:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12654:37:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12654:66:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12654:66:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint32_t_address_t_bool__to_t_uint32_t_address_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12403:9:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "12415:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12423:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12431:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12442:4:5",
                            "type": ""
                          }
                        ],
                        "src": "12301:426:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12773:238:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12783:19:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12799:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12793:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12793:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "12783:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12811:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12833:6:5"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12841:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12829:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12829:17:5"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "12815:10:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12957:17:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "12959:11:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12959:13:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12959:13:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12900:10:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12912:18:5",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12897:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12897:34:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12936:10:5"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12948:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12933:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12933:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "12894:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12894:62:5"
                              },
                              "nodeType": "YulIf",
                              "src": "12891:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12990:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12994:10:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12983:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12983:22:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12983:22:5"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12757:4:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "12766:6:5",
                            "type": ""
                          }
                        ],
                        "src": "12733:278:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13075:40:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13086:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13102:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13096:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13096:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "13086:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13058:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13068:6:5",
                            "type": ""
                          }
                        ],
                        "src": "13017:98:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13180:40:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13191:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13207:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13201:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13201:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "13191:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13163:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13173:6:5",
                            "type": ""
                          }
                        ],
                        "src": "13121:99:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13321:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13338:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13343:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13331:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13331:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13331:19:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13359:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13378:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13383:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13374:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13374:14:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13359:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13293:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13298:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "13309:11:5",
                            "type": ""
                          }
                        ],
                        "src": "13226:168:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13513:34:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13523:18:5",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13538:3:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13523:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13485:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13490:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "13501:11:5",
                            "type": ""
                          }
                        ],
                        "src": "13400:147:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13649:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13666:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13671:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13659:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13659:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13659:19:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13687:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13706:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13711:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13702:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13702:14:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13687:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13621:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13626:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "13637:11:5",
                            "type": ""
                          }
                        ],
                        "src": "13553:169:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13773:51:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13783:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13812:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "13794:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13794:24:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13783:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13755:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13765:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13728:96:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13872:48:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13882:32:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "13907:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "13900:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13900:13:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13893:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13893:21:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13882:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13854:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13864:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13830:90:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13971:105:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13981:89:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13996:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14003:66:5",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13992:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13992:78:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13981:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes20",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13953:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13963:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13926:150:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14127:32:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14137:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14148:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14137:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14109:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14119:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14082:77:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14225:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14235:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14246:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14235:7:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14294:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_PaymentType_$316",
                                  "nodeType": "YulIdentifier",
                                  "src": "14252:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14252:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14252:48:5"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_PaymentType_$316",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14207:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14217:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14165:141:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14357:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14367:65:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14382:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14389:42:5",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14378:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14378:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14367:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14339:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14349:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14312:126:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14489:32:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14499:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14510:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14499:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14471:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14481:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14444:77:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14571:49:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14581:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14596:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14603:10:5",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14592:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14592:22:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14581:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14553:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14563:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14527:93:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14711:91:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14721:75:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14790:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ITokenMessengerV2_$964_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "14734:55:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14734:62:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14721:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ITokenMessengerV2_$964_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14691:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14701:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14626:176:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14893:53:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14903:37:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14934:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "14916:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14916:24:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14903:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ITokenMessengerV2_$964_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14873:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14883:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14808:138:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15025:68:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15035:52:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15081:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_PaymentType_$316",
                                  "nodeType": "YulIdentifier",
                                  "src": "15048:32:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15048:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "15035:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_PaymentType_$316_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15005:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "15015:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14952:141:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15166:52:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15176:36:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15206:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "15189:16:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15189:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "15176:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_rational_6_by_1_to_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15146:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "15156:9:5",
                            "type": ""
                          }
                        ],
                        "src": "15099:119:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15273:258:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15283:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15292:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "15287:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15352:63:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "15377:3:5"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "15382:1:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15373:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15373:11:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15396:3:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15401:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "15392:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15392:11:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "15386:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15386:18:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15366:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15366:39:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15366:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "15313:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15316:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15310:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15310:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "15324:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15326:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "15335:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15338:2:5",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15331:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15331:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "15326:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "15306:3:5",
                                "statements": []
                              },
                              "src": "15302:113:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15449:76:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "15499:3:5"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "15504:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15495:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15495:16:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15513:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15488:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15488:27:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15488:27:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "15430:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15433:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15427:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15427:13:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15424:2:5"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "15255:3:5",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "15260:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "15265:6:5",
                            "type": ""
                          }
                        ],
                        "src": "15224:307:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15584:32:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15594:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15605:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "aligned",
                                  "nodeType": "YulIdentifier",
                                  "src": "15594:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "leftAlign_t_bytes20",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15566:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "aligned",
                            "nodeType": "YulTypedName",
                            "src": "15576:7:5",
                            "type": ""
                          }
                        ],
                        "src": "15537:79:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15645:25:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "invalid",
                                  "nodeType": "YulIdentifier",
                                  "src": "15655:7:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15655:9:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15655:9:5"
                            }
                          ]
                        },
                        "name": "panic_error",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15622:48:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15724:54:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15734:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15752:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15759:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15748:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15748:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15768:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15764:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15764:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15744:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15744:28:5"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "15734:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15707:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "15717:6:5",
                            "type": ""
                          }
                        ],
                        "src": "15676:102:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15842:57:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15876:17:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "15878:11:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15878:13:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15878:13:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15865:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15872:1:5",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15862:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15862:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15855:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15855:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15852:2:5"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_PaymentType_$316",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15835:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15784:115:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15948:79:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16005:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16014:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16017:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16007:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16007:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16007:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15971:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15996:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "15978:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15978:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15968:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15968:35:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15961:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15961:43:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15958:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15941:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15905:122:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16073:76:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16127:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16136:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16139:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16129:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16129:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16129:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16096:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16118:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "16103:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16103:21:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "16093:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16093:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "16086:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16086:40:5"
                              },
                              "nodeType": "YulIf",
                              "src": "16083:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16066:5:5",
                            "type": ""
                          }
                        ],
                        "src": "16033:116:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16198:79:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16255:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16264:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16267:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16257:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16257:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16257:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16221:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16246:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "16228:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16228:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "16218:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16218:35:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "16211:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16211:43:5"
                              },
                              "nodeType": "YulIf",
                              "src": "16208:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16191:5:5",
                            "type": ""
                          }
                        ],
                        "src": "16155:122:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16325:78:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16381:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16390:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16393:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16383:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16383:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16383:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16348:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16372:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint32",
                                          "nodeType": "YulIdentifier",
                                          "src": "16355:16:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16355:23:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "16345:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16345:34:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "16338:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16338:42:5"
                              },
                              "nodeType": "YulIf",
                              "src": "16335:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16318:5:5",
                            "type": ""
                          }
                        ],
                        "src": "16283:120:5"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct MultichainPayrollWithHook.Employee[]\n    function abi_decode_t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x40)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct MultichainPayrollWithHook.Employee\n    function abi_decode_t_struct$_Employee_$328_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocateMemory(0x40)\n\n        {\n            // employee\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint32t_addresst_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_Employee_$328_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Employee_$328_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Employee_$328_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes20(cleanup_t_bytes20(value)))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_ITokenMessengerV2_$964_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITokenMessengerV2_$964_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_PaymentType_$316_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_PaymentType_$316_to_t_uint8(value))\n    }\n\n    function abi_encode_t_rational_6_by_1_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_6_by_1_to_t_uint32(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_6_by_1_t_enum$_PaymentType_$316__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_6_by_1_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_PaymentType_$316_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint32__to_t_address_t_uint256_t_uint32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint32_t_enum$_PaymentType_$316__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_PaymentType_$316_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ITokenMessengerV2_$964__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITokenMessengerV2_$964_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value6,  add(headStart, 192))\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value7,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_address_t_bool__to_t_uint32_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_PaymentType_$316(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_PaymentType_$316(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function convert_t_contract$_ITokenMessengerV2_$964_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ITokenMessengerV2_$964_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITokenMessengerV2_$964_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_PaymentType_$316_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_PaymentType_$316(value)\n    }\n\n    function convert_t_rational_6_by_1_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_bytes20(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_PaymentType_$316(value) {\n        if iszero(lt(value, 3)) { panic_error() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "334": [
                  {
                    "length": 32,
                    "start": 1002
                  },
                  {
                    "length": 32,
                    "start": 2980
                  },
                  {
                    "length": 32,
                    "start": 3076
                  },
                  {
                    "length": 32,
                    "start": 3188
                  },
                  {
                    "length": 32,
                    "start": 3619
                  },
                  {
                    "length": 32,
                    "start": 4227
                  },
                  {
                    "length": 32,
                    "start": 4346
                  },
                  {
                    "length": 32,
                    "start": 5842
                  },
                  {
                    "length": 32,
                    "start": 6375
                  }
                ],
                "336": [
                  {
                    "length": 32,
                    "start": 2002
                  },
                  {
                    "length": 32,
                    "start": 5902
                  },
                  {
                    "length": 32,
                    "start": 6312
                  }
                ],
                "338": [
                  {
                    "length": 32,
                    "start": 2706
                  }
                ],
                "340": [
                  {
                    "length": 32,
                    "start": 1966
                  },
                  {
                    "length": 32,
                    "start": 6174
                  },
                  {
                    "length": 32,
                    "start": 6250
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636c61d60f1161008c5780638da5cb5b116100665780638da5cb5b146101c6578063a34971f7146101e4578063d740965914610200578063f2fde38b14610232576100cf565b80636c61d60f14610182578063715018a61461019e57806389a30271146101a8576100cf565b80630c1241b5146100d45780632055a637146100f0578063460cb6a61461010c578063461178301461012a57806349843f01146101485780635a316f7a14610164575b600080fd5b6100ee60048036038101906100e99190611c8e565b61024e565b005b61010a60048036038101906101059190611bf7565b6104e8565b005b6101146107ac565b6040516101219190611e24565b60405180910390f35b6101326107d0565b60405161013f9190611f29565b60405180910390f35b610162600480360381019061015d9190611b94565b6107f4565b005b61016c610a90565b6040516101799190611e24565b60405180910390f35b61019c60048036038101906101979190611b58565b610ab4565b005b6101a6610cb4565b005b6101b0610e21565b6040516101bd9190611e24565b60405180910390f35b6101ce610e45565b6040516101db9190611e24565b60405180910390f35b6101fe60048036038101906101f99190611b58565b610e6e565b005b61021a60048036038101906102159190611b2f565b6112de565b60405161022993929190612066565b60405180910390f35b61024c60048036038101906102479190611b2f565b611345565b005b610256611537565b73ffffffffffffffffffffffffffffffffffffffff16610274610e45565b73ffffffffffffffffffffffffffffffffffffffff16146102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a913990610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9190611f44565b60405180910390fd5b506000821160405180606001604052806038815260200161234360389139906103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de9190611f44565b60405180910390fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610443929190611e3f565b602060405180830381600087803b15801561045d57600080fd5b505af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190611c3c565b508073ffffffffffffffffffffffffffffffffffffffff167f2aa7fb97600ea702b454359fc3d02ae9fa48367e7155505d38cee896e5b5aae7836040516104dc9190611f66565b60405180910390a25050565b6104f0611537565b73ffffffffffffffffffffffffffffffffffffffff1661050e610e45565b73ffffffffffffffffffffffffffffffffffffffff1614610597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b828290508110156107a75760008383838181106105b357fe5b9050604002018036038101906105c99190611c65565b90506105d48161153f565b600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900460ff16151515158152505090506106ca8260000151611635565b60405180606001604052806038815260200161230b6038913990610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9190611f44565b60405180910390fd5b5061073c8260000151836020015183600001516116d0565b816000015173ffffffffffffffffffffffffffffffffffffffff167ff71683287bc1001960d58bc3c44fdf0a48968c40e7dd1e89664eddf3693bbf9d83602001518360000151604051610790929190611fb8565b60405180910390a25050808060010191505061059a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107fc611537565b73ffffffffffffffffffffffffffffffffffffffff1661081a610e45565b73ffffffffffffffffffffffffffffffffffffffff16146108a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a91399061092e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109259190611f44565b60405180910390fd5b5060405180606001604052808463ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001821515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160186101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff167fa60aa31da7f23b6c3cfe7606fad5f49495d86b0a8c134c3985b840284cbd8d88848484604051610a8293929190612066565b60405180910390a250505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a913990610b3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b369190611f44565b60405180910390fd5b50600081116040518060600160405280603881526020016123436038913990610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b959190611f44565b60405180910390fd5b50610bca7f0000000000000000000000000000000000000000000000000000000000000000828461196a565b8173ffffffffffffffffffffffffffffffffffffffff167fe3ade051475bed3fd2d4a21a238ed43abc7cce06f9fe24b68382a8dcc7fe1f167f000000000000000000000000000000000000000000000000000000000000000083604051610c32929190611e3f565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f0eb95b360b92e2136a60d877820272dd60a5c2d716a504bdbdc3b629c89a8fec7f00000000000000000000000000000000000000000000000000000000000000008360066000604051610ca89493929190611e68565b60405180910390a25050565b610cbc611537565b73ffffffffffffffffffffffffffffffffffffffff16610cda610e45565b73ffffffffffffffffffffffffffffffffffffffff1614610d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a913990610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef09190611f44565b60405180910390fd5b50600081116040518060600160405280603881526020016123436038913990610f58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4f9190611f44565b60405180910390fd5b506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900460ff161515151581525050905060008160200151905060008473ffffffffffffffffffffffffffffffffffffffff167f6e75bd20bca1e1292782409b1c6d6df18c4b412d2b2eb216b6e8798fd92b63427f00000000000000000000000000000000000000000000000000000000000000008686600001516040516110b793929190611ead565b60405180910390a260008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561114957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b905080156111b45761115b85846119fd565b94508573ffffffffffffffffffffffffffffffffffffffff167f22939cf4a3ee95f380e4cfe7c0fbd42fd1c7427618122df3665dbf34e00160918685886040516111a793929190611f81565b60405180910390a2600191505b836040015115611222576111c9838688611a08565b8573ffffffffffffffffffffffffffffffffffffffff167f4252d8e852cf9c67f19b86ae3bf4c88abeca15875b71dd57e2f4ee6a57b0a9808487604051611211929190611e3f565b60405180910390a26002915061127e565b61122d83868861196a565b8573ffffffffffffffffffffffffffffffffffffffff167fe3ade051475bed3fd2d4a21a238ed43abc7cce06f9fe24b68382a8dcc7fe1f168487604051611275929190611e3f565b60405180910390a25b8573ffffffffffffffffffffffffffffffffffffffff167f0eb95b360b92e2136a60d877820272dd60a5c2d716a504bdbdc3b629c89a8fec84878760000151866040516112ce9493929190611ee4565b60405180910390a2505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900463ffffffff16908060000160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160189054906101000a900460ff16905083565b61134d611537565b73ffffffffffffffffffffffffffffffffffffffff1661136b610e45565b73ffffffffffffffffffffffffffffffffffffffff16146113f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561147a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122e56026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016122bb602a9139906115ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c59190611f44565b60405180910390fd5b5060008160200151116040518060600160405280603881526020016123436038913990611631576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116289190611f44565b60405180910390fd5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161174b929190611e3f565b602060405180830381600087803b15801561176557600080fd5b505af1158015611779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179d9190611c3c565b506000636c61d60f60e01b84846040516024016117bb929190611e3f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060007f000000000000000000000000000000000000000000000000000000000000000060601b82604051602001611852929190611dfc565b6040516020818303038152906040529050600061188e7f0000000000000000000000000000000000000000000000000000000000000000611a0d565b905060008060001b905060006101f4905060006103e890507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663779b432d8989877f00000000000000000000000000000000000000000000000000000000000000008888888d6040518963ffffffff1660e01b815260040161192d989796959493929190611fe1565b600060405180830381600087803b15801561194757600080fd5b505af115801561195b573d6000803e3d6000fd5b50505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016119a5929190611e3f565b602060405180830381600087803b1580156119bf57600080fd5b505af11580156119d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f79190611c3c565b50505050565b600082905092915050565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660001b9050919050565b600081359050611a3f8161225e565b92915050565b60008083601f840112611a5757600080fd5b8235905067ffffffffffffffff811115611a7057600080fd5b602083019150836040820283011115611a8857600080fd5b9250929050565b600081359050611a9e81612275565b92915050565b600081519050611ab381612275565b92915050565b600060408284031215611acb57600080fd5b611ad5604061209d565b90506000611ae584828501611a30565b6000830152506020611af984828501611b05565b60208301525092915050565b600081359050611b148161228c565b92915050565b600081359050611b29816122a3565b92915050565b600060208284031215611b4157600080fd5b6000611b4f84828501611a30565b91505092915050565b60008060408385031215611b6b57600080fd5b6000611b7985828601611a30565b9250506020611b8a85828601611b05565b9150509250929050565b60008060008060808587031215611baa57600080fd5b6000611bb887828801611a30565b9450506020611bc987828801611b1a565b9350506040611bda87828801611a30565b9250506060611beb87828801611a8f565b91505092959194509250565b60008060208385031215611c0a57600080fd5b600083013567ffffffffffffffff811115611c2457600080fd5b611c3085828601611a45565b92509250509250929050565b600060208284031215611c4e57600080fd5b6000611c5c84828501611aa4565b91505092915050565b600060408284031215611c7757600080fd5b6000611c8584828501611ab9565b91505092915050565b60008060408385031215611ca157600080fd5b6000611caf85828601611b05565b9250506020611cc085828601611a30565b9150509250929050565b611cd381612111565b82525050565b611ce281612123565b82525050565b611cf9611cf48261212f565b61222d565b82525050565b611d088161215b565b82525050565b6000611d19826120ce565b611d2381856120e4565b9350611d338185602086016121fa565b611d3c81612239565b840191505092915050565b6000611d52826120ce565b611d5c81856120f5565b9350611d6c8185602086016121fa565b80840191505092915050565b611d81816121b2565b82525050565b611d90816121d6565b82525050565b611d9f816121e8565b82525050565b6000611db0826120d9565b611dba8185612100565b9350611dca8185602086016121fa565b611dd381612239565b840191505092915050565b611de781612198565b82525050565b611df6816121a2565b82525050565b6000611e088285611ce8565b601482019150611e188284611d47565b91508190509392505050565b6000602082019050611e396000830184611cca565b92915050565b6000604082019050611e546000830185611cca565b611e616020830184611dde565b9392505050565b6000608082019050611e7d6000830187611cca565b611e8a6020830186611dde565b611e976040830185611d96565b611ea46060830184611d87565b95945050505050565b6000606082019050611ec26000830186611cca565b611ecf6020830185611dde565b611edc6040830184611ded565b949350505050565b6000608082019050611ef96000830187611cca565b611f066020830186611dde565b611f136040830185611ded565b611f206060830184611d87565b95945050505050565b6000602082019050611f3e6000830184611d78565b92915050565b60006020820190508181036000830152611f5e8184611da5565b905092915050565b6000602082019050611f7b6000830184611dde565b92915050565b6000606082019050611f966000830186611dde565b611fa36020830185611cca565b611fb06040830184611dde565b949350505050565b6000604082019050611fcd6000830185611dde565b611fda6020830184611ded565b9392505050565b600061010082019050611ff7600083018b611dde565b612004602083018a611ded565b6120116040830189611cff565b61201e6060830188611cca565b61202b6080830187611cff565b61203860a0830186611dde565b61204560c0830185611ded565b81810360e08301526120578184611d0e565b90509998505050505050505050565b600060608201905061207b6000830186611ded565b6120886020830185611cca565b6120956040830184611cd9565b949350505050565b6000604051905081810181811067ffffffffffffffff821117156120c4576120c3612237565b5b8060405250919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061211c82612178565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000819050919050565b60008190506121738261224a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006121bd826121c4565b9050919050565b60006121cf82612178565b9050919050565b60006121e182612165565b9050919050565b60006121f3826121a2565b9050919050565b60005b838110156122185780820151818401526020810190506121fd565b83811115612227576000848401525b50505050565b6000819050919050565bfe5b6000601f19601f8301169050919050565b6003811061225b5761225a612237565b5b50565b61226781612111565b811461227257600080fd5b50565b61227e81612123565b811461228957600080fd5b50565b61229581612198565b81146122a057600080fd5b50565b6122ac816121a2565b81146122b757600080fd5b5056fe4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d756c7469636861696e506179726f6c6c57697468486f6f6b3a20456d706c6f79656520726f757465206e6f7420636f6e666967757265644d756c7469636861696e506179726f6c6c57697468486f6f6b3a20416d6f756e74206d7573742062652067726561746572207468616e2030a2646970667358221220911b7a8dbeb706516474a452bb0e7a25929c87e3e2af094d5e5156e707efd5a164736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C61D60F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA34971F7 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xD7409659 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x232 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6C61D60F EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1A8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xC1241B5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2055A637 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x460CB6A6 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x46117830 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x49843F01 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5A316F7A EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0xCB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x274 PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2AA7FB97600EA702B454359FC3D02AE9FA48367E7155505D38CEE896E5B5AAE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x50E PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x5B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D4 DUP2 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x6CA DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x230B PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x73C DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x16D0 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF71683287BC1001960D58BC3C44FDF0A48968C40E7DD1E89664EDDF3693BBF9D DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7FC PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81A PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA60AA31DA7F23B6C3CFE7606FAD5F49495D86B0A8C134C3985B840284CBD8D88 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBCA PUSH32 0x0 DUP3 DUP5 PUSH2 0x196A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC PUSH32 0x0 DUP4 PUSH1 0x6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDA PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xEF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6E75BD20BCA1E1292782409B1C6D6DF18C4B412D2B2EB216B6E8798FD92B6342 PUSH32 0x0 DUP7 DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x10B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1149 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x115B DUP6 DUP5 PUSH2 0x19FD JUMP JUMPDEST SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22939CF4A3EE95F380E4CFE7C0FBD42FD1C7427618122DF3665DBF34E0016091 DUP7 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x11A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x1222 JUMPI PUSH2 0x11C9 DUP4 DUP7 DUP9 PUSH2 0x1A08 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4252D8E852CF9C67F19B86AE3BF4C88ABECA15875B71DD57E2F4EE6A57B0A980 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1211 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SWAP2 POP PUSH2 0x127E JUMP JUMPDEST PUSH2 0x122D DUP4 DUP7 DUP9 PUSH2 0x196A JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1275 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC DUP5 DUP8 DUP8 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0x12CE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x134D PUSH2 0x1537 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x136B PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22E5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22BB PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2343 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174B SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1779 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179D SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0x6C61D60F PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17BB SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x60 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1852 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x188E PUSH32 0x0 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH2 0x1F4 SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x779B432D DUP10 DUP10 DUP8 PUSH32 0x0 DUP9 DUP9 DUP9 DUP14 PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x195B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A5 SWAP3 SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19F7 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3F DUP2 PUSH2 0x225E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9E DUP2 PUSH2 0x2275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB3 DUP2 PUSH2 0x2275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 PUSH2 0x209D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AE5 DUP5 DUP3 DUP6 ADD PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1AF9 DUP5 DUP3 DUP6 ADD PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B14 DUP2 PUSH2 0x228C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B29 DUP2 PUSH2 0x22A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B4F DUP5 DUP3 DUP6 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B79 DUP6 DUP3 DUP7 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B8A DUP6 DUP3 DUP7 ADD PUSH2 0x1B05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BB8 DUP8 DUP3 DUP9 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BC9 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BDA DUP8 DUP3 DUP9 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1BEB DUP8 DUP3 DUP9 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C30 DUP6 DUP3 DUP7 ADD PUSH2 0x1A45 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C5C DUP5 DUP3 DUP6 ADD PUSH2 0x1AA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C85 DUP5 DUP3 DUP6 ADD PUSH2 0x1AB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CAF DUP6 DUP3 DUP7 ADD PUSH2 0x1B05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x2111 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CE2 DUP2 PUSH2 0x2123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CF9 PUSH2 0x1CF4 DUP3 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x222D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D08 DUP2 PUSH2 0x215B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D19 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x1D23 DUP2 DUP6 PUSH2 0x20E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x1D3C DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D52 DUP3 PUSH2 0x20CE JUMP JUMPDEST PUSH2 0x1D5C DUP2 DUP6 PUSH2 0x20F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21FA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D81 DUP2 PUSH2 0x21B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D90 DUP2 PUSH2 0x21D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x21E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB0 DUP3 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x1DBA DUP2 DUP6 PUSH2 0x2100 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x1DD3 DUP2 PUSH2 0x2239 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE7 DUP2 PUSH2 0x2198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DF6 DUP2 PUSH2 0x21A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E08 DUP3 DUP6 PUSH2 0x1CE8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E18 DUP3 DUP5 PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E54 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1E61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E7D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1E8A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1E97 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1EA4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D87 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EC2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1ECF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EF9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1F06 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1F13 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x1F20 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D87 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5E DUP2 DUP5 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F96 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1FA3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1FB0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DDE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1FDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1FF7 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x2011 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x201E PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x202B PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x2038 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x2045 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1DED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x2057 DUP2 DUP5 PUSH2 0x1D0E JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x207B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x2088 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x2095 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20C4 JUMPI PUSH2 0x20C3 PUSH2 0x2237 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP3 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2173 DUP3 PUSH2 0x224A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD DUP3 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CF DUP3 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E1 DUP3 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F3 DUP3 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2218 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2227 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x225B JUMPI PUSH2 0x225A PUSH2 0x2237 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2267 DUP2 PUSH2 0x2111 JUMP JUMPDEST DUP2 EQ PUSH2 0x2272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x227E DUP2 PUSH2 0x2123 JUMP JUMPDEST DUP2 EQ PUSH2 0x2289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2295 DUP2 PUSH2 0x2198 JUMP JUMPDEST DUP2 EQ PUSH2 0x22A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22AC DUP2 PUSH2 0x21A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4D PUSH22 0x6C7469636861696E506179726F6C6C57697468486F6F PUSH12 0x3A20496E76616C6964206164 PUSH5 0x726573734F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734D756C7469636861696E506179726F6C PUSH13 0x57697468486F6F6B3A20456D70 PUSH13 0x6F79656520726F757465206E6F PUSH21 0x20636F6E666967757265644D756C7469636861696E POP PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20416D6F75 PUSH15 0x74206D757374206265206772656174 PUSH6 0x72207468616E KECCAK256 ADDRESS LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SHL PUSH27 0x8DBEB706516474A452BB0E7A25929C87E3E2AF094D5E5156E707EF 0xD5 LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "485:12534:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6454:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5513:747;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3704:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3494:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4984:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3549:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11814:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1717:145:0;;;:::i;:::-;;3459:29:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10370:1438:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3410:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2011:240:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6454:305:3;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6569:1:3::1;6548:23;;:9;:23;;;;6573:21;;;;;;;;;;;;;;;;;6540:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6622:1;6613:6;:10;6625:20;;;;;;;;;;;;;;;;;6605:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6672:4;6665:21;;;6687:9;6698:6;6665:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6734:9;6720:32;;;6745:6;6720:32;;;;;;:::i;:::-;;;;;;;;6454:305:::0;;:::o;5513:747::-;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5605:9:3::1;5600:654;5624:9;;:16;;5620:1;:20;5600:654;;;5661:19;5683:9;;5693:1;5683:12;;;;;;;;;;;;5661:34;;;;;;;;;;:::i;:::-;;;5709:22;5727:3;5709:17;:22::i;:::-;5758;5783:6;:20;5790:3;:12;;;5783:20;;;;;;;;;;;;;;;5758:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;5825:31;5843:3;:12;;;5825:17;:31::i;:::-;5858:26;;;;;;;;;;;;;;;;;5817:68;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6081:64;6091:3;:12;;;6105:3;:10;;;6117:5;:27;;;6081:9;:64::i;:::-;6189:3;:12;;;6177:66;;;6203:3;:10;;;6215:5;:27;;;6177:66;;;;;;;:::i;:::-;;;;;;;;5600:654;;5642:3;;;;;;;5600:654;;;;5513:747:::0;;:::o;3704:48::-;;;:::o;3494:49::-;;;:::o;4984:339::-;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5163:1:3::1;5143:22;;:8;:22;;;;5167:21;;;;;;;;;;;;;;;;;5135:54;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5218:33;;;;;;;;5228:6;5218:33;;;;;;5236:5;5218:33;;;;;;5243:7;5218:33;;;;::::0;5199:6:::1;:16;5206:8;5199:16;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5283:8;5266:50;;;5293:6;5301:5;5308:7;5266:50;;;;;;;;:::i;:::-;;;;;;;;4984:339:::0;;;;:::o;3549:36::-;;;:::o;11814:443::-;11921:1;11900:23;;:9;:23;;;;11925:21;;;;;;;;;;;;;;;;;11892:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11974:1;11965:6;:10;11977:20;;;;;;;;;;;;;;;;;11957:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12009:45;12030:4;12036:6;12044:9;12009:20;:45::i;:::-;12092:9;12069:47;;;12103:4;12109:6;12069:47;;;;;;;:::i;:::-;;;;;;;;12203:9;12187:63;;;12214:4;12220:6;12228:1;12231:18;12187:63;;;;;;;;;:::i;:::-;;;;;;;;11814:443;;:::o;1717:145:0:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;3459:29:3:-;;;:::o;1085:85:0:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;10370:1438:3:-;10483:1;10462:23;;:9;:23;;;;10487:21;;;;;;;;;;;;;;;;;10454:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10536:1;10527:6;:10;10539:20;;;;;;;;;;;;;;;;;10519:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10579:22;10604:6;:17;10611:9;10604:17;;;;;;;;;;;;;;;10579:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10631:18;10652:5;:23;;;10631:44;;10685:23;10770:9;10745:78;;;10781:4;10787:6;10795:5;:27;;;10745:78;;;;;;;;:::i;:::-;;;;;;;;10887:17;10929:1;10907:24;;:10;:24;;;;:46;;;;;10949:4;10935:18;;:10;:18;;;;10907:46;10887:66;;10976:12;10972:207;;;11013:36;11030:6;11038:10;11013:16;:36::i;:::-;11004:45;;11086:9;11068:56;;;11097:6;11105:10;11117:6;11068:56;;;;;;;;:::i;:::-;;;;;;;;11152:16;11138:30;;10972:207;11248:5;:20;;;11244:380;;;11284:56;11310:10;11322:6;11330:9;11284:25;:56::i;:::-;11382:9;11359:53;;;11393:10;11405:6;11359:53;;;;;;;:::i;:::-;;;;;;;;11440:19;11426:33;;11244:380;;;11490:51;11511:10;11523:6;11531:9;11490:20;:51::i;:::-;11583:9;11560:53;;;11594:10;11606:6;11560:53;;;;;;;:::i;:::-;;;;;;;;11244:380;11668:9;11639:162;;;11692:10;11717:6;11738:5;:27;;;11780:11;11639:162;;;;;;;;;:::i;:::-;;;;;;;;10370:1438;;;;;;:::o;3410:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:2:-;651:15;685:10;678:17;;598:104;:::o;6901:192:3:-;7005:1;6981:26;;:3;:12;;;:26;;;;7009:21;;;;;;;;;;;;;;;;;6973:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7062:1;7049:3;:10;;;:14;7065:20;;;;;;;;;;;;;;;;;7041:45;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6901:192;:::o;7291:146::-;7359:4;7428:1;7382:48;;:6;:16;7389:8;7382:16;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;;7375:55;;7291:146;;;:::o;7636:2080::-;7724:4;7717:20;;;7746:14;7763:6;7717:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7986:27;8229:74;;;8317:2;8333:6;8016:333;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:363;;8552:21;8601:23;8593:32;;8627:14;8576:66;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8552:90;;8737:21;8761:42;8779:23;8761:17;:42::i;:::-;8737:66;;8813:25;8849:1;8841:10;;8813:38;;8902:18;8923:3;8902:24;;8965:31;8999:4;8965:38;;9073:14;:37;;;9123:6;9179;9244:13;9315:4;9387:17;9473:10;9560:24;9629:8;9073:636;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7636:2080;;;;;;;;;:::o;12870:147::-;12976:5;12969:22;;;12992:9;13003:6;12969:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12870:147;;;:::o;12398:182::-;12484:7;12567:6;12560:13;;12398:182;;;;:::o;12639:174::-;;;;:::o;9791:128::-;9855:7;9905:4;9889:22;;9881:31;;9874:38;;9791:128;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;203:394::-;;;363:3;356:4;348:6;344:17;340:27;330:2;;381:1;378;371:12;330:2;417:6;404:20;394:30;;447:18;439:6;436:30;433:2;;;479:1;476;469:12;433:2;516:4;508:6;504:17;492:29;;570:3;562:4;554:6;550:17;540:8;536:32;533:41;530:2;;;587:1;584;577:12;530:2;320:277;;;;;:::o;603:133::-;;684:6;671:20;662:29;;700:30;724:5;700:30;:::i;:::-;652:84;;;;:::o;742:137::-;;827:6;821:13;812:22;;843:30;867:5;843:30;:::i;:::-;802:77;;;;:::o;934:512::-;;1052:4;1040:9;1035:3;1031:19;1027:30;1024:2;;;1070:1;1067;1060:12;1024:2;1092:20;1107:4;1092:20;:::i;:::-;1083:29;;1175:1;1215:49;1260:3;1251:6;1240:9;1236:22;1215:49;:::i;:::-;1208:4;1201:5;1197:16;1190:75;1122:154;1337:2;1378:49;1423:3;1414:6;1403:9;1399:22;1378:49;:::i;:::-;1371:4;1364:5;1360:16;1353:75;1286:153;1014:432;;;;:::o;1452:139::-;;1536:6;1523:20;1514:29;;1552:33;1579:5;1552:33;:::i;:::-;1504:87;;;;:::o;1597:137::-;;1680:6;1667:20;1658:29;;1696:32;1722:5;1696:32;:::i;:::-;1648:86;;;;:::o;1740:262::-;;1848:2;1836:9;1827:7;1823:23;1819:32;1816:2;;;1864:1;1861;1854:12;1816:2;1907:1;1932:53;1977:7;1968:6;1957:9;1953:22;1932:53;:::i;:::-;1922:63;;1878:117;1806:196;;;;:::o;2008:407::-;;;2133:2;2121:9;2112:7;2108:23;2104:32;2101:2;;;2149:1;2146;2139:12;2101:2;2192:1;2217:53;2262:7;2253:6;2242:9;2238:22;2217:53;:::i;:::-;2207:63;;2163:117;2319:2;2345:53;2390:7;2381:6;2370:9;2366:22;2345:53;:::i;:::-;2335:63;;2290:118;2091:324;;;;;:::o;2421:690::-;;;;;2576:3;2564:9;2555:7;2551:23;2547:33;2544:2;;;2593:1;2590;2583:12;2544:2;2636:1;2661:53;2706:7;2697:6;2686:9;2682:22;2661:53;:::i;:::-;2651:63;;2607:117;2763:2;2789:52;2833:7;2824:6;2813:9;2809:22;2789:52;:::i;:::-;2779:62;;2734:117;2890:2;2916:53;2961:7;2952:6;2941:9;2937:22;2916:53;:::i;:::-;2906:63;;2861:118;3018:2;3044:50;3086:7;3077:6;3066:9;3062:22;3044:50;:::i;:::-;3034:60;;2989:115;2534:577;;;;;;;:::o;3117:479::-;;;3287:2;3275:9;3266:7;3262:23;3258:32;3255:2;;;3303:1;3300;3293:12;3255:2;3374:1;3363:9;3359:17;3346:31;3404:18;3396:6;3393:30;3390:2;;;3436:1;3433;3426:12;3390:2;3472:107;3571:7;3562:6;3551:9;3547:22;3472:107;:::i;:::-;3454:125;;;;3317:272;3245:351;;;;;:::o;3602:278::-;;3718:2;3706:9;3697:7;3693:23;3689:32;3686:2;;;3734:1;3731;3724:12;3686:2;3777:1;3802:61;3855:7;3846:6;3835:9;3831:22;3802:61;:::i;:::-;3792:71;;3748:125;3676:204;;;;:::o;3886:312::-;;4019:2;4007:9;3998:7;3994:23;3990:32;3987:2;;;4035:1;4032;4025:12;3987:2;4078:1;4103:78;4173:7;4164:6;4153:9;4149:22;4103:78;:::i;:::-;4093:88;;4049:142;3977:221;;;;:::o;4204:407::-;;;4329:2;4317:9;4308:7;4304:23;4300:32;4297:2;;;4345:1;4342;4335:12;4297:2;4388:1;4413:53;4458:7;4449:6;4438:9;4434:22;4413:53;:::i;:::-;4403:63;;4359:117;4515:2;4541:53;4586:7;4577:6;4566:9;4562:22;4541:53;:::i;:::-;4531:63;;4486:118;4287:324;;;;;:::o;4617:118::-;4704:24;4722:5;4704:24;:::i;:::-;4699:3;4692:37;4682:53;;:::o;4741:109::-;4822:21;4837:5;4822:21;:::i;:::-;4817:3;4810:34;4800:50;;:::o;4856:157::-;4961:45;4981:24;4999:5;4981:24;:::i;:::-;4961:45;:::i;:::-;4956:3;4949:58;4939:74;;:::o;5019:118::-;5106:24;5124:5;5106:24;:::i;:::-;5101:3;5094:37;5084:53;;:::o;5143:360::-;;5257:38;5289:5;5257:38;:::i;:::-;5311:70;5374:6;5369:3;5311:70;:::i;:::-;5304:77;;5390:52;5435:6;5430:3;5423:4;5416:5;5412:16;5390:52;:::i;:::-;5467:29;5489:6;5467:29;:::i;:::-;5462:3;5458:39;5451:46;;5233:270;;;;;:::o;5509:373::-;;5641:38;5673:5;5641:38;:::i;:::-;5695:88;5776:6;5771:3;5695:88;:::i;:::-;5688:95;;5792:52;5837:6;5832:3;5825:4;5818:5;5814:16;5792:52;:::i;:::-;5869:6;5864:3;5860:16;5853:23;;5617:265;;;;;:::o;5888:181::-;6000:62;6056:5;6000:62;:::i;:::-;5995:3;5988:75;5978:91;;:::o;6075:157::-;6175:50;6219:5;6175:50;:::i;:::-;6170:3;6163:63;6153:79;;:::o;6238:145::-;6332:44;6370:5;6332:44;:::i;:::-;6327:3;6320:57;6310:73;;:::o;6389:364::-;;6505:39;6538:5;6505:39;:::i;:::-;6560:71;6624:6;6619:3;6560:71;:::i;:::-;6553:78;;6640:52;6685:6;6680:3;6673:4;6666:5;6662:16;6640:52;:::i;:::-;6717:29;6739:6;6717:29;:::i;:::-;6712:3;6708:39;6701:46;;6481:272;;;;;:::o;6759:118::-;6846:24;6864:5;6846:24;:::i;:::-;6841:3;6834:37;6824:53;;:::o;6883:115::-;6968:23;6985:5;6968:23;:::i;:::-;6963:3;6956:36;6946:52;;:::o;7004:412::-;;7177:75;7248:3;7239:6;7177:75;:::i;:::-;7277:2;7272:3;7268:12;7261:19;;7297:93;7386:3;7377:6;7297:93;:::i;:::-;7290:100;;7407:3;7400:10;;7166:250;;;;;:::o;7422:222::-;;7553:2;7542:9;7538:18;7530:26;;7566:71;7634:1;7623:9;7619:17;7610:6;7566:71;:::i;:::-;7520:124;;;;:::o;7650:332::-;;7809:2;7798:9;7794:18;7786:26;;7822:71;7890:1;7879:9;7875:17;7866:6;7822:71;:::i;:::-;7903:72;7971:2;7960:9;7956:18;7947:6;7903:72;:::i;:::-;7776:206;;;;;:::o;7988:593::-;;8223:3;8212:9;8208:19;8200:27;;8237:71;8305:1;8294:9;8290:17;8281:6;8237:71;:::i;:::-;8318:72;8386:2;8375:9;8371:18;8362:6;8318:72;:::i;:::-;8400:79;8475:2;8464:9;8460:18;8451:6;8400:79;:::i;:::-;8489:85;8570:2;8559:9;8555:18;8546:6;8489:85;:::i;:::-;8190:391;;;;;;;:::o;8587:438::-;;8772:2;8761:9;8757:18;8749:26;;8785:71;8853:1;8842:9;8838:17;8829:6;8785:71;:::i;:::-;8866:72;8934:2;8923:9;8919:18;8910:6;8866:72;:::i;:::-;8948:70;9014:2;9003:9;8999:18;8990:6;8948:70;:::i;:::-;8739:286;;;;;;:::o;9031:575::-;;9257:3;9246:9;9242:19;9234:27;;9271:71;9339:1;9328:9;9324:17;9315:6;9271:71;:::i;:::-;9352:72;9420:2;9409:9;9405:18;9396:6;9352:72;:::i;:::-;9434:70;9500:2;9489:9;9485:18;9476:6;9434:70;:::i;:::-;9514:85;9595:2;9584:9;9580:18;9571:6;9514:85;:::i;:::-;9224:382;;;;;;;:::o;9612:272::-;;9768:2;9757:9;9753:18;9745:26;;9781:96;9874:1;9863:9;9859:17;9850:6;9781:96;:::i;:::-;9735:149;;;;:::o;9890:313::-;;10041:2;10030:9;10026:18;10018:26;;10090:9;10084:4;10080:20;10076:1;10065:9;10061:17;10054:47;10118:78;10191:4;10182:6;10118:78;:::i;:::-;10110:86;;10008:195;;;;:::o;10209:222::-;;10340:2;10329:9;10325:18;10317:26;;10353:71;10421:1;10410:9;10406:17;10397:6;10353:71;:::i;:::-;10307:124;;;;:::o;10437:442::-;;10624:2;10613:9;10609:18;10601:26;;10637:71;10705:1;10694:9;10690:17;10681:6;10637:71;:::i;:::-;10718:72;10786:2;10775:9;10771:18;10762:6;10718:72;:::i;:::-;10800;10868:2;10857:9;10853:18;10844:6;10800:72;:::i;:::-;10591:288;;;;;;:::o;10885:328::-;;11042:2;11031:9;11027:18;11019:26;;11055:71;11123:1;11112:9;11108:17;11099:6;11055:71;:::i;:::-;11136:70;11202:2;11191:9;11187:18;11178:6;11136:70;:::i;:::-;11009:204;;;;;:::o;11219:1076::-;;11560:3;11549:9;11545:19;11537:27;;11574:71;11642:1;11631:9;11627:17;11618:6;11574:71;:::i;:::-;11655:70;11721:2;11710:9;11706:18;11697:6;11655:70;:::i;:::-;11735:72;11803:2;11792:9;11788:18;11779:6;11735:72;:::i;:::-;11817;11885:2;11874:9;11870:18;11861:6;11817:72;:::i;:::-;11899:73;11967:3;11956:9;11952:19;11943:6;11899:73;:::i;:::-;11982;12050:3;12039:9;12035:19;12026:6;11982:73;:::i;:::-;12065:71;12131:3;12120:9;12116:19;12107:6;12065:71;:::i;:::-;12184:9;12178:4;12174:20;12168:3;12157:9;12153:19;12146:49;12212:76;12283:4;12274:6;12212:76;:::i;:::-;12204:84;;11527:768;;;;;;;;;;;:::o;12301:426::-;;12480:2;12469:9;12465:18;12457:26;;12493:69;12559:1;12548:9;12544:17;12535:6;12493:69;:::i;:::-;12572:72;12640:2;12629:9;12625:18;12616:6;12572:72;:::i;:::-;12654:66;12716:2;12705:9;12701:18;12692:6;12654:66;:::i;:::-;12447:280;;;;;;:::o;12733:278::-;;12799:2;12793:9;12783:19;;12841:4;12833:6;12829:17;12948:6;12936:10;12933:22;12912:18;12900:10;12897:34;12894:62;12891:2;;;12959:13;;:::i;:::-;12891:2;12994:10;12990:2;12983:22;12773:238;;;;:::o;13017:98::-;;13102:5;13096:12;13086:22;;13075:40;;;:::o;13121:99::-;;13207:5;13201:12;13191:22;;13180:40;;;:::o;13226:168::-;;13343:6;13338:3;13331:19;13383:4;13378:3;13374:14;13359:29;;13321:73;;;;:::o;13400:147::-;;13538:3;13523:18;;13513:34;;;;:::o;13553:169::-;;13671:6;13666:3;13659:19;13711:4;13706:3;13702:14;13687:29;;13649:73;;;;:::o;13728:96::-;;13794:24;13812:5;13794:24;:::i;:::-;13783:35;;13773:51;;;:::o;13830:90::-;;13907:5;13900:13;13893:21;13882:32;;13872:48;;;:::o;13926:150::-;;14003:66;13996:5;13992:78;13981:89;;13971:105;;;:::o;14082:77::-;;14148:5;14137:16;;14127:32;;;:::o;14165:141::-;;14246:5;14235:16;;14252:48;14294:5;14252:48;:::i;:::-;14225:81;;;:::o;14312:126::-;;14389:42;14382:5;14378:54;14367:65;;14357:81;;;:::o;14444:77::-;;14510:5;14499:16;;14489:32;;;:::o;14527:93::-;;14603:10;14596:5;14592:22;14581:33;;14571:49;;;:::o;14626:176::-;;14734:62;14790:5;14734:62;:::i;:::-;14721:75;;14711:91;;;:::o;14808:138::-;;14916:24;14934:5;14916:24;:::i;:::-;14903:37;;14893:53;;;:::o;14952:141::-;;15048:39;15081:5;15048:39;:::i;:::-;15035:52;;15025:68;;;:::o;15099:119::-;;15189:23;15206:5;15189:23;:::i;:::-;15176:36;;15166:52;;;:::o;15224:307::-;15292:1;15302:113;15316:6;15313:1;15310:13;15302:113;;;15401:1;15396:3;15392:11;15386:18;15382:1;15377:3;15373:11;15366:39;15338:2;15335:1;15331:10;15326:15;;15302:113;;;15433:6;15430:1;15427:13;15424:2;;;15513:1;15504:6;15499:3;15495:16;15488:27;15424:2;15273:258;;;;:::o;15537:79::-;;15605:5;15594:16;;15584:32;;;:::o;15622:48::-;15655:9;15676:102;;15768:2;15764:7;15759:2;15752:5;15748:14;15744:28;15734:38;;15724:54;;;:::o;15784:115::-;15872:1;15865:5;15862:12;15852:2;;15878:13;;:::i;:::-;15852:2;15842:57;:::o;15905:122::-;15978:24;15996:5;15978:24;:::i;:::-;15971:5;15968:35;15958:2;;16017:1;16014;16007:12;15958:2;15948:79;:::o;16033:116::-;16103:21;16118:5;16103:21;:::i;:::-;16096:5;16093:32;16083:2;;16139:1;16136;16129:12;16083:2;16073:76;:::o;16155:122::-;16228:24;16246:5;16228:24;:::i;:::-;16221:5;16218:35;16208:2;;16267:1;16264;16257:12;16208:2;16198:79;:::o;16283:120::-;16355:23;16372:5;16355:23;:::i;:::-;16348:5;16345:34;16335:2;;16393:1;16390;16383:12;16335:2;16325:78;:::o"
            },
            "methodIdentifiers": {
              "USDC()": "89a30271",
              "batchPayEmployees((address,uint256)[])": "2055a637",
              "directTransfer(address,uint256)": "6c61d60f",
              "handleReceiveMessage(address,uint256)": "a34971f7",
              "hookWrapper()": "5a316f7a",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "routes(address)": "d7409659",
              "setRouteInfo(address,uint32,address,bool)": "49843f01",
              "targetMultichainPayroll()": "460cb6a6",
              "tokenMessenger()": "46117830",
              "transferOwnership(address)": "f2fde38b",
              "withdrawUSDC(uint256,address)": "0c1241b5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenMessenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hookWrapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_targetMultichainPayroll\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DirectTransferExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"lending\",\"type\":\"bool\"}],\"name\":\"EmployeeRouteSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LendingDepositExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"enum MultichainPayrollWithHook.PaymentType\",\"name\":\"paymentType\",\"type\":\"uint8\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"}],\"name\":\"PaymentRequestedFromHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"}],\"name\":\"PaymentSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"TokenSwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDCWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultichainPayrollWithHook.Employee[]\",\"name\":\"employees\",\"type\":\"tuple[]\"}],\"name\":\"batchPayEmployees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"directTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"handleReceiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hookWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"routes\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationCCTPDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"desiredERC20Token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"lendingEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"lending\",\"type\":\"bool\"}],\"name\":\"setRouteInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetMultichainPayroll\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMessenger\",\"outputs\":[{\"internalType\":\"contract ITokenMessengerV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchPayEmployees((address,uint256)[])\":{\"details\":\"Uses contract's USDC balance\",\"params\":{\"employees\":\"Array of employee addresses and payment amounts\"}},\"handleReceiveMessage(address,uint256)\":{\"details\":\"hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)\",\"params\":{\"amount\":\"The USDC amount received\",\"recipient\":\"The employee receiving the payment\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRouteInfo(address,uint32,address,bool)\":{\"params\":{\"domain\":\"The CCTP domain where the employee will receive payments\",\"employee\":\"The address of the employee\",\"lending\":\"Whether to deposit to DeFi protocols or transfer directly\",\"token\":\"The token the employee wants to receive (can be USDC)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawUSDC(uint256,address)\":{\"params\":{\"amount\":\"The amount of USDC to withdraw\",\"recipient\":\"The address to send the withdrawn USDC to\"}}},\"title\":\"MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchPayEmployees((address,uint256)[])\":{\"notice\":\"Admin sends USDC to employees across chains via CCTP\"},\"handleReceiveMessage(address,uint256)\":{\"notice\":\"Called via CCTPHookWrapper relay(), triggered by Multichain message\"},\"setRouteInfo(address,uint32,address,bool)\":{\"notice\":\"Admin registers payroll route info for an employee\"},\"withdrawUSDC(uint256,address)\":{\"notice\":\"Allows the owner to withdraw USDC from the contract\"}},\"notice\":\"This contract provides payroll functionality using contract's USDC balance. USDC must be deposited to the contract before making payments.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/MultichainPayrollWithHook.sol\":\"MultichainPayrollWithHook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/core/MultichainPayrollWithHook.sol\":{\"keccak256\":\"0xa9ad709b6e2d3147c6c6f44c3c063a62037a6e5fed9b89020c8851942d48383b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4039130ec73e19b6e967edfdf2aa737c5a784a7357cb656c9895e9c0b3044da0\",\"dweb:/ipfs/QmUp3YRh2yiufSxH65KHJKDkn6KLr9dF3aEwKGJVZR2mPA\"]},\"contracts/lib/interfaces/ITokenMessengerV2.sol\":{\"keccak256\":\"0x851cb7eac88913592ba06e918e76a9e853c8ceaf351c0338987667fa14da2ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d204c85e437d744e213cd7c0fa51ae5f155f2d0aacb159a0f6d11fc3c8b0716\",\"dweb:/ipfs/QmdzbAbUPUBKMnAcjo4LLppU1gyDUSESwuFy7mjpX7kRD6\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 332,
                "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                "label": "routes",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_struct(RouteInfo)323_storage)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(RouteInfo)323_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct MultichainPayrollWithHook.RouteInfo)",
                "numberOfBytes": "32",
                "value": "t_struct(RouteInfo)323_storage"
              },
              "t_struct(RouteInfo)323_storage": {
                "encoding": "inplace",
                "label": "struct MultichainPayrollWithHook.RouteInfo",
                "members": [
                  {
                    "astId": 318,
                    "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                    "label": "destinationCCTPDomain",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 320,
                    "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                    "label": "desiredERC20Token",
                    "offset": 4,
                    "slot": "0",
                    "type": "t_address"
                  },
                  {
                    "astId": 322,
                    "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                    "label": "lendingEnabled",
                    "offset": 24,
                    "slot": "0",
                    "type": "t_bool"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_uint32": {
                "encoding": "inplace",
                "label": "uint32",
                "numberOfBytes": "4"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "batchPayEmployees((address,uint256)[])": {
                "notice": "Admin sends USDC to employees across chains via CCTP"
              },
              "handleReceiveMessage(address,uint256)": {
                "notice": "Called via CCTPHookWrapper relay(), triggered by Multichain message"
              },
              "setRouteInfo(address,uint32,address,bool)": {
                "notice": "Admin registers payroll route info for an employee"
              },
              "withdrawUSDC(uint256,address)": {
                "notice": "Allows the owner to withdraw USDC from the contract"
              }
            },
            "notice": "This contract provides payroll functionality using contract's USDC balance. USDC must be deposited to the contract before making payments.",
            "version": 1
          }
        }
      },
      "contracts/lib/interfaces/ITokenMessengerV2.sol": {
        "ITokenMessengerV2": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mintRecipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "burnToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationCaller",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "minFinalityThreshold",
                  "type": "uint32"
                }
              ],
              "name": "depositForBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mintRecipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "burnToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationCaller",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "minFinalityThreshold",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "hookData",
                  "type": "bytes"
                }
              ],
              "name": "depositForBurnWithHook",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)": {
                "params": {
                  "amount": "Amount of tokens to burn",
                  "burnToken": "Address of token to burn",
                  "destinationCaller": "Authorized caller on the destination domain, as bytes32",
                  "destinationDomain": "Destination domain (Chain ID in CCTP)",
                  "maxFee": "Maximum fee to pay on the destination domain",
                  "minFinalityThreshold": "Minimum finality at which the message should be attested to",
                  "mintRecipient": "Address (as bytes32) of recipient on destination domain"
                }
              },
              "depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)": {
                "params": {
                  "amount": "Amount of tokens to burn",
                  "burnToken": "Address of token to burn",
                  "destinationCaller": "Authorized caller on the destination domain, as bytes32",
                  "destinationDomain": "Destination domain (Chain ID in CCTP)",
                  "hookData": "Hook data to append to burn message for interpretation on destination domain",
                  "maxFee": "Maximum fee to pay on the destination domain",
                  "minFinalityThreshold": "Minimum finality at which the message should be attested to",
                  "mintRecipient": "Address (as bytes32) of recipient on destination domain"
                }
              }
            },
            "title": "ITokenMessengerV2",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)": "8e0250ee",
              "depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)": "779b432d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"minFinalityThreshold\",\"type\":\"uint32\"}],\"name\":\"depositForBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"minFinalityThreshold\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"depositForBurnWithHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)\":{\"params\":{\"amount\":\"Amount of tokens to burn\",\"burnToken\":\"Address of token to burn\",\"destinationCaller\":\"Authorized caller on the destination domain, as bytes32\",\"destinationDomain\":\"Destination domain (Chain ID in CCTP)\",\"maxFee\":\"Maximum fee to pay on the destination domain\",\"minFinalityThreshold\":\"Minimum finality at which the message should be attested to\",\"mintRecipient\":\"Address (as bytes32) of recipient on destination domain\"}},\"depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)\":{\"params\":{\"amount\":\"Amount of tokens to burn\",\"burnToken\":\"Address of token to burn\",\"destinationCaller\":\"Authorized caller on the destination domain, as bytes32\",\"destinationDomain\":\"Destination domain (Chain ID in CCTP)\",\"hookData\":\"Hook data to append to burn message for interpretation on destination domain\",\"maxFee\":\"Maximum fee to pay on the destination domain\",\"minFinalityThreshold\":\"Minimum finality at which the message should be attested to\",\"mintRecipient\":\"Address (as bytes32) of recipient on destination domain\"}}},\"title\":\"ITokenMessengerV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)\":{\"notice\":\"Burns tokens and sends a message to the destination domain for minting\"},\"depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)\":{\"notice\":\"Burns tokens and sends a message with hook data to the destination domain for minting\"}},\"notice\":\"Interface for Circle's CCTP TokenMessengerV2 contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/ITokenMessengerV2.sol\":\"ITokenMessengerV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/ITokenMessengerV2.sol\":{\"keccak256\":\"0x851cb7eac88913592ba06e918e76a9e853c8ceaf351c0338987667fa14da2ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d204c85e437d744e213cd7c0fa51ae5f155f2d0aacb159a0f6d11fc3c8b0716\",\"dweb:/ipfs/QmdzbAbUPUBKMnAcjo4LLppU1gyDUSESwuFy7mjpX7kRD6\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)": {
                "notice": "Burns tokens and sends a message to the destination domain for minting"
              },
              "depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)": {
                "notice": "Burns tokens and sends a message with hook data to the destination domain for minting"
              }
            },
            "notice": "Interface for Circle's CCTP TokenMessengerV2 contract",
            "version": 1
          }
        }
      }
    }
  }
}