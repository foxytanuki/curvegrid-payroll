{
  "id": "38fb3935f648d76bf5c577828d7124be",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      },
      "contracts/core/MultichainPayrollWithHook.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../lib/interfaces/ITokenMessengerV2.sol\";\n\n/// @title MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments\n/// @notice This contract provides payroll functionality using contract's USDC balance.\n/// USDC must be deposited to the contract before making payments.\ncontract MultichainPayrollWithHook is Ownable {\n    // ============ Constants ============\n    \n    string private constant ERROR_INVALID_ADDRESS = \"MultichainPayrollWithHook: Invalid address\";\n    string private constant ERROR_INVALID_AMOUNT = \"MultichainPayrollWithHook: Amount must be greater than 0\";\n    string private constant ERROR_ROUTE_NOT_CONFIGURED = \"MultichainPayrollWithHook: Employee route not configured\";\n    string private constant ERROR_INVALID_USDC = \"MultichainPayrollWithHook: Invalid USDC address\";\n    string private constant ERROR_INVALID_TOKEN_MESSENGER = \"MultichainPayrollWithHook: Invalid TokenMessenger address\";\n    string private constant ERROR_INVALID_HOOK_WRAPPER = \"MultichainPayrollWithHook: Invalid HookWrapper address\";\n    string private constant ERROR_INVALID_MULTICHAIN_PAYROLL = \"MultichainPayrollWithHook: Invalid MultichainPayroll address\";\n\n    // ================================\n    // ============ Events ============\n    // ================================\n    \n    // ============ Admin Events ============ \n    // ----- both on destination chain and source chain -----\n    event USDCWithdrawn(address indexed recipient, uint256 amount);\n    // ----- only on source chain -----\n    event PaymentSent(\n        address indexed employee,\n        uint256 amount,\n        uint32 destinationDomain\n    );\n    // ----- only on destination chain -----\n    event EmployeeRouteSet(\n        address indexed employee,\n        uint32 domain,\n        address token,\n        bool lending\n    );\n\n    // ============ Destination Chain Hooks Events ============\n    // ----- only on destination chain -----\n    event PaymentReceived(\n        address indexed employee,\n        address token,\n        uint256 amount,\n        uint32 destinationDomain,\n        PaymentType paymentType\n    );\n    event DirectTransferExecuted(\n        address indexed employee,\n        address token,\n        uint256 amount\n    );\n    event TokenSwapExecuted(\n        address indexed employee,\n        uint256 usdcAmount,\n        address targetToken,\n        uint256 receivedAmount\n    );\n    event LendingDepositExecuted(\n        address indexed employee,\n        address token,\n        uint256 amount\n    );\n    \n    // ================================\n    // ============ Structs ===========\n    // ================================\n    \n    // Define payment type enum\n    enum PaymentType { DIRECT, SWAP, LENDING }\n\n    struct RouteInfo {\n        uint32 destinationCCTPDomain;\n        address desiredERC20Token;\n        bool lendingEnabled;\n    }\n\n    struct Employee {\n        address employee;\n        uint256 amount;\n    }\n\n    // ================================\n    // ============ Storage ===========\n    // ================================\n\n    mapping(address => RouteInfo) public routes;\n    address public immutable USDC;\n    ITokenMessengerV2 public immutable tokenMessenger;\n    address public immutable hookWrapper;\n    // In the future, this can be changed to a mapping that supports domains for better multichain compatibility\n    address public immutable targetMultichainPayroll;\n\n    // ================================\n    // ============ Constructor =======\n    // ================================\n\n    constructor(address _usdc, address _tokenMessenger, address _hookWrapper, address _targetMultichainPayroll) {\n        require(_usdc != address(0), ERROR_INVALID_USDC);\n        require(_tokenMessenger != address(0), ERROR_INVALID_TOKEN_MESSENGER);\n        require(_hookWrapper != address(0), ERROR_INVALID_HOOK_WRAPPER);\n        require(_targetMultichainPayroll != address(0), ERROR_INVALID_MULTICHAIN_PAYROLL);\n\n        USDC = _usdc;\n        tokenMessenger = ITokenMessengerV2(_tokenMessenger);\n        hookWrapper = _hookWrapper;\n        targetMultichainPayroll = _targetMultichainPayroll;\n    }\n\n    // =========================================\n    // ============ Admin Functions ============\n    // =========================================\n\n    /// @notice Admin registers payroll route info for an employee\n    /// @param employee The address of the employee\n    /// @param domain The CCTP domain where the employee will receive payments\n    /// @param token The token the employee wants to receive (can be USDC)\n    /// @param lending Whether to deposit to DeFi protocols or transfer directly\n    function setRouteInfo(\n        address employee,\n        uint32 domain,\n        address token,\n        bool lending\n    ) external onlyOwner {\n        require(employee != address(0), ERROR_INVALID_ADDRESS);\n        routes[employee] = RouteInfo(domain, token, lending);\n        emit EmployeeRouteSet(employee, domain, token, lending);\n    }\n\n    /// @notice Admin sends USDC to employees across chains via CCTP\n    /// @dev Uses contract's USDC balance\n    /// @param employees Array of employee addresses and payment amounts\n    function batchPayEmployees(Employee[] calldata employees) external onlyOwner {\n        for (uint256 i = 0; i < employees.length; i++) {\n            Employee memory emp = employees[i];\n            _validateEmployee(emp);\n            \n            RouteInfo memory route = routes[emp.employee];\n            require(isRouteConfigured(emp.employee), ERROR_ROUTE_NOT_CONFIGURED);\n            \n            // Send USDC to hookWrapper on destination chain at first,\n            // then the hookWrapper will call handleReceiveMessage on the targetMultichainPayroll\n            _sendCCTP(emp.employee, emp.amount, route.destinationCCTPDomain);\n            \n            emit PaymentSent(emp.employee, emp.amount, route.destinationCCTPDomain);\n        }\n    }\n\n    /// @notice Allows the owner to withdraw USDC from the contract\n    /// @param amount The amount of USDC to withdraw\n    /// @param recipient The address to send the withdrawn USDC to\n    function withdrawUSDC(uint256 amount, address recipient) external onlyOwner {\n        require(recipient != address(0), ERROR_INVALID_ADDRESS);\n        require(amount > 0, ERROR_INVALID_AMOUNT);\n        \n        IERC20(USDC).transfer(recipient, amount);\n        emit USDCWithdrawn(recipient, amount);\n    }\n\n    // ============ Internal Functions ============\n\n    /// @dev Validate employee data\n    /// @param emp Employee struct to validate\n    function _validateEmployee(Employee memory emp) internal pure {\n        require(emp.employee != address(0), ERROR_INVALID_ADDRESS);\n        require(emp.amount > 0, ERROR_INVALID_AMOUNT);\n    }\n\n    /// @dev Checks if a route has been configured for an employee\n    /// @param employee The employee address to check\n    /// @return true if the route has been configured, false otherwise\n    function isRouteConfigured(address employee) internal view returns (bool) {\n        return routes[employee].desiredERC20Token != address(0);\n    }\n\n    /// @dev Calls CCTP depositForBurn using TokenMessenger\n    /// @param to Recipient address (hookWrapper)\n    /// @param amount Amount to send\n    /// @param domain CCTP destination domain\n    function _sendCCTP(address to, uint256 amount, uint32 domain) internal {\n        IERC20(USDC).approve(address(tokenMessenger), amount);\n\n        // // 1. Prepare calldata for handleReceiveMessage(address recipient, uint256 amount)\n        // // This function resides on the targetMultichainPayroll contract, which will be called by the hookWrapper\n        bytes memory targetCalldata = abi.encodeWithSelector(\n            // Use the selector from the target contract instance/interface if available\n            // Casting the address assumes MultichainPayrollWithHook type compatibility\n            MultichainPayrollWithHook(targetMultichainPayroll).handleReceiveMessage.selector,\n            to,\n            amount\n        );\n\n        // // 2. Construct hookData by tightly packing the target contract address (targetMultichainPayroll) and its calldata\n        // // The hookWrapper will use this data to make the final call\n        bytes memory hookData = abi.encodePacked(bytes20(targetMultichainPayroll), targetCalldata);\n\n        // 3. Call CCTP's depositForBurnWithHook function with corrected parameters\n        // Use values consistent with the working TypeScript example and best practices\n        uint256 cctpMaxFee = 500; // Set max fee (0.0005 USDC)\n        uint32 cctpMinFinalityThreshold = 1000; // Set min finality threshold (consistent with TS example)\n        bytes32 destinationCaller = bytes32(0); // Any address can broadcast the message\n\n        tokenMessenger.depositForBurnWithHook(\n           amount,                     // amount to burn\n           domain,                     // destination CCTP domain\n           _addressToBytes32(to),      // mintRecipient on destination (hookWrapper)\n           USDC,                       // address of token being burned\n           destinationCaller,          // authorized caller on the destination domain (hookWrapper)\n           cctpMaxFee,                 // maximum fee to pay on the destination domain\n           cctpMinFinalityThreshold,   // minimum finality threshold\n           hookData                    // custom data passed to the hook contract\n        );\n    }\n\n    /// @dev Converts an Ethereum address to bytes32 format for CCTP\n    function _addressToBytes32(address addr) internal pure returns (bytes32) {\n        return bytes32(uint256(uint160(addr)));\n    }\n\n    // =========================================\n    // =========== Called via Hooks ============\n    // =========================================\n\n    /// @notice Called via CCTPHookWrapper relay(), triggered by Multichain message\n    /// @dev hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)\n    /// @param recipient The employee receiving the payment\n    /// @param amount The USDC amount received\n    function handleReceiveMessage(address recipient, uint256 amount) external {\n        require(recipient != address(0), ERROR_INVALID_ADDRESS);\n        require(amount > 0, ERROR_INVALID_AMOUNT);\n        \n        RouteInfo memory route = routes[recipient];\n        address finalToken = route.desiredERC20Token;\n        PaymentType paymentType = PaymentType.DIRECT;\n        \n        // Determine if token swap is needed\n        bool isSwapNeeded = finalToken != address(0) && finalToken != USDC;\n        \n        if (isSwapNeeded) {\n            amount = _swapUSDCToToken(amount, finalToken);\n            emit TokenSwapExecuted(recipient, amount, finalToken, amount);\n            paymentType = PaymentType.SWAP;\n        }\n\n        // Override payment type if lending is enabled\n        if (route.lendingEnabled) {\n            _depositToLendingProtocol(finalToken, amount, recipient);\n            emit LendingDepositExecuted(recipient, finalToken, amount);\n            paymentType = PaymentType.LENDING;\n        } else {\n            _transferToRecipient(finalToken, amount, recipient);\n            emit DirectTransferExecuted(recipient, finalToken, amount);\n        }\n\n        emit PaymentReceived(\n            recipient, \n            finalToken, \n            amount, \n            route.destinationCCTPDomain, \n            paymentType\n        );\n    }\n\n    function directTransfer(address recipient, uint256 amount) external {\n        require(recipient != address(0), ERROR_INVALID_ADDRESS);\n        require(amount > 0, ERROR_INVALID_AMOUNT);\n\n        _transferToRecipient(USDC, amount, recipient);\n        emit DirectTransferExecuted(recipient, USDC, amount);\n        // TODO: replace with a real destination domain\n        emit PaymentReceived(recipient, USDC, amount, 6, PaymentType.DIRECT);\n    }\n\n    // ============ Internal Token Logic (Mocked) ============\n\n    /// @dev Swap USDC to another token (implementation would use DEX)\n    function _swapUSDCToToken(uint256 amount, address /* token */) internal pure returns (uint256) {\n        // Swap logic via Uniswap etc. (mocked for demo)\n        return amount;\n    }\n\n    /// @dev Deposit tokens to DeFi lending protocol\n    function _depositToLendingProtocol(address token, uint256 amount, address recipient) internal {\n        // Lending protocol integration, e.g., Aave's deposit onBehalfOf\n    }\n\n    /// @dev Transfer tokens directly to recipient\n    function _transferToRecipient(address token, uint256 amount, address recipient) internal {\n        IERC20(token).transfer(recipient, amount);\n    }\n}\n"
      },
      "contracts/lib/interfaces/ITokenMessengerV2.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\n/**\n * @title ITokenMessengerV2\n * @notice Interface for Circle's CCTP TokenMessengerV2 contract\n */\ninterface ITokenMessengerV2 {\n    /**\n     * @notice Burns tokens and sends a message to the destination domain for minting\n     * @param amount Amount of tokens to burn\n     * @param destinationDomain Destination domain (Chain ID in CCTP)\n     * @param mintRecipient Address (as bytes32) of recipient on destination domain\n     * @param burnToken Address of token to burn\n     * @param destinationCaller Authorized caller on the destination domain, as bytes32\n     * @param maxFee Maximum fee to pay on the destination domain\n     * @param minFinalityThreshold Minimum finality at which the message should be attested to\n     */\n    function depositForBurn(\n        uint256 amount,\n        uint32 destinationDomain,\n        bytes32 mintRecipient,\n        address burnToken,\n        bytes32 destinationCaller,\n        uint256 maxFee,\n        uint32 minFinalityThreshold\n    ) external;\n\n    /**\n     * @notice Burns tokens and sends a message with hook data to the destination domain for minting\n     * @param amount Amount of tokens to burn\n     * @param destinationDomain Destination domain (Chain ID in CCTP)\n     * @param mintRecipient Address (as bytes32) of recipient on destination domain\n     * @param burnToken Address of token to burn\n     * @param destinationCaller Authorized caller on the destination domain, as bytes32\n     * @param maxFee Maximum fee to pay on the destination domain\n     * @param minFinalityThreshold Minimum finality at which the message should be attested to\n     * @param hookData Hook data to append to burn message for interpretation on destination domain\n     */\n    function depositForBurnWithHook(\n        uint256 amount,\n        uint32 destinationDomain,\n        bytes32 mintRecipient,\n        address burnToken,\n        bytes32 destinationCaller,\n        uint256 maxFee,\n        uint32 minFinalityThreshold,\n        bytes calldata hookData\n    ) external;\n} \n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout",
            "userdoc",
            "devdoc"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 1009,
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "start": 850
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              210
            ],
            "Ownable": [
              109
            ]
          },
          "id": 110,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 110,
              "sourceUnit": 211,
              "src": "66:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 210,
                    "src": "621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$210",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "621:7:0"
                }
              ],
              "contractDependencies": [
                210
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "97:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 109,
              "linearizedBaseContracts": [
                109,
                210
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "635:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "691:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "722:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:57:0"
                  },
                  "src": "664:84:0"
                },
                {
                  "body": {
                    "id": 34,
                    "nodeType": "Block",
                    "src": "874:135:0",
                    "statements": [
                      {
                        "assignments": [
                          18
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nodeType": "VariableDeclaration",
                            "scope": 34,
                            "src": "884:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 17,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "884:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "904:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "904:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "884:32:0"
                      },
                      {
                        "expression": {
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 22,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "926:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 23,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "935:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "926:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25,
                        "nodeType": "ExpressionStatement",
                        "src": "926:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 29,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "988:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 28,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "980:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 27,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "980:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "980:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "992:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "959:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "959:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "EmitStatement",
                        "src": "954:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "754:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 35,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "862:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "874:0:0"
                  },
                  "scope": 109,
                  "src": "850:159:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "1140:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1157:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 40,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "1150:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "1015:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 44,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1099:2:0"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1131:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1131:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1130:9:0"
                  },
                  "scope": 109,
                  "src": "1085:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1279:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 48,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "1297:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1297:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 50,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "1308:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 51,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1308:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1297:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1322:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 47,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1289:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1289:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:68:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1367:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1176:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1276:2:0"
                  },
                  "src": "1258:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1771:91:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1807:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 68,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1823:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1815:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1815:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1815:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 64,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1786:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1786:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "EmitStatement",
                        "src": "1781:45:0"
                      },
                      {
                        "expression": {
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 72,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1836:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1853:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1845:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1845:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1845:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1836:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1836:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1381:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 62,
                      "modifierName": {
                        "id": 61,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1761:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1761:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1743:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1771:0:0"
                  },
                  "scope": 109,
                  "src": "1717:145:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "2081:170:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 89,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "2099:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2119:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 91,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2111:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 90,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2111:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2111:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2099:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2123:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 88,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2091:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2091:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "ExpressionStatement",
                        "src": "2091:73:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 99,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2200:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2208:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 98,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2179:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2179:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "2174:43:0"
                      },
                      {
                        "expression": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 103,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2227:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 104,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2236:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2227:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "2227:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "1868:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 86,
                      "modifierName": {
                        "id": 85,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2071:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2071:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "2038:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2037:18:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2081:0:0"
                  },
                  "scope": 109,
                  "src": "2011:240:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 110,
              "src": "592:1661:0"
            }
          ],
          "src": "33:2221:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              187
            ]
          },
          "id": 188,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 111,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 112,
                "nodeType": "StructuredDocumentation",
                "src": "66:70:1",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 187,
              "linearizedBaseContracts": [
                187
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 113,
                    "nodeType": "StructuredDocumentation",
                    "src": "160:66:1",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 118,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "251:2:1"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "277:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "276:9:1"
                  },
                  "scope": 187,
                  "src": "231:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "292:72:1",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 126,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "388:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:17:1"
                  },
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "428:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "427:9:1"
                  },
                  "scope": 187,
                  "src": "369:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "443:209:1",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 136,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "675:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "694:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "694:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:35:1"
                  },
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "728:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:6:1"
                  },
                  "scope": 187,
                  "src": "657:77:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "740:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1028:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1043:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1027:32:1"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1083:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1083:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1082:9:1"
                  },
                  "scope": 187,
                  "src": "1009:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "1098:642:1",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1762:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1762:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1779:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1779:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1761:33:1"
                  },
                  "returnParameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1813:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:6:1"
                  },
                  "scope": 187,
                  "src": "1745:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 157,
                    "nodeType": "StructuredDocumentation",
                    "src": "1825:296:1",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2148:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2148:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2164:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2164:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2183:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2147:51:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2217:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2216:6:1"
                  },
                  "scope": 187,
                  "src": "2126:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "2229:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 177,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2407:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2429:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2449:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2449:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2406:57:1"
                  },
                  "src": "2392:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 178,
                    "nodeType": "StructuredDocumentation",
                    "src": "2470:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 186,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2638:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2638:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2661:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2686:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2637:63:1"
                  },
                  "src": "2623:78:1"
                }
              ],
              "scope": 188,
              "src": "137:2566:1"
            }
          ],
          "src": "33:2671:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              210
            ]
          },
          "id": 211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 189,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 210,
              "linearizedBaseContracts": [
                210
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "668:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "685:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "685:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 196,
                        "nodeType": "Return",
                        "src": "678:17:2"
                      }
                    ]
                  },
                  "id": 198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "617:2:2"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "651:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "651:15:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "650:17:2"
                  },
                  "scope": 210,
                  "src": "598:104:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "773:165:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "783:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$210",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "783:4:2"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "923:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "923:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 207,
                        "nodeType": "Return",
                        "src": "916:15:2"
                      }
                    ]
                  },
                  "id": 209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "725:2:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "759:12:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:14:2"
                  },
                  "scope": 210,
                  "src": "708:230:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 211,
              "src": "566:374:2"
            }
          ],
          "src": "33:908:2"
        },
        "id": 2
      },
      "contracts/core/MultichainPayrollWithHook.sol": {
        "ast": {
          "absolutePath": "contracts/core/MultichainPayrollWithHook.sol",
          "exportedSymbols": {
            "Context": [
              210
            ],
            "IERC20": [
              187
            ],
            "ITokenMessengerV2": [
              942
            ],
            "MultichainPayrollWithHook": [
              900
            ],
            "Ownable": [
              109
            ]
          },
          "id": 901,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 212,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:3"
            },
            {
              "id": 213,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "55:19:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 214,
              "nodeType": "ImportDirective",
              "scope": 901,
              "sourceUnit": 110,
              "src": "76:52:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 215,
              "nodeType": "ImportDirective",
              "scope": 901,
              "sourceUnit": 188,
              "src": "129:56:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/interfaces/ITokenMessengerV2.sol",
              "file": "../lib/interfaces/ITokenMessengerV2.sol",
              "id": 216,
              "nodeType": "ImportDirective",
              "scope": 901,
              "sourceUnit": 943,
              "src": "186:49:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 218,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 109,
                    "src": "523:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$109",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 219,
                  "nodeType": "InheritanceSpecifier",
                  "src": "523:7:3"
                }
              ],
              "contractDependencies": [
                109,
                210
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 217,
                "nodeType": "StructuredDocumentation",
                "src": "237:248:3",
                "text": "@title MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments\n @notice This contract provides payroll functionality using contract's USDC balance.\n USDC must be deposited to the contract before making payments."
              },
              "fullyImplemented": true,
              "id": 900,
              "linearizedBaseContracts": [
                900,
                109,
                210
              ],
              "name": "MultichainPayrollWithHook",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 222,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "585:92:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c69642061646472657373",
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "633:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1d57c702312658a7776cfbdc7d9862e69beb1f37c6cd8b7243e4bacce77480ff",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 225,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_AMOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "683:105:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "730:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fa64515d673bb404789e7e29e86f87ca1c0bcdb3d88f1bab5bfd018bd394961",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Amount must be greater than 0\""
                    },
                    "value": "MultichainPayrollWithHook: Amount must be greater than 0"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 228,
                  "mutability": "constant",
                  "name": "ERROR_ROUTE_NOT_CONFIGURED",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "794:111:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20456d706c6f79656520726f757465206e6f7420636f6e66696775726564",
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "847:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_24af20652807755d7ec5737b86e21ab7c7205b9bc6b4c7b55dd263c9b0145f99",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Employee route not configured\""
                    },
                    "value": "MultichainPayrollWithHook: Employee route not configured"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 231,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_USDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "911:94:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420555344432061646472657373",
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "956:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b31d32ea72e5e5d24376a8a54024b4b373e54e423b9c3e2401e0e49d62b25eb8",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid USDC address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid USDC address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 234,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_TOKEN_MESSENGER",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1011:115:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420546f6b656e4d657373656e6765722061646472657373",
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1067:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_825afad68fa47986413d609fc503997b774dc998124eb5a72cffd015fac6b8de",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid TokenMessenger address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid TokenMessenger address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 237,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_HOOK_WRAPPER",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1132:109:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420486f6f6b577261707065722061646472657373",
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1185:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_282f9534ffef2f125da8e6276d0b3ff89ed5f97a090d36eda8c3084588655c4f",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid HookWrapper address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid HookWrapper address"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 240,
                  "mutability": "constant",
                  "name": "ERROR_INVALID_MULTICHAIN_PAYROLL",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1247:121:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c6964204d756c7469636861696e506179726f6c6c2061646472657373",
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1306:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_073433202b4432b3a447cd5e967591e7670a5bcacb2275b7576edd252b765d6a",
                      "typeString": "literal_string \"MultichainPayrollWithHook: Invalid MultichainPayroll address\""
                    },
                    "value": "MultichainPayrollWithHook: Invalid MultichainPayroll address"
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 246,
                  "name": "USDCWithdrawn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "1629:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1629:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 244,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "1656:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1628:43:3"
                  },
                  "src": "1609:63:3"
                },
                {
                  "anonymous": false,
                  "id": 254,
                  "name": "PaymentSent",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1744:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1744:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1778:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1778:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "1802:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1802:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1734:98:3"
                  },
                  "src": "1717:116:3"
                },
                {
                  "anonymous": false,
                  "id": 264,
                  "name": "EmployeeRouteSet",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1915:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1915:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "domain",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1949:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1949:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 260,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1972:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1972:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 262,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "lending",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1995:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1905:108:3"
                  },
                  "src": "1883:131:3"
                },
                {
                  "anonymous": false,
                  "id": 276,
                  "name": "PaymentReceived",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2160:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2160:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2194:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2194:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2217:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2241:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paymentType",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "2275:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentType_$306",
                          "typeString": "enum MultichainPayrollWithHook.PaymentType"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "PaymentType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 306,
                          "src": "2275:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PaymentType_$306",
                            "typeString": "enum MultichainPayrollWithHook.PaymentType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2150:154:3"
                  },
                  "src": "2129:176:3"
                },
                {
                  "anonymous": false,
                  "id": 284,
                  "name": "DirectTransferExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "2348:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2348:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "2382:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2382:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 282,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "2405:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2405:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2338:87:3"
                  },
                  "src": "2310:116:3"
                },
                {
                  "anonymous": false,
                  "id": 294,
                  "name": "TokenSwapExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2464:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2464:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usdcAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2498:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2498:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 290,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "targetToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2526:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2526:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 292,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "receivedAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "2555:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2555:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2454:129:3"
                  },
                  "src": "2431:153:3"
                },
                {
                  "anonymous": false,
                  "id": 302,
                  "name": "LendingDepositExecuted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 296,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2627:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2627:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 298,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2661:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 300,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2684:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2684:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2617:87:3"
                  },
                  "src": "2589:116:3"
                },
                {
                  "canonicalName": "MultichainPayrollWithHook.PaymentType",
                  "id": 306,
                  "members": [
                    {
                      "id": 303,
                      "name": "DIRECT",
                      "nodeType": "EnumValue",
                      "src": "2891:6:3"
                    },
                    {
                      "id": 304,
                      "name": "SWAP",
                      "nodeType": "EnumValue",
                      "src": "2899:4:3"
                    },
                    {
                      "id": 305,
                      "name": "LENDING",
                      "nodeType": "EnumValue",
                      "src": "2905:7:3"
                    }
                  ],
                  "name": "PaymentType",
                  "nodeType": "EnumDefinition",
                  "src": "2872:42:3"
                },
                {
                  "canonicalName": "MultichainPayrollWithHook.RouteInfo",
                  "id": 313,
                  "members": [
                    {
                      "constant": false,
                      "id": 308,
                      "mutability": "mutable",
                      "name": "destinationCCTPDomain",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "2947:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 307,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2947:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "desiredERC20Token",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "2985:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2985:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 312,
                      "mutability": "mutable",
                      "name": "lendingEnabled",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "3020:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3020:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RouteInfo",
                  "nodeType": "StructDefinition",
                  "scope": 900,
                  "src": "2920:126:3",
                  "visibility": "public"
                },
                {
                  "canonicalName": "MultichainPayrollWithHook.Employee",
                  "id": 318,
                  "members": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "employee",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "3078:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3078:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "3104:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3104:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Employee",
                  "nodeType": "StructDefinition",
                  "scope": 900,
                  "src": "3052:73:3",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d7409659",
                  "id": 322,
                  "mutability": "mutable",
                  "name": "routes",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "3252:43:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$313_storage_$",
                    "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo)"
                  },
                  "typeName": {
                    "id": 321,
                    "keyType": {
                      "id": 319,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3260:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3252:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$313_storage_$",
                      "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo)"
                    },
                    "valueType": {
                      "id": 320,
                      "name": "RouteInfo",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 313,
                      "src": "3271:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RouteInfo_$313_storage_ptr",
                        "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "89a30271",
                  "id": 324,
                  "mutability": "immutable",
                  "name": "USDC",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "3301:29:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46117830",
                  "id": 326,
                  "mutability": "immutable",
                  "name": "tokenMessenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "3336:49:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                    "typeString": "contract ITokenMessengerV2"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "ITokenMessengerV2",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 942,
                    "src": "3336:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                      "typeString": "contract ITokenMessengerV2"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5a316f7a",
                  "id": 328,
                  "mutability": "immutable",
                  "name": "hookWrapper",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "3391:36:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3391:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "460cb6a6",
                  "id": 330,
                  "mutability": "immutable",
                  "name": "targetMultichainPayroll",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "3546:48:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "3830:488:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 342,
                                "name": "_usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "3848:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3865:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3857:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 343,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3857:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3857:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3848:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 348,
                              "name": "ERROR_INVALID_USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "3869:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 341,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3840:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3840:48:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 350,
                        "nodeType": "ExpressionStatement",
                        "src": "3840:48:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 352,
                                "name": "_tokenMessenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 334,
                                "src": "3906:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3933:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3925:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 353,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3925:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3925:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3906:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 358,
                              "name": "ERROR_INVALID_TOKEN_MESSENGER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "3937:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 351,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3898:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3898:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "3898:69:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 362,
                                "name": "_hookWrapper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 336,
                                "src": "3985:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4009:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4001:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 363,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4001:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4001:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3985:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 368,
                              "name": "ERROR_INVALID_HOOK_WRAPPER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "4013:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 361,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3977:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3977:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 370,
                        "nodeType": "ExpressionStatement",
                        "src": "3977:63:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 372,
                                "name": "_targetMultichainPayroll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 338,
                                "src": "4058:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4094:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4086:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 373,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4086:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4086:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4058:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 378,
                              "name": "ERROR_INVALID_MULTICHAIN_PAYROLL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4098:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 371,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4050:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4050:81:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "4050:81:3"
                      },
                      {
                        "expression": {
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 381,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "4142:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 382,
                            "name": "_usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "4149:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4142:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "4142:12:3"
                      },
                      {
                        "expression": {
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 385,
                            "name": "tokenMessenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "4164:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                              "typeString": "contract ITokenMessengerV2"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 387,
                                "name": "_tokenMessenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 334,
                                "src": "4199:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 386,
                              "name": "ITokenMessengerV2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "4181:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ITokenMessengerV2_$942_$",
                                "typeString": "type(contract ITokenMessengerV2)"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4181:34:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                              "typeString": "contract ITokenMessengerV2"
                            }
                          },
                          "src": "4164:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                            "typeString": "contract ITokenMessengerV2"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "4164:51:3"
                      },
                      {
                        "expression": {
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 391,
                            "name": "hookWrapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "4225:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 392,
                            "name": "_hookWrapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "4239:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4225:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 394,
                        "nodeType": "ExpressionStatement",
                        "src": "4225:26:3"
                      },
                      {
                        "expression": {
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 395,
                            "name": "targetMultichainPayroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "4261:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 396,
                            "name": "_targetMultichainPayroll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 338,
                            "src": "4287:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4261:50:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 398,
                        "nodeType": "ExpressionStatement",
                        "src": "4261:50:3"
                      }
                    ]
                  },
                  "id": 400,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "_usdc",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "3734:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3734:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "_tokenMessenger",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "3749:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "_hookWrapper",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "3774:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "_targetMultichainPayroll",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "3796:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3796:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3733:96:3"
                  },
                  "returnParameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3830:0:3"
                  },
                  "scope": 900,
                  "src": "3722:596:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "4967:198:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 415,
                                "name": "employee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "4985:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5005:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4997:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 416,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4997:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4997:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4985:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 421,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "5009:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 414,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4977:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4977:54:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "4977:54:3"
                      },
                      {
                        "expression": {
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 424,
                              "name": "routes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "5041:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$313_storage_$",
                                "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                              }
                            },
                            "id": 426,
                            "indexExpression": {
                              "id": 425,
                              "name": "employee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "5048:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5041:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$313_storage",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 428,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 405,
                                "src": "5070:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 429,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 407,
                                "src": "5078:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 430,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 409,
                                "src": "5085:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 427,
                              "name": "RouteInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "5060:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RouteInfo_$313_storage_ptr_$",
                                "typeString": "type(struct MultichainPayrollWithHook.RouteInfo storage pointer)"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5060:33:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                            }
                          },
                          "src": "5041:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RouteInfo_$313_storage",
                            "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "5041:52:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 435,
                              "name": "employee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "5125:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 436,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "5135:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 437,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "5143:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 438,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "5150:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 434,
                            "name": "EmployeeRouteSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "5108:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint32,address,bool)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5108:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 440,
                        "nodeType": "EmitStatement",
                        "src": "5103:55:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "4472:349:3",
                    "text": "@notice Admin registers payroll route info for an employee\n @param employee The address of the employee\n @param domain The CCTP domain where the employee will receive payments\n @param token The token the employee wants to receive (can be USDC)\n @param lending Whether to deposit to DeFi protocols or transfer directly"
                  },
                  "functionSelector": "49843f01",
                  "id": 442,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 412,
                      "modifierName": {
                        "id": 411,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4957:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4957:9:3"
                    }
                  ],
                  "name": "setRouteInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "4857:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4857:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "domain",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "4883:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4883:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "4906:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4906:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "lending",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "4929:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4929:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4847:100:3"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4967:0:3"
                  },
                  "scope": 900,
                  "src": "4826:339:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 507,
                    "nodeType": "Block",
                    "src": "5432:670:3",
                    "statements": [
                      {
                        "body": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5489:607:3",
                          "statements": [
                            {
                              "assignments": [
                                463
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 463,
                                  "mutability": "mutable",
                                  "name": "emp",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 505,
                                  "src": "5503:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee"
                                  },
                                  "typeName": {
                                    "id": 462,
                                    "name": "Employee",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 318,
                                    "src": "5503:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Employee_$318_storage_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 467,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 464,
                                  "name": "employees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "5525:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee calldata[] calldata"
                                  }
                                },
                                "id": 466,
                                "indexExpression": {
                                  "id": 465,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "5535:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5525:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Employee_$318_calldata_ptr",
                                  "typeString": "struct MultichainPayrollWithHook.Employee calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5503:34:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 469,
                                    "name": "emp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 463,
                                    "src": "5569:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                    }
                                  ],
                                  "id": 468,
                                  "name": "_validateEmployee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 575,
                                  "src": "5551:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_Employee_$318_memory_ptr_$returns$__$",
                                    "typeString": "function (struct MultichainPayrollWithHook.Employee memory) pure"
                                  }
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5551:22:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 471,
                              "nodeType": "ExpressionStatement",
                              "src": "5551:22:3"
                            },
                            {
                              "assignments": [
                                473
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 473,
                                  "mutability": "mutable",
                                  "name": "route",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 505,
                                  "src": "5600:22:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                                  },
                                  "typeName": {
                                    "id": 472,
                                    "name": "RouteInfo",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 313,
                                    "src": "5600:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RouteInfo_$313_storage_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 478,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 474,
                                  "name": "routes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 322,
                                  "src": "5625:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$313_storage_$",
                                    "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                                  }
                                },
                                "id": 477,
                                "indexExpression": {
                                  "expression": {
                                    "id": 475,
                                    "name": "emp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 463,
                                    "src": "5632:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                      "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                    }
                                  },
                                  "id": 476,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "employee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 315,
                                  "src": "5632:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5625:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RouteInfo_$313_storage",
                                  "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5600:45:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 481,
                                          "name": "emp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 463,
                                          "src": "5685:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                            "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                          }
                                        },
                                        "id": 482,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "employee",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 315,
                                        "src": "5685:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 480,
                                      "name": "isRouteConfigured",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 594,
                                      "src": "5667:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) view returns (bool)"
                                      }
                                    },
                                    "id": 483,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5667:31:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 484,
                                    "name": "ERROR_ROUTE_NOT_CONFIGURED",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 228,
                                    "src": "5700:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 479,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5659:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5659:68:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 486,
                              "nodeType": "ExpressionStatement",
                              "src": "5659:68:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 488,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "5933:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "employee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 315,
                                    "src": "5933:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 490,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "5947:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 491,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 317,
                                    "src": "5947:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 492,
                                      "name": "route",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 473,
                                      "src": "5959:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                      }
                                    },
                                    "id": 493,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "destinationCCTPDomain",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 308,
                                    "src": "5959:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 487,
                                  "name": "_sendCCTP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "5923:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                                    "typeString": "function (address,uint256,uint32)"
                                  }
                                },
                                "id": 494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5923:64:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 495,
                              "nodeType": "ExpressionStatement",
                              "src": "5923:64:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 497,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "6031:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 498,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "employee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 315,
                                    "src": "6031:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 499,
                                      "name": "emp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "6045:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                      }
                                    },
                                    "id": 500,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 317,
                                    "src": "6045:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 501,
                                      "name": "route",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 473,
                                      "src": "6057:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                                        "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "destinationCCTPDomain",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 308,
                                    "src": "6057:27:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 496,
                                  "name": "PaymentSent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "6019:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                                    "typeString": "function (address,uint256,uint32)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6019:66:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 504,
                              "nodeType": "EmitStatement",
                              "src": "6014:71:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 455,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 452,
                            "src": "5462:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 456,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "5466:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct MultichainPayrollWithHook.Employee calldata[] calldata"
                              }
                            },
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5466:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5462:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "initializationExpression": {
                          "assignments": [
                            452
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 452,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 506,
                              "src": "5447:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 451,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5447:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 454,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5459:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5447:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5484:3:3",
                            "subExpression": {
                              "id": 459,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "5484:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 461,
                          "nodeType": "ExpressionStatement",
                          "src": "5484:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "5442:654:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 443,
                    "nodeType": "StructuredDocumentation",
                    "src": "5171:179:3",
                    "text": "@notice Admin sends USDC to employees across chains via CCTP\n @dev Uses contract's USDC balance\n @param employees Array of employee addresses and payment amounts"
                  },
                  "functionSelector": "2055a637",
                  "id": 508,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 449,
                      "modifierName": {
                        "id": 448,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5422:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5422:9:3"
                    }
                  ],
                  "name": "batchPayEmployees",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "employees",
                        "nodeType": "VariableDeclaration",
                        "scope": 508,
                        "src": "5382:29:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct MultichainPayrollWithHook.Employee[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 444,
                            "name": "Employee",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 318,
                            "src": "5382:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$318_storage_ptr",
                              "typeString": "struct MultichainPayrollWithHook.Employee"
                            }
                          },
                          "id": 445,
                          "nodeType": "ArrayTypeName",
                          "src": "5382:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Employee_$318_storage_$dyn_storage_ptr",
                            "typeString": "struct MultichainPayrollWithHook.Employee[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5381:31:3"
                  },
                  "returnParameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5432:0:3"
                  },
                  "scope": 900,
                  "src": "5355:747:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 548,
                    "nodeType": "Block",
                    "src": "6372:229:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 519,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "6390:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6411:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6403:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 520,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6403:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6403:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "6390:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 525,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "6415:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 518,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6382:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6382:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "6382:55:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 529,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 511,
                                "src": "6455:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6464:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6455:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 532,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "6467:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 528,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6447:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6447:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 534,
                        "nodeType": "ExpressionStatement",
                        "src": "6447:41:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 539,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 513,
                              "src": "6529:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 540,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "6540:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 536,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 324,
                                  "src": "6514:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 535,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "6507:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6507:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$187",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136,
                            "src": "6507:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6507:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 542,
                        "nodeType": "ExpressionStatement",
                        "src": "6507:40:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 544,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 513,
                              "src": "6576:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 545,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "6587:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 543,
                            "name": "USDCWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "6562:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6562:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 547,
                        "nodeType": "EmitStatement",
                        "src": "6557:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 509,
                    "nodeType": "StructuredDocumentation",
                    "src": "6108:183:3",
                    "text": "@notice Allows the owner to withdraw USDC from the contract\n @param amount The amount of USDC to withdraw\n @param recipient The address to send the withdrawn USDC to"
                  },
                  "functionSelector": "0c1241b5",
                  "id": 549,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 516,
                      "modifierName": {
                        "id": 515,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6362:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6362:9:3"
                    }
                  ],
                  "name": "withdrawUSDC",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 511,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "6318:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 510,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6318:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "6334:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6334:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6317:35:3"
                  },
                  "returnParameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6372:0:3"
                  },
                  "scope": 900,
                  "src": "6296:305:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "6805:130:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 556,
                                  "name": "emp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "6823:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "employee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 315,
                                "src": "6823:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6847:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6839:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 558,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6839:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6839:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "6823:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 563,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "6851:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 555,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6815:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6815:58:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "6815:58:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 567,
                                  "name": "emp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "6891:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                                    "typeString": "struct MultichainPayrollWithHook.Employee memory"
                                  }
                                },
                                "id": 568,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 317,
                                "src": "6891:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6904:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6891:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 571,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "6907:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6883:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6883:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "6883:45:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 550,
                    "nodeType": "StructuredDocumentation",
                    "src": "6660:78:3",
                    "text": "@dev Validate employee data\n @param emp Employee struct to validate"
                  },
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateEmployee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "emp",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "6770:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$318_memory_ptr",
                          "typeString": "struct MultichainPayrollWithHook.Employee"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "Employee",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 318,
                          "src": "6770:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$318_storage_ptr",
                            "typeString": "struct MultichainPayrollWithHook.Employee"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6769:21:3"
                  },
                  "returnParameters": {
                    "id": 554,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6805:0:3"
                  },
                  "scope": 900,
                  "src": "6743:192:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "7207:72:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 583,
                                "name": "routes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 322,
                                "src": "7224:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$313_storage_$",
                                  "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                                }
                              },
                              "id": 585,
                              "indexExpression": {
                                "id": 584,
                                "name": "employee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "7231:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7224:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RouteInfo_$313_storage",
                                "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "desiredERC20Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 310,
                            "src": "7224:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7270:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7262:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 587,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7262:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7262:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7224:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 582,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "7217:55:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 576,
                    "nodeType": "StructuredDocumentation",
                    "src": "6941:187:3",
                    "text": "@dev Checks if a route has been configured for an employee\n @param employee The employee address to check\n @return true if the route has been configured, false otherwise"
                  },
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRouteConfigured",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "employee",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "7160:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7160:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7159:18:3"
                  },
                  "returnParameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 581,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "7201:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 580,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7201:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7200:6:3"
                  },
                  "scope": 900,
                  "src": "7133:146:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "7549:2069:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 610,
                                  "name": "tokenMessenger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "7588:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                                    "typeString": "contract ITokenMessengerV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                                    "typeString": "contract ITokenMessengerV2"
                                  }
                                ],
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7580:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 608,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7580:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7580:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 612,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "7605:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 605,
                                  "name": "USDC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 324,
                                  "src": "7566:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 604,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "7559:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7559:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$187",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 156,
                            "src": "7559:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7559:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 614,
                        "nodeType": "ExpressionStatement",
                        "src": "7559:53:3"
                      },
                      {
                        "assignments": [
                          616
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 616,
                            "mutability": "mutable",
                            "name": "targetCalldata",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "7834:27:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 615,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7834:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 627,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 620,
                                      "name": "targetMultichainPayroll",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "8103:23:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 619,
                                    "name": "MultichainPayrollWithHook",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 900,
                                    "src": "8077:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MultichainPayrollWithHook_$900_$",
                                      "typeString": "type(contract MultichainPayrollWithHook)"
                                    }
                                  },
                                  "id": 621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8077:50:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MultichainPayrollWithHook_$900",
                                    "typeString": "contract MultichainPayrollWithHook"
                                  }
                                },
                                "id": 622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "handleReceiveMessage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 810,
                                "src": "8077:71:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256) external"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "8077:80:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 624,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "8171:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 625,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "8187:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 617,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7864:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "7864:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7864:339:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7834:369:3"
                      },
                      {
                        "assignments": [
                          629
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 629,
                            "mutability": "mutable",
                            "name": "hookData",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "8412:21:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 628,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8412:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 638,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 634,
                                  "name": "targetMultichainPayroll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "8461:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8453:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 632,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8453:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8453:32:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            },
                            {
                              "id": 636,
                              "name": "targetCalldata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "8487:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 630,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8436:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8436:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8436:66:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8412:90:3"
                      },
                      {
                        "assignments": [
                          640
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 640,
                            "mutability": "mutable",
                            "name": "cctpMaxFee",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "8685:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 639,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8685:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 642,
                        "initialValue": {
                          "hexValue": "353030",
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8706:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8685:24:3"
                      },
                      {
                        "assignments": [
                          644
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 644,
                            "mutability": "mutable",
                            "name": "cctpMinFinalityThreshold",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "8748:31:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 643,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8748:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 646,
                        "initialValue": {
                          "hexValue": "31303030",
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8782:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8748:38:3"
                      },
                      {
                        "assignments": [
                          648
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 648,
                            "mutability": "mutable",
                            "name": "destinationCaller",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "8855:25:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 647,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8855:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 653,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8891:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8883:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8883:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8883:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8855:38:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 657,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "8995:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 658,
                              "name": "domain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "9052:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 660,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "9136:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 659,
                                "name": "_addressToBytes32",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "9118:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                  "typeString": "function (address) pure returns (bytes32)"
                                }
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9118:21:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 662,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "9203:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 663,
                              "name": "destinationCaller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "9275:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 664,
                              "name": "cctpMaxFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "9375:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 665,
                              "name": "cctpMinFinalityThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "9462:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 666,
                              "name": "hookData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 629,
                              "src": "9531:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 654,
                              "name": "tokenMessenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 326,
                              "src": "8945:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenMessengerV2_$942",
                                "typeString": "contract ITokenMessengerV2"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositForBurnWithHook",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "8945:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes memory) external"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8945:666:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "8945:666:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "7285:188:3",
                    "text": "@dev Calls CCTP depositForBurn using TokenMessenger\n @param to Recipient address (hookWrapper)\n @param amount Amount to send\n @param domain CCTP destination domain"
                  },
                  "id": 670,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_sendCCTP",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7497:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7497:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7509:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7509:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "domain",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7525:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7525:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7496:43:3"
                  },
                  "returnParameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7549:0:3"
                  },
                  "scope": 900,
                  "src": "7478:2140:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "9766:55:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 684,
                                      "name": "addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 673,
                                      "src": "9807:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9799:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 682,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9799:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9799:13:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9791:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 680,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9791:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9791:22:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9783:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 678,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9783:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9783:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 677,
                        "id": 688,
                        "nodeType": "Return",
                        "src": "9776:38:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 671,
                    "nodeType": "StructuredDocumentation",
                    "src": "9624:64:3",
                    "text": "@dev Converts an Ethereum address to bytes32 format for CCTP"
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addressToBytes32",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "9720:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9720:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9719:14:3"
                  },
                  "returnParameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "9757:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9756:9:3"
                  },
                  "scope": 900,
                  "src": "9693:128:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 809,
                    "nodeType": "Block",
                    "src": "10346:1270:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 699,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "10364:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 702,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10385:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10377:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 700,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10377:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10377:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "10364:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 705,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "10389:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 698,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10356:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10356:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "10356:55:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 709,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "10429:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10438:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10429:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 712,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "10441:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 708,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10421:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10421:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 714,
                        "nodeType": "ExpressionStatement",
                        "src": "10421:41:3"
                      },
                      {
                        "assignments": [
                          716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 716,
                            "mutability": "mutable",
                            "name": "route",
                            "nodeType": "VariableDeclaration",
                            "scope": 809,
                            "src": "10481:22:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "RouteInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 313,
                              "src": "10481:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RouteInfo_$313_storage_ptr",
                                "typeString": "struct MultichainPayrollWithHook.RouteInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 720,
                        "initialValue": {
                          "baseExpression": {
                            "id": 717,
                            "name": "routes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "10506:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RouteInfo_$313_storage_$",
                              "typeString": "mapping(address => struct MultichainPayrollWithHook.RouteInfo storage ref)"
                            }
                          },
                          "id": 719,
                          "indexExpression": {
                            "id": 718,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "10513:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10506:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RouteInfo_$313_storage",
                            "typeString": "struct MultichainPayrollWithHook.RouteInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10481:42:3"
                      },
                      {
                        "assignments": [
                          722
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 722,
                            "mutability": "mutable",
                            "name": "finalToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 809,
                            "src": "10533:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 721,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10533:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 725,
                        "initialValue": {
                          "expression": {
                            "id": 723,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "10554:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "desiredERC20Token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 310,
                          "src": "10554:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10533:44:3"
                      },
                      {
                        "assignments": [
                          727
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 727,
                            "mutability": "mutable",
                            "name": "paymentType",
                            "nodeType": "VariableDeclaration",
                            "scope": 809,
                            "src": "10587:23:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PaymentType_$306",
                              "typeString": "enum MultichainPayrollWithHook.PaymentType"
                            },
                            "typeName": {
                              "id": 726,
                              "name": "PaymentType",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 306,
                              "src": "10587:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentType_$306",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 730,
                        "initialValue": {
                          "expression": {
                            "id": 728,
                            "name": "PaymentType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "10613:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PaymentType_$306_$",
                              "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DIRECT",
                          "nodeType": "MemberAccess",
                          "src": "10613:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PaymentType_$306",
                            "typeString": "enum MultichainPayrollWithHook.PaymentType"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10587:44:3"
                      },
                      {
                        "assignments": [
                          732
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 732,
                            "mutability": "mutable",
                            "name": "isSwapNeeded",
                            "nodeType": "VariableDeclaration",
                            "scope": 809,
                            "src": "10695:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 731,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10695:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 743,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 733,
                              "name": "finalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "10715:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10737:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10729:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 734,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10729:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10729:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "10715:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 739,
                              "name": "finalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "10743:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 740,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "10757:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10743:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10715:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10695:66:3"
                      },
                      {
                        "condition": {
                          "id": 744,
                          "name": "isSwapNeeded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "10784:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 765,
                        "nodeType": "IfStatement",
                        "src": "10780:207:3",
                        "trueBody": {
                          "id": 764,
                          "nodeType": "Block",
                          "src": "10798:189:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 745,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 695,
                                  "src": "10812:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 747,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 695,
                                      "src": "10838:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 748,
                                      "name": "finalToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 722,
                                      "src": "10846:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 746,
                                    "name": "_swapUSDCToToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 869,
                                    "src": "10821:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,address) pure returns (uint256)"
                                    }
                                  },
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10821:36:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10812:45:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 751,
                              "nodeType": "ExpressionStatement",
                              "src": "10812:45:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 753,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "10894:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 754,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10905:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 755,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "10913:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 756,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10925:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 752,
                                  "name": "TokenSwapExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "10876:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,address,uint256)"
                                  }
                                },
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10876:56:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 758,
                              "nodeType": "EmitStatement",
                              "src": "10871:61:3"
                            },
                            {
                              "expression": {
                                "id": 762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 759,
                                  "name": "paymentType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "10946:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$306",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 760,
                                    "name": "PaymentType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 306,
                                    "src": "10960:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PaymentType_$306_$",
                                      "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                                    }
                                  },
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "SWAP",
                                  "nodeType": "MemberAccess",
                                  "src": "10960:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$306",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "src": "10946:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentType_$306",
                                  "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                }
                              },
                              "id": 763,
                              "nodeType": "ExpressionStatement",
                              "src": "10946:30:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 766,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "11056:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                              "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lendingEnabled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 312,
                          "src": "11056:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 798,
                          "nodeType": "Block",
                          "src": "11284:148:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 787,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "11319:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 788,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "11331:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 789,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "11339:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 786,
                                  "name": "_transferToRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "11298:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (address,uint256,address)"
                                  }
                                },
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11298:51:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 791,
                              "nodeType": "ExpressionStatement",
                              "src": "11298:51:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 793,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "11391:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 794,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "11402:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 795,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "11414:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 792,
                                  "name": "DirectTransferExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "11368:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11368:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 797,
                              "nodeType": "EmitStatement",
                              "src": "11363:58:3"
                            }
                          ]
                        },
                        "id": 799,
                        "nodeType": "IfStatement",
                        "src": "11052:380:3",
                        "trueBody": {
                          "id": 785,
                          "nodeType": "Block",
                          "src": "11078:200:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 769,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "11118:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 770,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "11130:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 771,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "11138:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 768,
                                  "name": "_depositToLendingProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "11092:25:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (address,uint256,address)"
                                  }
                                },
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11092:56:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 773,
                              "nodeType": "ExpressionStatement",
                              "src": "11092:56:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 775,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "11190:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 776,
                                    "name": "finalToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "11201:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 777,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "11213:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 774,
                                  "name": "LendingDepositExecuted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "11167:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11167:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 779,
                              "nodeType": "EmitStatement",
                              "src": "11162:58:3"
                            },
                            {
                              "expression": {
                                "id": 783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 780,
                                  "name": "paymentType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "11234:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$306",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 781,
                                    "name": "PaymentType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 306,
                                    "src": "11248:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PaymentType_$306_$",
                                      "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                                    }
                                  },
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "LENDING",
                                  "nodeType": "MemberAccess",
                                  "src": "11248:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentType_$306",
                                    "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                  }
                                },
                                "src": "11234:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentType_$306",
                                  "typeString": "enum MultichainPayrollWithHook.PaymentType"
                                }
                              },
                              "id": 784,
                              "nodeType": "ExpressionStatement",
                              "src": "11234:33:3"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 801,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "11476:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 802,
                              "name": "finalToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "11500:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 803,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "11525:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 804,
                                "name": "route",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 716,
                                "src": "11546:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RouteInfo_$313_memory_ptr",
                                  "typeString": "struct MultichainPayrollWithHook.RouteInfo memory"
                                }
                              },
                              "id": 805,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "destinationCCTPDomain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 308,
                              "src": "11546:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 806,
                              "name": "paymentType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 727,
                              "src": "11588:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentType_$306",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentType_$306",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            ],
                            "id": 800,
                            "name": "PaymentReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "11447:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_enum$_PaymentType_$306_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,enum MultichainPayrollWithHook.PaymentType)"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11447:162:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 808,
                        "nodeType": "EmitStatement",
                        "src": "11442:167:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "9975:292:3",
                    "text": "@notice Called via CCTPHookWrapper relay(), triggered by Multichain message\n @dev hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)\n @param recipient The employee receiving the payment\n @param amount The USDC amount received"
                  },
                  "functionSelector": "a34971f7",
                  "id": 810,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "handleReceiveMessage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "10302:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10302:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "10321:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10321:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10301:35:3"
                  },
                  "returnParameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10346:0:3"
                  },
                  "scope": 900,
                  "src": "10272:1344:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 855,
                    "nodeType": "Block",
                    "src": "11690:375:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 818,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 812,
                                "src": "11708:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11729:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11721:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 819,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11721:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11721:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "11708:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 824,
                              "name": "ERROR_INVALID_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "11733:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 817,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11700:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11700:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 826,
                        "nodeType": "ExpressionStatement",
                        "src": "11700:55:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 828,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "11773:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11782:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11773:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 831,
                              "name": "ERROR_INVALID_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "11785:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 827,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11765:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11765:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 833,
                        "nodeType": "ExpressionStatement",
                        "src": "11765:41:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 835,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "11838:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 836,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "11844:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 837,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "11852:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 834,
                            "name": "_transferToRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "11817:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11817:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "11817:45:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 841,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "11900:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 842,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "11911:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 843,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "11917:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 840,
                            "name": "DirectTransferExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "11877:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11877:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 845,
                        "nodeType": "EmitStatement",
                        "src": "11872:52:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 847,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "12011:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 848,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "12022:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 849,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "12028:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "36",
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12036:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            {
                              "expression": {
                                "id": 851,
                                "name": "PaymentType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "12039:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_PaymentType_$306_$",
                                  "typeString": "type(enum MultichainPayrollWithHook.PaymentType)"
                                }
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "DIRECT",
                              "nodeType": "MemberAccess",
                              "src": "12039:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentType_$306",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentType_$306",
                                "typeString": "enum MultichainPayrollWithHook.PaymentType"
                              }
                            ],
                            "id": 846,
                            "name": "PaymentReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "11995:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_enum$_PaymentType_$306_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,enum MultichainPayrollWithHook.PaymentType)"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11995:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 854,
                        "nodeType": "EmitStatement",
                        "src": "11990:68:3"
                      }
                    ]
                  },
                  "functionSelector": "6c61d60f",
                  "id": 856,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "directTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 856,
                        "src": "11646:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11646:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 814,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 856,
                        "src": "11665:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11665:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11645:35:3"
                  },
                  "returnParameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11690:0:3"
                  },
                  "scope": 900,
                  "src": "11622:443:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "12301:87:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 866,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 859,
                          "src": "12375:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 865,
                        "id": 867,
                        "nodeType": "Return",
                        "src": "12368:13:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 857,
                    "nodeType": "StructuredDocumentation",
                    "src": "12135:66:3",
                    "text": "@dev Swap USDC to another token (implementation would use DEX)"
                  },
                  "id": 869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapUSDCToToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "12232:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12232:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "12248:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12248:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12231:37:3"
                  },
                  "returnParameters": {
                    "id": 865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "12292:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12292:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12291:9:3"
                  },
                  "scope": 900,
                  "src": "12206:182:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 879,
                    "nodeType": "Block",
                    "src": "12541:80:3",
                    "statements": []
                  },
                  "documentation": {
                    "id": 870,
                    "nodeType": "StructuredDocumentation",
                    "src": "12394:48:3",
                    "text": "@dev Deposit tokens to DeFi lending protocol"
                  },
                  "id": 880,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_depositToLendingProtocol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "12482:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12482:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "12497:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12497:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "12513:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12513:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12481:50:3"
                  },
                  "returnParameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12541:0:3"
                  },
                  "scope": 900,
                  "src": "12447:174:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 898,
                    "nodeType": "Block",
                    "src": "12767:58:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "12800:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 895,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 885,
                              "src": "12811:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 891,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 883,
                                  "src": "12784:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 890,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "12777:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12777:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$187",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136,
                            "src": "12777:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12777:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "12777:41:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 881,
                    "nodeType": "StructuredDocumentation",
                    "src": "12627:46:3",
                    "text": "@dev Transfer tokens directly to recipient"
                  },
                  "id": 899,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferToRecipient",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "12708:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12708:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 885,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "12723:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 884,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12723:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "12739:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12739:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12707:50:3"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12767:0:3"
                  },
                  "scope": 900,
                  "src": "12678:147:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 901,
              "src": "485:12342:3"
            }
          ],
          "src": "32:12796:3"
        },
        "id": 3
      },
      "contracts/lib/interfaces/ITokenMessengerV2.sol": {
        "ast": {
          "absolutePath": "contracts/lib/interfaces/ITokenMessengerV2.sol",
          "exportedSymbols": {
            "ITokenMessengerV2": [
              942
            ]
          },
          "id": 943,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 902,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 903,
                "nodeType": "StructuredDocumentation",
                "src": "56:100:4",
                "text": " @title ITokenMessengerV2\n @notice Interface for Circle's CCTP TokenMessengerV2 contract"
              },
              "fullyImplemented": false,
              "id": 942,
              "linearizedBaseContracts": [
                942
              ],
              "name": "ITokenMessengerV2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "191:595:4",
                    "text": " @notice Burns tokens and sends a message to the destination domain for minting\n @param amount Amount of tokens to burn\n @param destinationDomain Destination domain (Chain ID in CCTP)\n @param mintRecipient Address (as bytes32) of recipient on destination domain\n @param burnToken Address of token to burn\n @param destinationCaller Authorized caller on the destination domain, as bytes32\n @param maxFee Maximum fee to pay on the destination domain\n @param minFinalityThreshold Minimum finality at which the message should be attested to"
                  },
                  "functionSelector": "8e0250ee",
                  "id": 921,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositForBurn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "824:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "848:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "848:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "mintRecipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "882:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "burnToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "913:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "913:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "destinationCaller",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "940:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 916,
                        "mutability": "mutable",
                        "name": "maxFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "975:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "975:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "minFinalityThreshold",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "999:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "999:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "814:218:4"
                  },
                  "returnParameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1041:0:4"
                  },
                  "scope": 942,
                  "src": "791:251:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "1048:710:4",
                    "text": " @notice Burns tokens and sends a message with hook data to the destination domain for minting\n @param amount Amount of tokens to burn\n @param destinationDomain Destination domain (Chain ID in CCTP)\n @param mintRecipient Address (as bytes32) of recipient on destination domain\n @param burnToken Address of token to burn\n @param destinationCaller Authorized caller on the destination domain, as bytes32\n @param maxFee Maximum fee to pay on the destination domain\n @param minFinalityThreshold Minimum finality at which the message should be attested to\n @param hookData Hook data to append to burn message for interpretation on destination domain"
                  },
                  "functionSelector": "779b432d",
                  "id": 941,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositForBurnWithHook",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1804:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1804:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "destinationDomain",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1828:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1828:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "mintRecipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1862:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1862:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "burnToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1893:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "destinationCaller",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1920:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1920:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "maxFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1955:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1955:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "minFinalityThreshold",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1979:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1979:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "hookData",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "2016:23:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2016:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1794:251:4"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2054:0:4"
                  },
                  "scope": 942,
                  "src": "1763:292:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 943,
              "src": "157:1900:4"
            }
          ],
          "src": "32:2027:4"
        },
        "id": 4
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/core/MultichainPayrollWithHook.sol": {
        "MultichainPayrollWithHook": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_usdc",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_tokenMessenger",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_hookWrapper",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_targetMultichainPayroll",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "DirectTransferExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "lending",
                  "type": "bool"
                }
              ],
              "name": "EmployeeRouteSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LendingDepositExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                },
                {
                  "indexed": false,
                  "internalType": "enum MultichainPayrollWithHook.PaymentType",
                  "name": "paymentType",
                  "type": "uint8"
                }
              ],
              "name": "PaymentReceived",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                }
              ],
              "name": "PaymentSent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usdcAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "targetToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "receivedAmount",
                  "type": "uint256"
                }
              ],
              "name": "TokenSwapExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "USDCWithdrawn",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "USDC",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "employee",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MultichainPayrollWithHook.Employee[]",
                  "name": "employees",
                  "type": "tuple[]"
                }
              ],
              "name": "batchPayEmployees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "directTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "handleReceiveMessage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "hookWrapper",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "routes",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "destinationCCTPDomain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "desiredERC20Token",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "lendingEnabled",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "employee",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "domain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "lending",
                  "type": "bool"
                }
              ],
              "name": "setRouteInfo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "targetMultichainPayroll",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tokenMessenger",
              "outputs": [
                {
                  "internalType": "contract ITokenMessengerV2",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "withdrawUSDC",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "batchPayEmployees((address,uint256)[])": {
                "details": "Uses contract's USDC balance",
                "params": {
                  "employees": "Array of employee addresses and payment amounts"
                }
              },
              "handleReceiveMessage(address,uint256)": {
                "details": "hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)",
                "params": {
                  "amount": "The USDC amount received",
                  "recipient": "The employee receiving the payment"
                }
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "setRouteInfo(address,uint32,address,bool)": {
                "params": {
                  "domain": "The CCTP domain where the employee will receive payments",
                  "employee": "The address of the employee",
                  "lending": "Whether to deposit to DeFi protocols or transfer directly",
                  "token": "The token the employee wants to receive (can be USDC)"
                }
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              },
              "withdrawUSDC(uint256,address)": {
                "params": {
                  "amount": "The amount of USDC to withdraw",
                  "recipient": "The address to send the withdrawn USDC to"
                }
              }
            },
            "title": "MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2664:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:5",
                            "type": ""
                          }
                        ],
                        "src": "7:143:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "284:625:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "331:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "340:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "343:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "333:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "333:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "333:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "305:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "314:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "301:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "301:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "326:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "297:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "297:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "294:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "357:128:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "372:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "386:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "376:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "401:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "447:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "458:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "443:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "443:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "467:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "411:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "411:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "401:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "495:129:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "510:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "524:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "514:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "540:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "586:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "597:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "582:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "582:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "606:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "550:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "550:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "540:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "634:129:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "649:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "663:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "653:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "679:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "725:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "736:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "721:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "721:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "745:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "689:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "689:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "679:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "773:129:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "788:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "802:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "792:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "818:74:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "864:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "875:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "860:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "860:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "884:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "828:31:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "828:64:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "818:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "230:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "241:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "253:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "261:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "269:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "277:6:5",
                            "type": ""
                          }
                        ],
                        "src": "156:753:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1007:272:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1017:53:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1064:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1031:32:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1031:39:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1021:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1079:78:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1145:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1150:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1086:58:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1086:71:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1192:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1199:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1188:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1188:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1206:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1211:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1166:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1166:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1166:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1227:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1238:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1265:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "1243:21:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1243:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1234:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1234:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "988:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "995:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1003:3:5",
                            "type": ""
                          }
                        ],
                        "src": "915:364:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1403:195:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1413:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1425:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1436:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1421:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1421:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1413:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1460:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1471:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1456:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1456:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "1479:4:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1485:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1475:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1475:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1449:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1449:47:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1505:86:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1577:6:5"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "1586:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1513:63:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1513:78:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1505:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1375:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1387:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1398:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1285:313:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1663:40:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1674:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1690:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1684:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1684:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1674:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1646:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1656:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1604:99:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1805:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1822:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1827:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1815:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1815:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1815:19:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1843:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1862:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1867:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1858:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1858:14:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1843:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1777:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1782:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "1793:11:5",
                            "type": ""
                          }
                        ],
                        "src": "1709:169:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1929:51:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1939:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "1950:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1950:24:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1939:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1911:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1921:7:5",
                            "type": ""
                          }
                        ],
                        "src": "1884:96:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2031:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2041:65:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2056:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2063:42:5",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2052:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2041:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2013:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2023:7:5",
                            "type": ""
                          }
                        ],
                        "src": "1986:126:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2167:258:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2177:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2186:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2181:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2246:63:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "2271:3:5"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2276:1:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2267:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2267:11:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2290:3:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2295:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2286:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2286:11:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2280:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2280:18:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2260:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2260:39:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2260:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2207:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2210:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2204:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2204:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2218:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2220:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2229:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2232:2:5",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2225:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2225:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2220:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2200:3:5",
                                "statements": []
                              },
                              "src": "2196:113:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2343:76:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "2393:3:5"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "2398:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2389:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2389:16:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2407:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2382:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2382:27:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2382:27:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2324:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2327:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2321:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2321:13:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2318:2:5"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "2149:3:5",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "2154:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2159:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2118:307:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2479:54:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2489:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2507:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2514:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2503:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2503:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2523:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2519:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2519:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2499:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2499:28:5"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2489:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2462:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2472:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2431:102:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2582:79:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2639:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2648:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2651:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2641:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2641:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2641:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2605:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2630:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "2612:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2612:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2602:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2602:35:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2595:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2595:43:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2592:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2575:5:5",
                            "type": ""
                          }
                        ],
                        "src": "2539:122:5"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29D9 CODESIZE SUB DUP1 PUSH3 0x29D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A PUSH3 0x40E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x29AA PUSH1 0x2F SWAP2 CODECOPY SWAP1 PUSH3 0x177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16E SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2971 PUSH1 0x39 SWAP2 CODECOPY SWAP1 PUSH3 0x207 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1FE SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x293B PUSH1 0x36 SWAP2 CODECOPY SWAP1 PUSH3 0x297 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x28FF PUSH1 0x3C SWAP2 CODECOPY SWAP1 PUSH3 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x31E SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x5AF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x427 DUP2 PUSH3 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x454 DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x467 DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x47A DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x48D DUP8 DUP3 DUP9 ADD PUSH3 0x416 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A6 DUP3 PUSH3 0x4FE JUMP JUMPDEST PUSH3 0x4B2 DUP2 DUP6 PUSH3 0x509 JUMP JUMPDEST SWAP4 POP PUSH3 0x4C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x54E JUMP JUMPDEST PUSH3 0x4CF DUP2 PUSH3 0x584 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4F6 DUP2 DUP5 PUSH3 0x499 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x527 DUP3 PUSH3 0x52E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x56E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x57E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5A0 DUP2 PUSH3 0x51A JUMP JUMPDEST DUP2 EQ PUSH3 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x22DC PUSH3 0x623 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x7AE MSTORE DUP1 PUSH2 0x17A7 MSTORE POP DUP1 PUSH2 0xA92 MSTORE POP DUP1 PUSH2 0x7D2 MSTORE DUP1 PUSH2 0x1697 MSTORE DUP1 PUSH2 0x1804 MSTORE POP DUP1 PUSH2 0x3EA MSTORE DUP1 PUSH2 0xBA4 MSTORE DUP1 PUSH2 0xC04 MSTORE DUP1 PUSH2 0xC74 MSTORE DUP1 PUSH2 0xE23 MSTORE DUP1 PUSH2 0x1083 MSTORE DUP1 PUSH2 0x165B MSTORE DUP1 PUSH2 0x184B MSTORE POP PUSH2 0x22DC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C61D60F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA34971F7 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xD7409659 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x232 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6C61D60F EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1A8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xC1241B5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2055A637 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x460CB6A6 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x46117830 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x49843F01 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5A316F7A EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0xCB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x274 PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2AA7FB97600EA702B454359FC3D02AE9FA48367E7155505D38CEE896E5B5AAE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x50E PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x5B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D4 DUP2 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x6CA DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2237 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x73C DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1659 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF71683287BC1001960D58BC3C44FDF0A48968C40E7DD1E89664EDDF3693BBF9D DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7FC PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81A PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA60AA31DA7F23B6C3CFE7606FAD5F49495D86B0A8C134C3985B840284CBD8D88 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBCA PUSH32 0x0 DUP3 DUP5 PUSH2 0x18CD JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC PUSH32 0x0 DUP4 PUSH1 0x6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDA PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xEF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10D2 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x113D JUMPI PUSH2 0x10E4 DUP6 DUP5 PUSH2 0x1960 JUMP JUMPDEST SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22939CF4A3EE95F380E4CFE7C0FBD42FD1C7427618122DF3665DBF34E0016091 DUP7 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1130 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x11AB JUMPI PUSH2 0x1152 DUP4 DUP7 DUP9 PUSH2 0x196B JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4252D8E852CF9C67F19B86AE3BF4C88ABECA15875B71DD57E2F4EE6A57B0A980 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x119A SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SWAP2 POP PUSH2 0x1207 JUMP JUMPDEST PUSH2 0x11B6 DUP4 DUP7 DUP9 PUSH2 0x18CD JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC DUP5 DUP8 DUP8 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0x1257 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x12D6 PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F4 PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x137D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2211 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xA34971F7 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1744 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x60 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17DB SWAP3 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1F4 SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x779B432D DUP9 DUP9 PUSH2 0x1849 DUP13 PUSH2 0x1970 JUMP JUMPDEST PUSH32 0x0 DUP7 DUP10 DUP10 DUP13 PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1891 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1908 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1936 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A2 DUP2 PUSH2 0x218A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A01 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A16 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A38 PUSH1 0x40 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A48 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1A5C DUP5 DUP3 DUP6 ADD PUSH2 0x1A68 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A77 DUP2 PUSH2 0x21B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8C DUP2 PUSH2 0x21CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1ADC DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AED DUP6 DUP3 DUP7 ADD PUSH2 0x1A68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1B DUP8 DUP3 DUP9 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B2C DUP8 DUP3 DUP9 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B3D DUP8 DUP3 DUP9 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B4E DUP8 DUP3 DUP9 ADD PUSH2 0x19F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B93 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP5 DUP3 DUP6 ADD PUSH2 0x1A07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C12 DUP6 DUP3 DUP7 ADD PUSH2 0x1A68 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C23 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C36 DUP2 PUSH2 0x203D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x204F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C5C PUSH2 0x1C57 DUP3 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x2159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C6B DUP2 PUSH2 0x2087 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP3 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x1C86 DUP2 DUP6 PUSH2 0x2010 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1C9F DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB5 DUP3 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x1CBF DUP2 DUP6 PUSH2 0x2021 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2126 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE4 DUP2 PUSH2 0x20DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CF3 DUP2 PUSH2 0x2102 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D02 DUP2 PUSH2 0x2114 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D13 DUP3 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x1D1D DUP2 DUP6 PUSH2 0x202C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1D36 DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D4A DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D59 DUP2 PUSH2 0x20CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B DUP3 DUP6 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x1CAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DB7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1DC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D41 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DE0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1DED PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1DFA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CF9 JUMP JUMPDEST PUSH2 0x1E07 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E25 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1E32 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1E3F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1E4C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E8A DUP2 DUP5 PUSH2 0x1D08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EC2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1ECF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D41 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EF9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1F06 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1F23 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1F30 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1F3D PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1F4A PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1F57 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1F64 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1F71 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1D50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x1F83 DUP2 DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FA7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1FB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1FC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C3C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x2163 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2048 DUP3 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x209F DUP3 PUSH2 0x2176 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E9 DUP3 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FB DUP3 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210D DUP3 PUSH2 0x2091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP3 PUSH2 0x20CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2144 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2129 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2153 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2187 JUMPI PUSH2 0x2186 PUSH2 0x2163 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2193 DUP2 PUSH2 0x203D JUMP JUMPDEST DUP2 EQ PUSH2 0x219E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21AA DUP2 PUSH2 0x204F JUMP JUMPDEST DUP2 EQ PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21C1 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x21CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21D8 DUP2 PUSH2 0x20CE JUMP JUMPDEST DUP2 EQ PUSH2 0x21E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4D PUSH22 0x6C7469636861696E506179726F6C6C57697468486F6F PUSH12 0x3A20496E76616C6964206164 PUSH5 0x726573734F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734D756C7469636861696E506179726F6C PUSH13 0x57697468486F6F6B3A20456D70 PUSH13 0x6F79656520726F757465206E6F PUSH21 0x20636F6E666967757265644D756C7469636861696E POP PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20416D6F75 PUSH15 0x74206D757374206265206772656174 PUSH6 0x72207468616E KECCAK256 ADDRESS LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF MSTORE 0xD0 JUMPI 0xF6 0xA5 0xD2 0x5E 0x5E 0xD0 0x2D REVERT DUP4 PUSH5 0x5D87F691EE PUSH7 0xBDC2593D0583A9 0xE5 PUSH22 0x1344B064736F6C634300070600334D756C7469636861 PUSH10 0x6E506179726F6C6C5769 PUSH21 0x68486F6F6B3A20496E76616C6964204D756C746963 PUSH9 0x61696E506179726F6C PUSH13 0x20616464726573734D756C7469 PUSH4 0x6861696E POP PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20496E7661 PUSH13 0x696420486F6F6B577261707065 PUSH19 0x20616464726573734D756C7469636861696E50 PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20496E7661 PUSH13 0x696420546F6B656E4D65737365 PUSH15 0x67657220616464726573734D756C74 PUSH10 0x636861696E506179726F PUSH13 0x6C57697468486F6F6B3A20496E PUSH23 0x616C696420555344432061646472657373000000000000 ",
              "sourceMap": "485:12342:3:-:0;;;3722:596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:17:0;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;3865:1:3;3848:19;;:5;:19;;;;3869:18;;;;;;;;;;;;;;;;;3840:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3933:1;3906:29;;:15;:29;;;;3937;;;;;;;;;;;;;;;;;3898:69;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4009:1;3985:26;;:12;:26;;;;4013;;;;;;;;;;;;;;;;;3977:63;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4094:1;4058:38;;:24;:38;;;;4098:32;;;;;;;;;;;;;;;;;4050:81;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4149:5;4142:12;;;;;;;;;;;;4199:15;4164:51;;;;;;;;;;;;4239:12;4225:26;;;;;;;;;;;;4287:24;4261:50;;;;;;;;;;;;3722:596;;;;485:12342;;598:104:2;651:15;685:10;678:17;;598:104;:::o;7:143:5:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:753::-;;;;;326:3;314:9;305:7;301:23;297:33;294:2;;;343:1;340;333:12;294:2;386:1;411:64;467:7;458:6;447:9;443:22;411:64;:::i;:::-;401:74;;357:128;524:2;550:64;606:7;597:6;586:9;582:22;550:64;:::i;:::-;540:74;;495:129;663:2;689:64;745:7;736:6;725:9;721:22;689:64;:::i;:::-;679:74;;634:129;802:2;828:64;884:7;875:6;864:9;860:22;828:64;:::i;:::-;818:74;;773:129;284:625;;;;;;;:::o;915:364::-;;1031:39;1064:5;1031:39;:::i;:::-;1086:71;1150:6;1145:3;1086:71;:::i;:::-;1079:78;;1166:52;1211:6;1206:3;1199:4;1192:5;1188:16;1166:52;:::i;:::-;1243:29;1265:6;1243:29;:::i;:::-;1238:3;1234:39;1227:46;;1007:272;;;;;:::o;1285:313::-;;1436:2;1425:9;1421:18;1413:26;;1485:9;1479:4;1475:20;1471:1;1460:9;1456:17;1449:47;1513:78;1586:4;1577:6;1513:78;:::i;:::-;1505:86;;1403:195;;;;:::o;1604:99::-;;1690:5;1684:12;1674:22;;1663:40;;;:::o;1709:169::-;;1827:6;1822:3;1815:19;1867:4;1862:3;1858:14;1843:29;;1805:73;;;;:::o;1884:96::-;;1950:24;1968:5;1950:24;:::i;:::-;1939:35;;1929:51;;;:::o;1986:126::-;;2063:42;2056:5;2052:54;2041:65;;2031:81;;;:::o;2118:307::-;2186:1;2196:113;2210:6;2207:1;2204:13;2196:113;;;2295:1;2290:3;2286:11;2280:18;2276:1;2271:3;2267:11;2260:39;2232:2;2229:1;2225:10;2220:15;;2196:113;;;2327:6;2324:1;2321:13;2318:2;;;2407:1;2398:6;2393:3;2389:16;2382:27;2318:2;2167:258;;;;:::o;2431:102::-;;2523:2;2519:7;2514:2;2507:5;2503:14;2499:28;2489:38;;2479:54;;;:::o;2539:122::-;2612:24;2630:5;2612:24;:::i;:::-;2605:5;2602:35;2592:2;;2651:1;2648;2641:12;2592:2;2582:79;:::o;485:12342:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15962:5",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:5",
                            "type": ""
                          }
                        ],
                        "src": "7:139:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "320:277:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "369:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "378:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "381:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "371:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "371:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "371:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "348:6:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "356:4:5",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "344:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "344:17:5"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "363:3:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "340:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "340:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "333:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "333:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "330:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "394:30:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "417:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "404:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "394:6:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "467:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "476:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "479:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "469:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "469:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "469:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "439:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "447:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "436:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "436:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "433:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "492:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "508:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "516:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "504:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "504:17:5"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "492:8:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "575:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "584:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "587:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "577:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "577:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "577:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "540:8:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "554:6:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "562:4:5",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "550:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "550:17:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "536:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "536:32:5"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "570:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "533:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "533:41:5"
                              },
                              "nodeType": "YulIf",
                              "src": "530:2:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "287:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "295:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "303:8:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "313:6:5",
                            "type": ""
                          }
                        ],
                        "src": "203:394:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "652:84:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "662:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "684:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "671:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "671:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "662:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "724:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:23:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "700:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "700:30:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "630:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "638:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "646:5:5",
                            "type": ""
                          }
                        ],
                        "src": "603:133:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "802:77:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "812:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "821:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "867:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "843:23:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "843:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "843:30:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "780:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "788:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "796:5:5",
                            "type": ""
                          }
                        ],
                        "src": "742:137:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1014:432:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1058:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1067:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1070:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1060:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1060:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1060:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1035:3:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1031:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1031:19:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1052:4:5",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1027:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1027:30:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1024:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1083:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1107:4:5",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1092:14:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1092:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:5:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1122:154:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1161:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1175:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1165:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1201:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1208:4:5",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1197:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1197:16:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "1240:9:5"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "1251:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1236:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1236:22:5"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "1260:3:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1215:20:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1215:49:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "1190:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1190:75:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1190:75:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1286:153:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1323:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1337:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1327:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1364:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1371:4:5",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1360:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1360:16:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "1403:9:5"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "1414:6:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1399:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1399:22:5"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "1423:3:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "1378:20:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1378:49:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "1353:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1353:75:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1353:75:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_struct$_Employee_$318_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "989:9:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1000:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1008:5:5",
                            "type": ""
                          }
                        ],
                        "src": "934:512:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1504:87:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1514:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1536:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1523:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1523:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1514:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1579:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1552:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1552:33:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1552:33:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1482:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1490:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1498:5:5",
                            "type": ""
                          }
                        ],
                        "src": "1452:139:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1648:86:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1658:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1680:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1667:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1667:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:5:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1722:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:25:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:32:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1696:32:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1626:6:5",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1634:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1642:5:5",
                            "type": ""
                          }
                        ],
                        "src": "1597:137:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1806:196:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1852:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1861:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1864:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1854:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1854:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1854:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1827:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1836:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1823:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1823:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1848:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1819:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1819:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1816:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1878:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1893:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1907:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1897:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1922:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1957:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1968:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1953:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1953:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1977:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1932:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1932:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1922:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1776:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1787:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1799:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1740:262:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2091:324:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2137:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2146:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2149:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2139:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2139:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2139:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2112:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2121:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2108:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2108:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2133:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2104:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2104:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2101:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2163:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2178:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2192:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2182:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2207:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2242:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2253:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2238:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2238:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2262:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2217:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2217:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2207:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2290:118:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2305:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2319:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2309:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2335:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2370:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2381:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2366:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2366:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2390:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2345:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2345:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2335:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2053:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2064:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2076:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2084:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2008:407:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2534:577:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2581:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2590:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2593:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2583:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2583:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2583:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2555:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2564:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2551:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2551:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2576:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2547:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2547:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2544:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2607:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2622:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2636:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2626:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2651:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2686:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2697:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2682:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2682:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2706:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2661:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2661:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2651:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2734:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2749:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2763:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2753:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2779:62:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2813:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2824:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2809:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2809:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2833:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint32",
                                      "nodeType": "YulIdentifier",
                                      "src": "2789:19:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2789:52:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2779:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2861:118:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2876:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2890:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2880:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2906:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2941:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2952:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2937:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2937:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2961:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2916:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2916:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2906:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2989:115:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3004:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3018:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3008:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3034:60:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3066:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3077:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3062:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3062:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3086:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "3044:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3044:50:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3034:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint32t_addresst_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2480:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2491:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2503:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2511:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2519:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2527:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2421:690:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3245:351:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3291:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3300:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3303:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3293:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3293:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3293:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3266:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3275:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3262:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3262:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3287:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3258:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3258:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3255:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3317:272:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3332:45:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3363:9:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3374:1:5",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3359:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3359:17:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3346:12:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3346:31:5"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3336:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3424:16:5",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3433:1:5",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3436:1:5",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3426:6:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3426:12:5"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3426:12:5"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3396:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3404:18:5",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3393:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3393:30:5"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3390:2:5"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3454:125:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3551:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3562:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3547:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3547:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3571:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3472:74:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3472:107:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3454:6:5"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3462:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3207:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3218:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3230:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3238:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3117:479:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3676:204:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3722:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3731:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3734:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3724:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3724:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3724:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3697:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3706:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3693:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3693:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3718:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3689:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3689:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3686:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3748:125:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3763:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3777:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3767:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3792:71:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3835:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3846:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3831:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3831:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3855:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3802:28:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3802:61:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3792:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3646:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3657:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3669:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3602:278:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3977:221:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4023:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4032:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4035:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4025:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4025:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4025:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3998:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4007:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3994:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3994:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4019:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3990:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3990:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3987:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4049:142:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4064:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4078:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4068:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4093:88:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4153:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4164:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4149:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4149:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4173:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_Employee_$318_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4103:45:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4103:78:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4093:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_Employee_$318_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3947:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3958:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3970:6:5",
                            "type": ""
                          }
                        ],
                        "src": "3886:312:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4287:324:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4333:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4342:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4345:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4335:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4335:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4335:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4308:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4317:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4304:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4304:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4329:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4300:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "4297:2:5"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4359:117:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4374:15:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4388:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4378:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4403:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4438:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4449:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4434:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4434:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4458:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4413:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4413:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4403:6:5"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4486:118:5",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4501:16:5",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4515:2:5",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4505:6:5",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4531:63:5",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4566:9:5"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4577:6:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4562:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4562:22:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4586:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4541:20:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4541:53:5"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4531:6:5"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4249:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4260:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4272:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4280:6:5",
                            "type": ""
                          }
                        ],
                        "src": "4204:407:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4682:53:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4699:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4722:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4704:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4704:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4692:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4692:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4692:37:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4670:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4677:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4617:118:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4800:50:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4817:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4837:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "4822:14:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4822:21:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4810:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4810:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4810:34:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4788:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4795:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4741:109:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4939:74:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4956:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4999:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bytes20",
                                          "nodeType": "YulIdentifier",
                                          "src": "4981:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4981:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "leftAlign_t_bytes20",
                                      "nodeType": "YulIdentifier",
                                      "src": "4961:19:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4961:45:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4949:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4949:58:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4949:58:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4927:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4934:3:5",
                            "type": ""
                          }
                        ],
                        "src": "4856:157:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5084:53:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5101:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5124:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5106:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5106:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5094:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5094:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5094:37:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5072:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5079:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5019:118:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5233:270:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5243:52:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5289:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5257:31:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5257:38:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5247:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5304:77:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5369:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5374:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5311:57:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5311:70:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5304:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5416:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5423:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5412:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5412:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5430:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5435:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5390:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5390:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5390:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5451:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5462:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5489:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5467:21:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5467:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5458:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5458:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5451:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5214:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5221:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5229:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5143:360:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5617:265:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5627:52:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5673:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5641:31:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5641:38:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5631:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5688:95:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5771:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5776:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5695:75:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5695:88:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5688:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5818:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5825:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5814:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5814:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5832:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5837:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5792:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5792:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5792:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5853:23:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5864:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5869:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5860:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5860:16:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5853:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5598:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5605:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5613:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5509:373:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5978:91:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5995:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6056:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ITokenMessengerV2_$942_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6000:55:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6000:62:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5988:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5988:75:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5988:75:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ITokenMessengerV2_$942_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5966:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5973:3:5",
                            "type": ""
                          }
                        ],
                        "src": "5888:181:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6153:79:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6170:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6219:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_PaymentType_$306_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "6175:43:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6175:50:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6163:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6163:63:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6163:63:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_PaymentType_$306_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6141:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6148:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6075:157:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6310:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6327:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6370:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_rational_6_by_1_to_t_uint32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6332:37:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6332:44:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6320:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6320:57:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6320:57:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_rational_6_by_1_to_t_uint32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6298:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6305:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6238:145:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6481:272:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6491:53:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6538:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6505:32:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6505:39:5"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6495:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6553:78:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6619:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6624:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6560:58:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6560:71:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6553:3:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6666:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6673:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6662:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6662:16:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6680:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6685:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6640:21:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6640:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6640:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6701:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6712:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6739:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6717:21:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6717:29:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6708:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6708:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6701:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6462:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6469:3:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6477:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6389:364:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6824:53:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6841:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6864:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6846:17:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6846:24:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6834:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6834:37:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6834:37:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6812:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6819:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6759:118:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6946:52:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6963:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6985:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6968:16:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6968:23:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6956:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6956:36:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6956:36:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6934:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6941:3:5",
                            "type": ""
                          }
                        ],
                        "src": "6883:115:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7166:250:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7239:6:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7248:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7177:61:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7177:75:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7177:75:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7261:19:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7272:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7277:2:5",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7268:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7268:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7261:3:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7290:100:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7377:6:5"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7386:3:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7297:79:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7297:93:5"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7290:3:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7400:10:5",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7407:3:5"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7400:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7137:3:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7143:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7151:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7162:3:5",
                            "type": ""
                          }
                        ],
                        "src": "7004:412:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7520:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7530:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7542:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7553:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7538:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7538:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7530:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7610:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7623:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7634:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7619:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7619:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7566:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7566:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7566:71:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7492:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7504:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7515:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7422:222:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7776:206:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7786:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7798:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7809:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7794:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7794:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7786:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7866:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7879:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7890:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7875:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7875:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7822:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7822:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7822:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7947:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7960:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7971:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7956:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7956:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7903:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7903:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7903:72:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7740:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7752:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7760:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7771:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7650:332:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8190:391:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8200:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8212:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8223:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8208:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8208:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8200:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8281:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8294:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8305:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8290:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8290:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8237:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8237:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8237:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8362:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8375:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8386:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8371:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8371:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8318:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8318:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8318:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8451:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8464:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8475:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8460:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8460:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_6_by_1_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8400:50:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8400:79:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8400:79:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "8546:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8559:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8570:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8555:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8555:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_PaymentType_$306_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8489:56:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8489:85:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8489:85:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_rational_6_by_1_t_enum$_PaymentType_$306__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8138:9:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "8150:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8158:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8166:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8174:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8185:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7988:593:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8780:382:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8790:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8802:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8813:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8798:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8798:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8790:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8871:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8884:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8895:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8880:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8880:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8827:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8827:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8827:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8952:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8965:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8976:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8961:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8961:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8908:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8908:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8908:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9032:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9045:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9056:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9041:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9041:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8990:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8990:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8990:70:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "9127:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9140:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9151:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9136:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9136:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_PaymentType_$306_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9070:56:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9070:85:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9070:85:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint32_t_enum$_PaymentType_$306__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8728:9:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "8740:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8748:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8756:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8764:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8775:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8587:575:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9291:149:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9301:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9313:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9324:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9309:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9309:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9301:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9406:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9419:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9430:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9415:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9415:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ITokenMessengerV2_$942_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9337:68:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9337:96:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9337:96:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ITokenMessengerV2_$942__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9263:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9275:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9286:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9168:272:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9564:195:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9574:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9586:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9597:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9582:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9582:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9574:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9621:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9632:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9617:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9617:17:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "9640:4:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9646:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9636:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9636:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9610:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9610:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9610:47:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9666:86:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9738:6:5"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9747:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9674:63:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9674:78:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9666:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9536:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9548:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9559:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9446:313:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9863:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9873:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9885:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9896:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9881:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9881:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9873:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9953:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9966:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9977:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9962:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9962:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9909:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9909:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9909:71:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9835:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9847:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9858:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9765:222:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10147:288:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10157:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10169:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10180:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10165:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10165:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10157:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10237:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10250:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10261:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10246:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10246:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10193:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10193:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10193:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10318:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10331:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10342:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10327:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10327:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10274:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10274:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10274:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10400:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10413:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10424:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10409:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10409:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10356:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10356:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10356:72:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10103:9:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10115:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10123:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10131:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10142:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9993:442:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10565:204:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10575:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10587:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10598:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10583:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10583:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10575:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10655:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10668:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10679:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10664:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10664:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10611:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10611:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10611:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10734:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10747:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10758:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10743:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10743:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10692:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10692:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10692:70:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10529:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10541:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10549:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10560:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10441:328:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11083:768:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11093:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11105:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11116:3:5",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11101:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11101:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11093:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11174:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11187:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11198:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11183:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11183:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11130:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11130:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11130:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11253:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11266:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11277:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11262:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11262:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11211:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11211:70:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11211:70:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11335:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11348:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11359:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11344:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11344:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11291:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11291:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11291:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11417:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11430:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11441:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11426:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11426:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11373:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11373:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11373:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "11499:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11512:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11523:3:5",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11508:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11508:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11455:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11455:73:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11455:73:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "11582:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11595:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11606:3:5",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11591:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11591:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11538:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11538:73:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11538:73:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "11663:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11676:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11687:3:5",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11672:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11672:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11621:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11621:71:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11621:71:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11713:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11724:3:5",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11709:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11709:19:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11734:4:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11740:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11730:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11730:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11702:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11702:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11702:49:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11760:84:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "11830:6:5"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11839:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11768:61:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11768:76:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11760:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10999:9:5",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "11011:6:5",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "11019:6:5",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "11027:6:5",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "11035:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "11043:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11051:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11059:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11067:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11078:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10775:1076:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12003:280:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12013:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12025:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12036:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12021:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12021:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12013:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12091:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12104:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12115:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12100:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12100:17:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12049:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12049:69:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12049:69:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12172:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12185:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12196:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12181:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12181:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12128:43:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12128:72:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12128:72:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "12248:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12261:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12272:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12257:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12257:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12210:37:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12210:66:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12210:66:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint32_t_address_t_bool__to_t_uint32_t_address_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11959:9:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11971:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11979:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11987:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11998:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11857:426:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12329:238:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12339:19:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12355:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12349:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12349:9:5"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "12339:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12367:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12389:6:5"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12397:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12385:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12385:17:5"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "12371:10:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12513:17:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "12515:11:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12515:13:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12515:13:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12456:10:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12468:18:5",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12453:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12453:34:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12492:10:5"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12504:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12489:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12489:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "12450:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12450:62:5"
                              },
                              "nodeType": "YulIf",
                              "src": "12447:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12546:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12550:10:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12539:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12539:22:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12539:22:5"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12313:4:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "12322:6:5",
                            "type": ""
                          }
                        ],
                        "src": "12289:278:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12631:40:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12642:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12658:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12652:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12652:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12642:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12614:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "12624:6:5",
                            "type": ""
                          }
                        ],
                        "src": "12573:98:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12736:40:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12747:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12763:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12757:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12757:12:5"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12747:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12719:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "12729:6:5",
                            "type": ""
                          }
                        ],
                        "src": "12677:99:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12877:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12894:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12899:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12887:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12887:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12887:19:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12915:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12934:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12939:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12930:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12930:14:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12915:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12849:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "12854:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "12865:11:5",
                            "type": ""
                          }
                        ],
                        "src": "12782:168:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13069:34:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13079:18:5",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13094:3:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13079:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13041:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13046:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "13057:11:5",
                            "type": ""
                          }
                        ],
                        "src": "12956:147:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13205:73:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13222:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13227:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13215:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13215:19:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13215:19:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13243:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13262:3:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13267:4:5",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13258:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13258:14:5"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13243:11:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13177:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13182:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "13193:11:5",
                            "type": ""
                          }
                        ],
                        "src": "13109:169:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13329:51:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13339:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13368:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "13350:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13350:24:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13339:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13311:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13321:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13284:96:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13428:48:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13438:32:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "13463:5:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "13456:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13456:13:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13449:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13449:21:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13438:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13410:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13420:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13386:90:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13527:105:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13537:89:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13552:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13559:66:5",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13548:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13548:78:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13537:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes20",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13509:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13519:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13482:150:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13683:32:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13693:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13704:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13693:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13665:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13675:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13638:77:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13781:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13791:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13802:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13791:7:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13850:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_PaymentType_$306",
                                  "nodeType": "YulIdentifier",
                                  "src": "13808:41:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13808:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13808:48:5"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_PaymentType_$306",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13763:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13773:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13721:141:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13913:81:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13923:65:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13938:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13945:42:5",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13934:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13934:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13923:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13895:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13905:7:5",
                            "type": ""
                          }
                        ],
                        "src": "13868:126:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14045:32:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14055:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14066:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14055:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14027:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14037:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14000:77:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14127:49:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14137:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14152:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14159:10:5",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14148:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14148:22:5"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "14137:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14109:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "14119:7:5",
                            "type": ""
                          }
                        ],
                        "src": "14083:93:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14267:91:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14277:75:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14346:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ITokenMessengerV2_$942_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "14290:55:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14290:62:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14277:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ITokenMessengerV2_$942_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14247:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14257:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14182:176:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14449:53:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14459:37:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14490:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "14472:17:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14472:24:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14459:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ITokenMessengerV2_$942_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14429:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14439:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14364:138:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14581:68:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14591:52:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14637:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_PaymentType_$306",
                                  "nodeType": "YulIdentifier",
                                  "src": "14604:32:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14604:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14591:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_PaymentType_$306_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14561:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14571:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14508:141:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14722:52:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14732:36:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14762:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "14745:16:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14745:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14732:9:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_rational_6_by_1_to_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14702:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14712:9:5",
                            "type": ""
                          }
                        ],
                        "src": "14655:119:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14829:258:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14839:10:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14848:1:5",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "14843:1:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14908:63:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "14933:3:5"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "14938:1:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "14929:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14929:11:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14952:3:5"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14957:1:5"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "14948:3:5"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "14948:11:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "14942:5:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14942:18:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14922:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14922:39:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14922:39:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "14869:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "14872:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14866:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14866:13:5"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "14880:19:5",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14882:15:5",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "14891:1:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14894:2:5",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14887:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14887:10:5"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "14882:1:5"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "14862:3:5",
                                "statements": []
                              },
                              "src": "14858:113:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15005:76:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "15055:3:5"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "15060:6:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15051:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15051:16:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15069:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15044:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15044:27:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15044:27:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "14986:1:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "14989:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14983:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14983:13:5"
                              },
                              "nodeType": "YulIf",
                              "src": "14980:2:5"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "14811:3:5",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "14816:3:5",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "14821:6:5",
                            "type": ""
                          }
                        ],
                        "src": "14780:307:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15140:32:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15150:16:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15161:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "aligned",
                                  "nodeType": "YulIdentifier",
                                  "src": "15150:7:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "leftAlign_t_bytes20",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15122:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "aligned",
                            "nodeType": "YulTypedName",
                            "src": "15132:7:5",
                            "type": ""
                          }
                        ],
                        "src": "15093:79:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15201:25:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "invalid",
                                  "nodeType": "YulIdentifier",
                                  "src": "15211:7:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15211:9:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15211:9:5"
                            }
                          ]
                        },
                        "name": "panic_error",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15178:48:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15280:54:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15290:38:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15308:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15315:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15304:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15304:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15324:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15320:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15320:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15300:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15300:28:5"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "15290:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15263:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "15273:6:5",
                            "type": ""
                          }
                        ],
                        "src": "15232:102:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15398:57:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15432:17:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "15434:11:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15434:13:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15434:13:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15421:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15428:1:5",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15418:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15418:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15411:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15411:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15408:2:5"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_PaymentType_$306",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15391:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15340:115:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15504:79:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15561:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15570:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15573:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15563:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15563:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15563:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15527:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15552:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "15534:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15534:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15524:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15524:35:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15517:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15517:43:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15514:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15497:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15461:122:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15629:76:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15683:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15692:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15695:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15685:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15685:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15685:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15652:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15674:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "15659:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15659:21:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15649:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15649:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15642:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15642:40:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15639:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15622:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15589:116:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15754:79:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15811:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15820:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15823:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15813:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15813:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15813:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15777:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15802:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "15784:17:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15784:24:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15774:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15774:35:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15767:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15767:43:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15764:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15747:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15711:122:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15881:78:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15937:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15946:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15949:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15939:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15939:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15939:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15904:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15928:5:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint32",
                                          "nodeType": "YulIdentifier",
                                          "src": "15911:16:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15911:23:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15901:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15901:34:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15894:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15894:42:5"
                              },
                              "nodeType": "YulIf",
                              "src": "15891:2:5"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15874:5:5",
                            "type": ""
                          }
                        ],
                        "src": "15839:120:5"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct MultichainPayrollWithHook.Employee[]\n    function abi_decode_t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x40)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct MultichainPayrollWithHook.Employee\n    function abi_decode_t_struct$_Employee_$318_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocateMemory(0x40)\n\n        {\n            // employee\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint32t_addresst_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_Employee_$318_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Employee_$318_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Employee_$318_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes20(cleanup_t_bytes20(value)))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_ITokenMessengerV2_$942_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITokenMessengerV2_$942_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_PaymentType_$306_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_PaymentType_$306_to_t_uint8(value))\n    }\n\n    function abi_encode_t_rational_6_by_1_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_6_by_1_to_t_uint32(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_6_by_1_t_enum$_PaymentType_$306__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_6_by_1_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_PaymentType_$306_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint32_t_enum$_PaymentType_$306__to_t_address_t_uint256_t_uint32_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_PaymentType_$306_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ITokenMessengerV2_$942__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITokenMessengerV2_$942_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint32_t_bytes32_t_address_t_bytes32_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value6,  add(headStart, 192))\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value7,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_address_t_bool__to_t_uint32_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_PaymentType_$306(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_PaymentType_$306(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function convert_t_contract$_ITokenMessengerV2_$942_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ITokenMessengerV2_$942_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITokenMessengerV2_$942_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_PaymentType_$306_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_PaymentType_$306(value)\n    }\n\n    function convert_t_rational_6_by_1_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_bytes20(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_PaymentType_$306(value) {\n        if iszero(lt(value, 3)) { panic_error() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "324": [
                  {
                    "length": 32,
                    "start": 1002
                  },
                  {
                    "length": 32,
                    "start": 2980
                  },
                  {
                    "length": 32,
                    "start": 3076
                  },
                  {
                    "length": 32,
                    "start": 3188
                  },
                  {
                    "length": 32,
                    "start": 3619
                  },
                  {
                    "length": 32,
                    "start": 4227
                  },
                  {
                    "length": 32,
                    "start": 5723
                  },
                  {
                    "length": 32,
                    "start": 6219
                  }
                ],
                "326": [
                  {
                    "length": 32,
                    "start": 2002
                  },
                  {
                    "length": 32,
                    "start": 5783
                  },
                  {
                    "length": 32,
                    "start": 6148
                  }
                ],
                "328": [
                  {
                    "length": 32,
                    "start": 2706
                  }
                ],
                "330": [
                  {
                    "length": 32,
                    "start": 1966
                  },
                  {
                    "length": 32,
                    "start": 6055
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636c61d60f1161008c5780638da5cb5b116100665780638da5cb5b146101c6578063a34971f7146101e4578063d740965914610200578063f2fde38b14610232576100cf565b80636c61d60f14610182578063715018a61461019e57806389a30271146101a8576100cf565b80630c1241b5146100d45780632055a637146100f0578063460cb6a61461010c578063461178301461012a57806349843f01146101485780635a316f7a14610164575b600080fd5b6100ee60048036038101906100e99190611bf1565b61024e565b005b61010a60048036038101906101059190611b5a565b6104e8565b005b6101146107ac565b6040516101219190611d87565b60405180910390f35b6101326107d0565b60405161013f9190611e55565b60405180910390f35b610162600480360381019061015d9190611af7565b6107f4565b005b61016c610a90565b6040516101799190611d87565b60405180910390f35b61019c60048036038101906101979190611abb565b610ab4565b005b6101a6610cb4565b005b6101b0610e21565b6040516101bd9190611d87565b60405180910390f35b6101ce610e45565b6040516101db9190611d87565b60405180910390f35b6101fe60048036038101906101f99190611abb565b610e6e565b005b61021a60048036038101906102159190611a92565b611267565b60405161022993929190611f92565b60405180910390f35b61024c60048036038101906102479190611a92565b6112ce565b005b6102566114c0565b73ffffffffffffffffffffffffffffffffffffffff16610274610e45565b73ffffffffffffffffffffffffffffffffffffffff16146102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016121e7602a913990610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9190611e70565b60405180910390fd5b506000821160405180606001604052806038815260200161226f60389139906103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de9190611e70565b60405180910390fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610443929190611da2565b602060405180830381600087803b15801561045d57600080fd5b505af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190611b9f565b508073ffffffffffffffffffffffffffffffffffffffff167f2aa7fb97600ea702b454359fc3d02ae9fa48367e7155505d38cee896e5b5aae7836040516104dc9190611e92565b60405180910390a25050565b6104f06114c0565b73ffffffffffffffffffffffffffffffffffffffff1661050e610e45565b73ffffffffffffffffffffffffffffffffffffffff1614610597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b828290508110156107a75760008383838181106105b357fe5b9050604002018036038101906105c99190611bc8565b90506105d4816114c8565b600060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900460ff16151515158152505090506106ca82600001516115be565b6040518060600160405280603881526020016122376038913990610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b9190611e70565b60405180910390fd5b5061073c826000015183602001518360000151611659565b816000015173ffffffffffffffffffffffffffffffffffffffff167ff71683287bc1001960d58bc3c44fdf0a48968c40e7dd1e89664eddf3693bbf9d83602001518360000151604051610790929190611ee4565b60405180910390a25050808060010191505061059a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107fc6114c0565b73ffffffffffffffffffffffffffffffffffffffff1661081a610e45565b73ffffffffffffffffffffffffffffffffffffffff16146108a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016121e7602a91399061092e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109259190611e70565b60405180910390fd5b5060405180606001604052808463ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001821515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160186101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff167fa60aa31da7f23b6c3cfe7606fad5f49495d86b0a8c134c3985b840284cbd8d88848484604051610a8293929190611f92565b60405180910390a250505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016121e7602a913990610b3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b369190611e70565b60405180910390fd5b506000811160405180606001604052806038815260200161226f6038913990610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b959190611e70565b60405180910390fd5b50610bca7f000000000000000000000000000000000000000000000000000000000000000082846118cd565b8173ffffffffffffffffffffffffffffffffffffffff167fe3ade051475bed3fd2d4a21a238ed43abc7cce06f9fe24b68382a8dcc7fe1f167f000000000000000000000000000000000000000000000000000000000000000083604051610c32929190611da2565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f0eb95b360b92e2136a60d877820272dd60a5c2d716a504bdbdc3b629c89a8fec7f00000000000000000000000000000000000000000000000000000000000000008360066000604051610ca89493929190611dcb565b60405180910390a25050565b610cbc6114c0565b73ffffffffffffffffffffffffffffffffffffffff16610cda610e45565b73ffffffffffffffffffffffffffffffffffffffff1614610d63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016121e7602a913990610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef09190611e70565b60405180910390fd5b506000811160405180606001604052806038815260200161226f6038913990610f58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4f9190611e70565b60405180910390fd5b506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900460ff16151515158152505090506000816020015190506000808073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110d257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b9050801561113d576110e48584611960565b94508573ffffffffffffffffffffffffffffffffffffffff167f22939cf4a3ee95f380e4cfe7c0fbd42fd1c7427618122df3665dbf34e001609186858860405161113093929190611ead565b60405180910390a2600191505b8360400151156111ab5761115283868861196b565b8573ffffffffffffffffffffffffffffffffffffffff167f4252d8e852cf9c67f19b86ae3bf4c88abeca15875b71dd57e2f4ee6a57b0a980848760405161119a929190611da2565b60405180910390a260029150611207565b6111b68386886118cd565b8573ffffffffffffffffffffffffffffffffffffffff167fe3ade051475bed3fd2d4a21a238ed43abc7cce06f9fe24b68382a8dcc7fe1f1684876040516111fe929190611da2565b60405180910390a25b8573ffffffffffffffffffffffffffffffffffffffff167f0eb95b360b92e2136a60d877820272dd60a5c2d716a504bdbdc3b629c89a8fec84878760000151866040516112579493929190611e10565b60405180910390a2505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900463ffffffff16908060000160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160189054906101000a900460ff16905083565b6112d66114c0565b73ffffffffffffffffffffffffffffffffffffffff166112f4610e45565b73ffffffffffffffffffffffffffffffffffffffff161461137d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122116026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614156040518060600160405280602a81526020016121e7602a913990611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e9190611e70565b60405180910390fd5b50600081602001511160405180606001604052806038815260200161226f60389139906115ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b19190611e70565b60405180910390fd5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b81526004016116d4929190611da2565b602060405180830381600087803b1580156116ee57600080fd5b505af1158015611702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117269190611b9f565b50600063a34971f760e01b8484604051602401611744929190611da2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060007f000000000000000000000000000000000000000000000000000000000000000060601b826040516020016117db929190611d5f565b604051602081830303815290604052905060006101f4905060006103e8905060008060001b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663779b432d88886118498c611970565b7f00000000000000000000000000000000000000000000000000000000000000008689898c6040518963ffffffff1660e01b8152600401611891989796959493929190611f0d565b600060405180830381600087803b1580156118ab57600080fd5b505af11580156118bf573d6000803e3d6000fd5b505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401611908929190611da2565b602060405180830381600087803b15801561192257600080fd5b505af1158015611936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195a9190611b9f565b50505050565b600082905092915050565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff1660001b9050919050565b6000813590506119a28161218a565b92915050565b60008083601f8401126119ba57600080fd5b8235905067ffffffffffffffff8111156119d357600080fd5b6020830191508360408202830111156119eb57600080fd5b9250929050565b600081359050611a01816121a1565b92915050565b600081519050611a16816121a1565b92915050565b600060408284031215611a2e57600080fd5b611a386040611fc9565b90506000611a4884828501611993565b6000830152506020611a5c84828501611a68565b60208301525092915050565b600081359050611a77816121b8565b92915050565b600081359050611a8c816121cf565b92915050565b600060208284031215611aa457600080fd5b6000611ab284828501611993565b91505092915050565b60008060408385031215611ace57600080fd5b6000611adc85828601611993565b9250506020611aed85828601611a68565b9150509250929050565b60008060008060808587031215611b0d57600080fd5b6000611b1b87828801611993565b9450506020611b2c87828801611a7d565b9350506040611b3d87828801611993565b9250506060611b4e878288016119f2565b91505092959194509250565b60008060208385031215611b6d57600080fd5b600083013567ffffffffffffffff811115611b8757600080fd5b611b93858286016119a8565b92509250509250929050565b600060208284031215611bb157600080fd5b6000611bbf84828501611a07565b91505092915050565b600060408284031215611bda57600080fd5b6000611be884828501611a1c565b91505092915050565b60008060408385031215611c0457600080fd5b6000611c1285828601611a68565b9250506020611c2385828601611993565b9150509250929050565b611c368161203d565b82525050565b611c458161204f565b82525050565b611c5c611c578261205b565b612159565b82525050565b611c6b81612087565b82525050565b6000611c7c82611ffa565b611c868185612010565b9350611c96818560208601612126565b611c9f81612165565b840191505092915050565b6000611cb582611ffa565b611cbf8185612021565b9350611ccf818560208601612126565b80840191505092915050565b611ce4816120de565b82525050565b611cf381612102565b82525050565b611d0281612114565b82525050565b6000611d1382612005565b611d1d818561202c565b9350611d2d818560208601612126565b611d3681612165565b840191505092915050565b611d4a816120c4565b82525050565b611d59816120ce565b82525050565b6000611d6b8285611c4b565b601482019150611d7b8284611caa565b91508190509392505050565b6000602082019050611d9c6000830184611c2d565b92915050565b6000604082019050611db76000830185611c2d565b611dc46020830184611d41565b9392505050565b6000608082019050611de06000830187611c2d565b611ded6020830186611d41565b611dfa6040830185611cf9565b611e076060830184611cea565b95945050505050565b6000608082019050611e256000830187611c2d565b611e326020830186611d41565b611e3f6040830185611d50565b611e4c6060830184611cea565b95945050505050565b6000602082019050611e6a6000830184611cdb565b92915050565b60006020820190508181036000830152611e8a8184611d08565b905092915050565b6000602082019050611ea76000830184611d41565b92915050565b6000606082019050611ec26000830186611d41565b611ecf6020830185611c2d565b611edc6040830184611d41565b949350505050565b6000604082019050611ef96000830185611d41565b611f066020830184611d50565b9392505050565b600061010082019050611f23600083018b611d41565b611f30602083018a611d50565b611f3d6040830189611c62565b611f4a6060830188611c2d565b611f576080830187611c62565b611f6460a0830186611d41565b611f7160c0830185611d50565b81810360e0830152611f838184611c71565b90509998505050505050505050565b6000606082019050611fa76000830186611d50565b611fb46020830185611c2d565b611fc16040830184611c3c565b949350505050565b6000604051905081810181811067ffffffffffffffff82111715611ff057611fef612163565b5b8060405250919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612048826120a4565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000819050919050565b600081905061209f82612176565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006120e9826120f0565b9050919050565b60006120fb826120a4565b9050919050565b600061210d82612091565b9050919050565b600061211f826120ce565b9050919050565b60005b83811015612144578082015181840152602081019050612129565b83811115612153576000848401525b50505050565b6000819050919050565bfe5b6000601f19601f8301169050919050565b6003811061218757612186612163565b5b50565b6121938161203d565b811461219e57600080fd5b50565b6121aa8161204f565b81146121b557600080fd5b50565b6121c1816120c4565b81146121cc57600080fd5b50565b6121d8816120ce565b81146121e357600080fd5b5056fe4d756c7469636861696e506179726f6c6c57697468486f6f6b3a20496e76616c696420616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d756c7469636861696e506179726f6c6c57697468486f6f6b3a20456d706c6f79656520726f757465206e6f7420636f6e666967757265644d756c7469636861696e506179726f6c6c57697468486f6f6b3a20416d6f756e74206d7573742062652067726561746572207468616e2030a2646970667358221220cf52d057f6a5d25e5ed02dfd83645d87f691ee66bdc2593d0583a9e5751344b064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C61D60F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA34971F7 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xD7409659 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x232 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6C61D60F EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1A8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xC1241B5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2055A637 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x460CB6A6 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x46117830 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x49843F01 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x5A316F7A EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0xCB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xE6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x274 PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2AA7FB97600EA702B454359FC3D02AE9FA48367E7155505D38CEE896E5B5AAE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x50E PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x5B3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D4 DUP2 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x6CA DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2237 PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x73C DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1659 JUMP JUMPDEST DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF71683287BC1001960D58BC3C44FDF0A48968C40E7DD1E89664EDDF3693BBF9D DUP4 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7FC PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81A PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA60AA31DA7F23B6C3CFE7606FAD5F49495D86B0A8C134C3985B840284CBD8D88 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xBCA PUSH32 0x0 DUP3 DUP5 PUSH2 0x18CD JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC PUSH32 0x0 DUP4 PUSH1 0x6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDA PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0xEF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10D2 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x113D JUMPI PUSH2 0x10E4 DUP6 DUP5 PUSH2 0x1960 JUMP JUMPDEST SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22939CF4A3EE95F380E4CFE7C0FBD42FD1C7427618122DF3665DBF34E0016091 DUP7 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1130 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x11AB JUMPI PUSH2 0x1152 DUP4 DUP7 DUP9 PUSH2 0x196B JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4252D8E852CF9C67F19B86AE3BF4C88ABECA15875B71DD57E2F4EE6A57B0A980 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x119A SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SWAP2 POP PUSH2 0x1207 JUMP JUMPDEST PUSH2 0x11B6 DUP4 DUP7 DUP9 PUSH2 0x18CD JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3ADE051475BED3FD2D4A21A238ED43ABC7CCE06F9FE24B68382A8DCC7FE1F16 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11FE SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB95B360B92E2136A60D877820272DD60A5C2D716A504BDBDC3B629C89A8FEC DUP5 DUP8 DUP8 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0x1257 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x12D6 PUSH2 0x14C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F4 PUSH2 0xE45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x137D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2211 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E7 PUSH1 0x2A SWAP2 CODECOPY SWAP1 PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x226F PUSH1 0x38 SWAP2 CODECOPY SWAP1 PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xA34971F7 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1744 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x60 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17DB SWAP3 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1F4 SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x779B432D DUP9 DUP9 PUSH2 0x1849 DUP13 PUSH2 0x1970 JUMP JUMPDEST PUSH32 0x0 DUP7 DUP10 DUP10 DUP13 PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1891 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1908 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1936 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A2 DUP2 PUSH2 0x218A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A01 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A16 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A38 PUSH1 0x40 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A48 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1A5C DUP5 DUP3 DUP6 ADD PUSH2 0x1A68 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A77 DUP2 PUSH2 0x21B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8C DUP2 PUSH2 0x21CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1ADC DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AED DUP6 DUP3 DUP7 ADD PUSH2 0x1A68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1B DUP8 DUP3 DUP9 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B2C DUP8 DUP3 DUP9 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B3D DUP8 DUP3 DUP9 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B4E DUP8 DUP3 DUP9 ADD PUSH2 0x19F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B93 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BBF DUP5 DUP3 DUP6 ADD PUSH2 0x1A07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C12 DUP6 DUP3 DUP7 ADD PUSH2 0x1A68 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C23 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C36 DUP2 PUSH2 0x203D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x204F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C5C PUSH2 0x1C57 DUP3 PUSH2 0x205B JUMP JUMPDEST PUSH2 0x2159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C6B DUP2 PUSH2 0x2087 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP3 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x1C86 DUP2 DUP6 PUSH2 0x2010 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1C9F DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB5 DUP3 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x1CBF DUP2 DUP6 PUSH2 0x2021 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2126 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE4 DUP2 PUSH2 0x20DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CF3 DUP2 PUSH2 0x2102 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D02 DUP2 PUSH2 0x2114 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D13 DUP3 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x1D1D DUP2 DUP6 PUSH2 0x202C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1D36 DUP2 PUSH2 0x2165 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D4A DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D59 DUP2 PUSH2 0x20CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B DUP3 DUP6 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x1CAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DB7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1DC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D41 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DE0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1DED PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1DFA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CF9 JUMP JUMPDEST PUSH2 0x1E07 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E25 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1E32 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1E3F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1E4C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E8A DUP2 DUP5 PUSH2 0x1D08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EC2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1ECF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D41 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EF9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1F06 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1F23 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1F30 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1F3D PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1F4A PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1F57 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1F64 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1D41 JUMP JUMPDEST PUSH2 0x1F71 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1D50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x1F83 DUP2 DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FA7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1FB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x1FC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C3C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x2163 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2048 DUP3 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x209F DUP3 PUSH2 0x2176 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E9 DUP3 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FB DUP3 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210D DUP3 PUSH2 0x2091 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP3 PUSH2 0x20CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2144 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2129 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2153 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2187 JUMPI PUSH2 0x2186 PUSH2 0x2163 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2193 DUP2 PUSH2 0x203D JUMP JUMPDEST DUP2 EQ PUSH2 0x219E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21AA DUP2 PUSH2 0x204F JUMP JUMPDEST DUP2 EQ PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21C1 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x21CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21D8 DUP2 PUSH2 0x20CE JUMP JUMPDEST DUP2 EQ PUSH2 0x21E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4D PUSH22 0x6C7469636861696E506179726F6C6C57697468486F6F PUSH12 0x3A20496E76616C6964206164 PUSH5 0x726573734F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734D756C7469636861696E506179726F6C PUSH13 0x57697468486F6F6B3A20456D70 PUSH13 0x6F79656520726F757465206E6F PUSH21 0x20636F6E666967757265644D756C7469636861696E POP PUSH2 0x7972 PUSH16 0x6C6C57697468486F6F6B3A20416D6F75 PUSH15 0x74206D757374206265206772656174 PUSH6 0x72207468616E KECCAK256 ADDRESS LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF MSTORE 0xD0 JUMPI 0xF6 0xA5 0xD2 0x5E 0x5E 0xD0 0x2D REVERT DUP4 PUSH5 0x5D87F691EE PUSH7 0xBDC2593D0583A9 0xE5 PUSH22 0x1344B064736F6C634300070600330000000000000000 ",
              "sourceMap": "485:12342:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6296:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5355:747;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3546:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3336:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4826:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3391:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11622:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1717:145:0;;;:::i;:::-;;3301:29:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10272:1344:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3252:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2011:240:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6296:305:3;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6411:1:3::1;6390:23;;:9;:23;;;;6415:21;;;;;;;;;;;;;;;;;6382:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6464:1;6455:6;:10;6467:20;;;;;;;;;;;;;;;;;6447:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6514:4;6507:21;;;6529:9;6540:6;6507:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6576:9;6562:32;;;6587:6;6562:32;;;;;;:::i;:::-;;;;;;;;6296:305:::0;;:::o;5355:747::-;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5447:9:3::1;5442:654;5466:9;;:16;;5462:1;:20;5442:654;;;5503:19;5525:9;;5535:1;5525:12;;;;;;;;;;;;5503:34;;;;;;;;;;:::i;:::-;;;5551:22;5569:3;5551:17;:22::i;:::-;5600;5625:6;:20;5632:3;:12;;;5625:20;;;;;;;;;;;;;;;5600:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;5667:31;5685:3;:12;;;5667:17;:31::i;:::-;5700:26;;;;;;;;;;;;;;;;;5659:68;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5923:64;5933:3;:12;;;5947:3;:10;;;5959:5;:27;;;5923:9;:64::i;:::-;6031:3;:12;;;6019:66;;;6045:3;:10;;;6057:5;:27;;;6019:66;;;;;;;:::i;:::-;;;;;;;;5442:654;;5484:3;;;;;;;5442:654;;;;5355:747:::0;;:::o;3546:48::-;;;:::o;3336:49::-;;;:::o;4826:339::-;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5005:1:3::1;4985:22;;:8;:22;;;;5009:21;;;;;;;;;;;;;;;;;4977:54;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5060:33;;;;;;;;5070:6;5060:33;;;;;;5078:5;5060:33;;;;;;5085:7;5060:33;;;;::::0;5041:6:::1;:16;5048:8;5041:16;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5125:8;5108:50;;;5135:6;5143:5;5150:7;5108:50;;;;;;;;:::i;:::-;;;;;;;;4826:339:::0;;;;:::o;3391:36::-;;;:::o;11622:443::-;11729:1;11708:23;;:9;:23;;;;11733:21;;;;;;;;;;;;;;;;;11700:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11782:1;11773:6;:10;11785:20;;;;;;;;;;;;;;;;;11765:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11817:45;11838:4;11844:6;11852:9;11817:20;:45::i;:::-;11900:9;11877:47;;;11911:4;11917:6;11877:47;;;;;;;:::i;:::-;;;;;;;;12011:9;11995:63;;;12022:4;12028:6;12036:1;12039:18;11995:63;;;;;;;;;:::i;:::-;;;;;;;;11622:443;;:::o;1717:145:0:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;3301:29:3:-;;;:::o;1085:85:0:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;10272:1344:3:-;10385:1;10364:23;;:9;:23;;;;10389:21;;;;;;;;;;;;;;;;;10356:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10438:1;10429:6;:10;10441:20;;;;;;;;;;;;;;;;;10421:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10481:22;10506:6;:17;10513:9;10506:17;;;;;;;;;;;;;;;10481:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10533:18;10554:5;:23;;;10533:44;;10587:23;10695:17;10737:1;10715:24;;:10;:24;;;;:46;;;;;10757:4;10743:18;;:10;:18;;;;10715:46;10695:66;;10784:12;10780:207;;;10821:36;10838:6;10846:10;10821:16;:36::i;:::-;10812:45;;10894:9;10876:56;;;10905:6;10913:10;10925:6;10876:56;;;;;;;;:::i;:::-;;;;;;;;10960:16;10946:30;;10780:207;11056:5;:20;;;11052:380;;;11092:56;11118:10;11130:6;11138:9;11092:25;:56::i;:::-;11190:9;11167:53;;;11201:10;11213:6;11167:53;;;;;;;:::i;:::-;;;;;;;;11248:19;11234:33;;11052:380;;;11298:51;11319:10;11331:6;11339:9;11298:20;:51::i;:::-;11391:9;11368:53;;;11402:10;11414:6;11368:53;;;;;;;:::i;:::-;;;;;;;;11052:380;11476:9;11447:162;;;11500:10;11525:6;11546:5;:27;;;11588:11;11447:162;;;;;;;;;:::i;:::-;;;;;;;;10272:1344;;;;;;:::o;3252:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:2:-;651:15;685:10;678:17;;598:104;:::o;6743:192:3:-;6847:1;6823:26;;:3;:12;;;:26;;;;6851:21;;;;;;;;;;;;;;;;;6815:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6904:1;6891:3;:10;;;:14;6907:20;;;;;;;;;;;;;;;;;6883:45;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6743:192;:::o;7133:146::-;7201:4;7270:1;7224:48;;:6;:16;7231:8;7224:16;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;;7217:55;;7133:146;;;:::o;7478:2140::-;7566:4;7559:20;;;7588:14;7605:6;7559:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7834:27;8077:80;;;8171:2;8187:6;7864:339;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7834:369;;8412:21;8461:23;8453:32;;8487:14;8436:66;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8412:90;;8685:18;8706:3;8685:24;;8748:31;8782:4;8748:38;;8855:25;8891:1;8883:10;;8855:38;;8945:14;:37;;;8995:6;9052;9118:21;9136:2;9118:17;:21::i;:::-;9203:4;9275:17;9375:10;9462:24;9531:8;8945:666;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7478:2140;;;;;;;;:::o;12678:147::-;12784:5;12777:22;;;12800:9;12811:6;12777:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12678:147;;;:::o;12206:182::-;12292:7;12375:6;12368:13;;12206:182;;;;:::o;12447:174::-;;;;:::o;9693:128::-;9757:7;9807:4;9791:22;;9783:31;;9776:38;;9693:128;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;203:394::-;;;363:3;356:4;348:6;344:17;340:27;330:2;;381:1;378;371:12;330:2;417:6;404:20;394:30;;447:18;439:6;436:30;433:2;;;479:1;476;469:12;433:2;516:4;508:6;504:17;492:29;;570:3;562:4;554:6;550:17;540:8;536:32;533:41;530:2;;;587:1;584;577:12;530:2;320:277;;;;;:::o;603:133::-;;684:6;671:20;662:29;;700:30;724:5;700:30;:::i;:::-;652:84;;;;:::o;742:137::-;;827:6;821:13;812:22;;843:30;867:5;843:30;:::i;:::-;802:77;;;;:::o;934:512::-;;1052:4;1040:9;1035:3;1031:19;1027:30;1024:2;;;1070:1;1067;1060:12;1024:2;1092:20;1107:4;1092:20;:::i;:::-;1083:29;;1175:1;1215:49;1260:3;1251:6;1240:9;1236:22;1215:49;:::i;:::-;1208:4;1201:5;1197:16;1190:75;1122:154;1337:2;1378:49;1423:3;1414:6;1403:9;1399:22;1378:49;:::i;:::-;1371:4;1364:5;1360:16;1353:75;1286:153;1014:432;;;;:::o;1452:139::-;;1536:6;1523:20;1514:29;;1552:33;1579:5;1552:33;:::i;:::-;1504:87;;;;:::o;1597:137::-;;1680:6;1667:20;1658:29;;1696:32;1722:5;1696:32;:::i;:::-;1648:86;;;;:::o;1740:262::-;;1848:2;1836:9;1827:7;1823:23;1819:32;1816:2;;;1864:1;1861;1854:12;1816:2;1907:1;1932:53;1977:7;1968:6;1957:9;1953:22;1932:53;:::i;:::-;1922:63;;1878:117;1806:196;;;;:::o;2008:407::-;;;2133:2;2121:9;2112:7;2108:23;2104:32;2101:2;;;2149:1;2146;2139:12;2101:2;2192:1;2217:53;2262:7;2253:6;2242:9;2238:22;2217:53;:::i;:::-;2207:63;;2163:117;2319:2;2345:53;2390:7;2381:6;2370:9;2366:22;2345:53;:::i;:::-;2335:63;;2290:118;2091:324;;;;;:::o;2421:690::-;;;;;2576:3;2564:9;2555:7;2551:23;2547:33;2544:2;;;2593:1;2590;2583:12;2544:2;2636:1;2661:53;2706:7;2697:6;2686:9;2682:22;2661:53;:::i;:::-;2651:63;;2607:117;2763:2;2789:52;2833:7;2824:6;2813:9;2809:22;2789:52;:::i;:::-;2779:62;;2734:117;2890:2;2916:53;2961:7;2952:6;2941:9;2937:22;2916:53;:::i;:::-;2906:63;;2861:118;3018:2;3044:50;3086:7;3077:6;3066:9;3062:22;3044:50;:::i;:::-;3034:60;;2989:115;2534:577;;;;;;;:::o;3117:479::-;;;3287:2;3275:9;3266:7;3262:23;3258:32;3255:2;;;3303:1;3300;3293:12;3255:2;3374:1;3363:9;3359:17;3346:31;3404:18;3396:6;3393:30;3390:2;;;3436:1;3433;3426:12;3390:2;3472:107;3571:7;3562:6;3551:9;3547:22;3472:107;:::i;:::-;3454:125;;;;3317:272;3245:351;;;;;:::o;3602:278::-;;3718:2;3706:9;3697:7;3693:23;3689:32;3686:2;;;3734:1;3731;3724:12;3686:2;3777:1;3802:61;3855:7;3846:6;3835:9;3831:22;3802:61;:::i;:::-;3792:71;;3748:125;3676:204;;;;:::o;3886:312::-;;4019:2;4007:9;3998:7;3994:23;3990:32;3987:2;;;4035:1;4032;4025:12;3987:2;4078:1;4103:78;4173:7;4164:6;4153:9;4149:22;4103:78;:::i;:::-;4093:88;;4049:142;3977:221;;;;:::o;4204:407::-;;;4329:2;4317:9;4308:7;4304:23;4300:32;4297:2;;;4345:1;4342;4335:12;4297:2;4388:1;4413:53;4458:7;4449:6;4438:9;4434:22;4413:53;:::i;:::-;4403:63;;4359:117;4515:2;4541:53;4586:7;4577:6;4566:9;4562:22;4541:53;:::i;:::-;4531:63;;4486:118;4287:324;;;;;:::o;4617:118::-;4704:24;4722:5;4704:24;:::i;:::-;4699:3;4692:37;4682:53;;:::o;4741:109::-;4822:21;4837:5;4822:21;:::i;:::-;4817:3;4810:34;4800:50;;:::o;4856:157::-;4961:45;4981:24;4999:5;4981:24;:::i;:::-;4961:45;:::i;:::-;4956:3;4949:58;4939:74;;:::o;5019:118::-;5106:24;5124:5;5106:24;:::i;:::-;5101:3;5094:37;5084:53;;:::o;5143:360::-;;5257:38;5289:5;5257:38;:::i;:::-;5311:70;5374:6;5369:3;5311:70;:::i;:::-;5304:77;;5390:52;5435:6;5430:3;5423:4;5416:5;5412:16;5390:52;:::i;:::-;5467:29;5489:6;5467:29;:::i;:::-;5462:3;5458:39;5451:46;;5233:270;;;;;:::o;5509:373::-;;5641:38;5673:5;5641:38;:::i;:::-;5695:88;5776:6;5771:3;5695:88;:::i;:::-;5688:95;;5792:52;5837:6;5832:3;5825:4;5818:5;5814:16;5792:52;:::i;:::-;5869:6;5864:3;5860:16;5853:23;;5617:265;;;;;:::o;5888:181::-;6000:62;6056:5;6000:62;:::i;:::-;5995:3;5988:75;5978:91;;:::o;6075:157::-;6175:50;6219:5;6175:50;:::i;:::-;6170:3;6163:63;6153:79;;:::o;6238:145::-;6332:44;6370:5;6332:44;:::i;:::-;6327:3;6320:57;6310:73;;:::o;6389:364::-;;6505:39;6538:5;6505:39;:::i;:::-;6560:71;6624:6;6619:3;6560:71;:::i;:::-;6553:78;;6640:52;6685:6;6680:3;6673:4;6666:5;6662:16;6640:52;:::i;:::-;6717:29;6739:6;6717:29;:::i;:::-;6712:3;6708:39;6701:46;;6481:272;;;;;:::o;6759:118::-;6846:24;6864:5;6846:24;:::i;:::-;6841:3;6834:37;6824:53;;:::o;6883:115::-;6968:23;6985:5;6968:23;:::i;:::-;6963:3;6956:36;6946:52;;:::o;7004:412::-;;7177:75;7248:3;7239:6;7177:75;:::i;:::-;7277:2;7272:3;7268:12;7261:19;;7297:93;7386:3;7377:6;7297:93;:::i;:::-;7290:100;;7407:3;7400:10;;7166:250;;;;;:::o;7422:222::-;;7553:2;7542:9;7538:18;7530:26;;7566:71;7634:1;7623:9;7619:17;7610:6;7566:71;:::i;:::-;7520:124;;;;:::o;7650:332::-;;7809:2;7798:9;7794:18;7786:26;;7822:71;7890:1;7879:9;7875:17;7866:6;7822:71;:::i;:::-;7903:72;7971:2;7960:9;7956:18;7947:6;7903:72;:::i;:::-;7776:206;;;;;:::o;7988:593::-;;8223:3;8212:9;8208:19;8200:27;;8237:71;8305:1;8294:9;8290:17;8281:6;8237:71;:::i;:::-;8318:72;8386:2;8375:9;8371:18;8362:6;8318:72;:::i;:::-;8400:79;8475:2;8464:9;8460:18;8451:6;8400:79;:::i;:::-;8489:85;8570:2;8559:9;8555:18;8546:6;8489:85;:::i;:::-;8190:391;;;;;;;:::o;8587:575::-;;8813:3;8802:9;8798:19;8790:27;;8827:71;8895:1;8884:9;8880:17;8871:6;8827:71;:::i;:::-;8908:72;8976:2;8965:9;8961:18;8952:6;8908:72;:::i;:::-;8990:70;9056:2;9045:9;9041:18;9032:6;8990:70;:::i;:::-;9070:85;9151:2;9140:9;9136:18;9127:6;9070:85;:::i;:::-;8780:382;;;;;;;:::o;9168:272::-;;9324:2;9313:9;9309:18;9301:26;;9337:96;9430:1;9419:9;9415:17;9406:6;9337:96;:::i;:::-;9291:149;;;;:::o;9446:313::-;;9597:2;9586:9;9582:18;9574:26;;9646:9;9640:4;9636:20;9632:1;9621:9;9617:17;9610:47;9674:78;9747:4;9738:6;9674:78;:::i;:::-;9666:86;;9564:195;;;;:::o;9765:222::-;;9896:2;9885:9;9881:18;9873:26;;9909:71;9977:1;9966:9;9962:17;9953:6;9909:71;:::i;:::-;9863:124;;;;:::o;9993:442::-;;10180:2;10169:9;10165:18;10157:26;;10193:71;10261:1;10250:9;10246:17;10237:6;10193:71;:::i;:::-;10274:72;10342:2;10331:9;10327:18;10318:6;10274:72;:::i;:::-;10356;10424:2;10413:9;10409:18;10400:6;10356:72;:::i;:::-;10147:288;;;;;;:::o;10441:328::-;;10598:2;10587:9;10583:18;10575:26;;10611:71;10679:1;10668:9;10664:17;10655:6;10611:71;:::i;:::-;10692:70;10758:2;10747:9;10743:18;10734:6;10692:70;:::i;:::-;10565:204;;;;;:::o;10775:1076::-;;11116:3;11105:9;11101:19;11093:27;;11130:71;11198:1;11187:9;11183:17;11174:6;11130:71;:::i;:::-;11211:70;11277:2;11266:9;11262:18;11253:6;11211:70;:::i;:::-;11291:72;11359:2;11348:9;11344:18;11335:6;11291:72;:::i;:::-;11373;11441:2;11430:9;11426:18;11417:6;11373:72;:::i;:::-;11455:73;11523:3;11512:9;11508:19;11499:6;11455:73;:::i;:::-;11538;11606:3;11595:9;11591:19;11582:6;11538:73;:::i;:::-;11621:71;11687:3;11676:9;11672:19;11663:6;11621:71;:::i;:::-;11740:9;11734:4;11730:20;11724:3;11713:9;11709:19;11702:49;11768:76;11839:4;11830:6;11768:76;:::i;:::-;11760:84;;11083:768;;;;;;;;;;;:::o;11857:426::-;;12036:2;12025:9;12021:18;12013:26;;12049:69;12115:1;12104:9;12100:17;12091:6;12049:69;:::i;:::-;12128:72;12196:2;12185:9;12181:18;12172:6;12128:72;:::i;:::-;12210:66;12272:2;12261:9;12257:18;12248:6;12210:66;:::i;:::-;12003:280;;;;;;:::o;12289:278::-;;12355:2;12349:9;12339:19;;12397:4;12389:6;12385:17;12504:6;12492:10;12489:22;12468:18;12456:10;12453:34;12450:62;12447:2;;;12515:13;;:::i;:::-;12447:2;12550:10;12546:2;12539:22;12329:238;;;;:::o;12573:98::-;;12658:5;12652:12;12642:22;;12631:40;;;:::o;12677:99::-;;12763:5;12757:12;12747:22;;12736:40;;;:::o;12782:168::-;;12899:6;12894:3;12887:19;12939:4;12934:3;12930:14;12915:29;;12877:73;;;;:::o;12956:147::-;;13094:3;13079:18;;13069:34;;;;:::o;13109:169::-;;13227:6;13222:3;13215:19;13267:4;13262:3;13258:14;13243:29;;13205:73;;;;:::o;13284:96::-;;13350:24;13368:5;13350:24;:::i;:::-;13339:35;;13329:51;;;:::o;13386:90::-;;13463:5;13456:13;13449:21;13438:32;;13428:48;;;:::o;13482:150::-;;13559:66;13552:5;13548:78;13537:89;;13527:105;;;:::o;13638:77::-;;13704:5;13693:16;;13683:32;;;:::o;13721:141::-;;13802:5;13791:16;;13808:48;13850:5;13808:48;:::i;:::-;13781:81;;;:::o;13868:126::-;;13945:42;13938:5;13934:54;13923:65;;13913:81;;;:::o;14000:77::-;;14066:5;14055:16;;14045:32;;;:::o;14083:93::-;;14159:10;14152:5;14148:22;14137:33;;14127:49;;;:::o;14182:176::-;;14290:62;14346:5;14290:62;:::i;:::-;14277:75;;14267:91;;;:::o;14364:138::-;;14472:24;14490:5;14472:24;:::i;:::-;14459:37;;14449:53;;;:::o;14508:141::-;;14604:39;14637:5;14604:39;:::i;:::-;14591:52;;14581:68;;;:::o;14655:119::-;;14745:23;14762:5;14745:23;:::i;:::-;14732:36;;14722:52;;;:::o;14780:307::-;14848:1;14858:113;14872:6;14869:1;14866:13;14858:113;;;14957:1;14952:3;14948:11;14942:18;14938:1;14933:3;14929:11;14922:39;14894:2;14891:1;14887:10;14882:15;;14858:113;;;14989:6;14986:1;14983:13;14980:2;;;15069:1;15060:6;15055:3;15051:16;15044:27;14980:2;14829:258;;;;:::o;15093:79::-;;15161:5;15150:16;;15140:32;;;:::o;15178:48::-;15211:9;15232:102;;15324:2;15320:7;15315:2;15308:5;15304:14;15300:28;15290:38;;15280:54;;;:::o;15340:115::-;15428:1;15421:5;15418:12;15408:2;;15434:13;;:::i;:::-;15408:2;15398:57;:::o;15461:122::-;15534:24;15552:5;15534:24;:::i;:::-;15527:5;15524:35;15514:2;;15573:1;15570;15563:12;15514:2;15504:79;:::o;15589:116::-;15659:21;15674:5;15659:21;:::i;:::-;15652:5;15649:32;15639:2;;15695:1;15692;15685:12;15639:2;15629:76;:::o;15711:122::-;15784:24;15802:5;15784:24;:::i;:::-;15777:5;15774:35;15764:2;;15823:1;15820;15813:12;15764:2;15754:79;:::o;15839:120::-;15911:23;15928:5;15911:23;:::i;:::-;15904:5;15901:34;15891:2;;15949:1;15946;15939:12;15891:2;15881:78;:::o"
            },
            "methodIdentifiers": {
              "USDC()": "89a30271",
              "batchPayEmployees((address,uint256)[])": "2055a637",
              "directTransfer(address,uint256)": "6c61d60f",
              "handleReceiveMessage(address,uint256)": "a34971f7",
              "hookWrapper()": "5a316f7a",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "routes(address)": "d7409659",
              "setRouteInfo(address,uint32,address,bool)": "49843f01",
              "targetMultichainPayroll()": "460cb6a6",
              "tokenMessenger()": "46117830",
              "transferOwnership(address)": "f2fde38b",
              "withdrawUSDC(uint256,address)": "0c1241b5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenMessenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hookWrapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_targetMultichainPayroll\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DirectTransferExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"lending\",\"type\":\"bool\"}],\"name\":\"EmployeeRouteSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LendingDepositExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"enum MultichainPayrollWithHook.PaymentType\",\"name\":\"paymentType\",\"type\":\"uint8\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"}],\"name\":\"PaymentSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"TokenSwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDCWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MultichainPayrollWithHook.Employee[]\",\"name\":\"employees\",\"type\":\"tuple[]\"}],\"name\":\"batchPayEmployees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"directTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"handleReceiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hookWrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"routes\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationCCTPDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"desiredERC20Token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"lendingEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"lending\",\"type\":\"bool\"}],\"name\":\"setRouteInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetMultichainPayroll\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMessenger\",\"outputs\":[{\"internalType\":\"contract ITokenMessengerV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchPayEmployees((address,uint256)[])\":{\"details\":\"Uses contract's USDC balance\",\"params\":{\"employees\":\"Array of employee addresses and payment amounts\"}},\"handleReceiveMessage(address,uint256)\":{\"details\":\"hookCallData = abi.encodeWithSelector(this.handleReceiveMessage.selector, recipient, amount)\",\"params\":{\"amount\":\"The USDC amount received\",\"recipient\":\"The employee receiving the payment\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRouteInfo(address,uint32,address,bool)\":{\"params\":{\"domain\":\"The CCTP domain where the employee will receive payments\",\"employee\":\"The address of the employee\",\"lending\":\"Whether to deposit to DeFi protocols or transfer directly\",\"token\":\"The token the employee wants to receive (can be USDC)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawUSDC(uint256,address)\":{\"params\":{\"amount\":\"The amount of USDC to withdraw\",\"recipient\":\"The address to send the withdrawn USDC to\"}}},\"title\":\"MultichainPayrollWithHook - Unified Payroll Contract for CCTP-based USDC payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchPayEmployees((address,uint256)[])\":{\"notice\":\"Admin sends USDC to employees across chains via CCTP\"},\"handleReceiveMessage(address,uint256)\":{\"notice\":\"Called via CCTPHookWrapper relay(), triggered by Multichain message\"},\"setRouteInfo(address,uint32,address,bool)\":{\"notice\":\"Admin registers payroll route info for an employee\"},\"withdrawUSDC(uint256,address)\":{\"notice\":\"Allows the owner to withdraw USDC from the contract\"}},\"notice\":\"This contract provides payroll functionality using contract's USDC balance. USDC must be deposited to the contract before making payments.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/MultichainPayrollWithHook.sol\":\"MultichainPayrollWithHook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/core/MultichainPayrollWithHook.sol\":{\"keccak256\":\"0x4e9152b9c90a61158a0d12c7cec88a6b411c07b280fbb7d834e92d3a2e636841\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://220f57a14ddc4aeccb09d5efc4020072cc48fa7bef618bd81847925c36598076\",\"dweb:/ipfs/QmT3AS32V5Zah5d8Wgb8SSA6vjAdQgSx5f2jFdnSNnRKW4\"]},\"contracts/lib/interfaces/ITokenMessengerV2.sol\":{\"keccak256\":\"0x851cb7eac88913592ba06e918e76a9e853c8ceaf351c0338987667fa14da2ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d204c85e437d744e213cd7c0fa51ae5f155f2d0aacb159a0f6d11fc3c8b0716\",\"dweb:/ipfs/QmdzbAbUPUBKMnAcjo4LLppU1gyDUSESwuFy7mjpX7kRD6\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 7,
                "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 322,
                "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                "label": "routes",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_struct(RouteInfo)313_storage)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(RouteInfo)313_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct MultichainPayrollWithHook.RouteInfo)",
                "numberOfBytes": "32",
                "value": "t_struct(RouteInfo)313_storage"
              },
              "t_struct(RouteInfo)313_storage": {
                "encoding": "inplace",
                "label": "struct MultichainPayrollWithHook.RouteInfo",
                "members": [
                  {
                    "astId": 308,
                    "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                    "label": "destinationCCTPDomain",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 310,
                    "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                    "label": "desiredERC20Token",
                    "offset": 4,
                    "slot": "0",
                    "type": "t_address"
                  },
                  {
                    "astId": 312,
                    "contract": "contracts/core/MultichainPayrollWithHook.sol:MultichainPayrollWithHook",
                    "label": "lendingEnabled",
                    "offset": 24,
                    "slot": "0",
                    "type": "t_bool"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_uint32": {
                "encoding": "inplace",
                "label": "uint32",
                "numberOfBytes": "4"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "batchPayEmployees((address,uint256)[])": {
                "notice": "Admin sends USDC to employees across chains via CCTP"
              },
              "handleReceiveMessage(address,uint256)": {
                "notice": "Called via CCTPHookWrapper relay(), triggered by Multichain message"
              },
              "setRouteInfo(address,uint32,address,bool)": {
                "notice": "Admin registers payroll route info for an employee"
              },
              "withdrawUSDC(uint256,address)": {
                "notice": "Allows the owner to withdraw USDC from the contract"
              }
            },
            "notice": "This contract provides payroll functionality using contract's USDC balance. USDC must be deposited to the contract before making payments.",
            "version": 1
          }
        }
      },
      "contracts/lib/interfaces/ITokenMessengerV2.sol": {
        "ITokenMessengerV2": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mintRecipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "burnToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationCaller",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "minFinalityThreshold",
                  "type": "uint32"
                }
              ],
              "name": "depositForBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "destinationDomain",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mintRecipient",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "burnToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "destinationCaller",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "minFinalityThreshold",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "hookData",
                  "type": "bytes"
                }
              ],
              "name": "depositForBurnWithHook",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)": {
                "params": {
                  "amount": "Amount of tokens to burn",
                  "burnToken": "Address of token to burn",
                  "destinationCaller": "Authorized caller on the destination domain, as bytes32",
                  "destinationDomain": "Destination domain (Chain ID in CCTP)",
                  "maxFee": "Maximum fee to pay on the destination domain",
                  "minFinalityThreshold": "Minimum finality at which the message should be attested to",
                  "mintRecipient": "Address (as bytes32) of recipient on destination domain"
                }
              },
              "depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)": {
                "params": {
                  "amount": "Amount of tokens to burn",
                  "burnToken": "Address of token to burn",
                  "destinationCaller": "Authorized caller on the destination domain, as bytes32",
                  "destinationDomain": "Destination domain (Chain ID in CCTP)",
                  "hookData": "Hook data to append to burn message for interpretation on destination domain",
                  "maxFee": "Maximum fee to pay on the destination domain",
                  "minFinalityThreshold": "Minimum finality at which the message should be attested to",
                  "mintRecipient": "Address (as bytes32) of recipient on destination domain"
                }
              }
            },
            "title": "ITokenMessengerV2",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)": "8e0250ee",
              "depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)": "779b432d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"minFinalityThreshold\",\"type\":\"uint32\"}],\"name\":\"depositForBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"minFinalityThreshold\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"depositForBurnWithHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)\":{\"params\":{\"amount\":\"Amount of tokens to burn\",\"burnToken\":\"Address of token to burn\",\"destinationCaller\":\"Authorized caller on the destination domain, as bytes32\",\"destinationDomain\":\"Destination domain (Chain ID in CCTP)\",\"maxFee\":\"Maximum fee to pay on the destination domain\",\"minFinalityThreshold\":\"Minimum finality at which the message should be attested to\",\"mintRecipient\":\"Address (as bytes32) of recipient on destination domain\"}},\"depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)\":{\"params\":{\"amount\":\"Amount of tokens to burn\",\"burnToken\":\"Address of token to burn\",\"destinationCaller\":\"Authorized caller on the destination domain, as bytes32\",\"destinationDomain\":\"Destination domain (Chain ID in CCTP)\",\"hookData\":\"Hook data to append to burn message for interpretation on destination domain\",\"maxFee\":\"Maximum fee to pay on the destination domain\",\"minFinalityThreshold\":\"Minimum finality at which the message should be attested to\",\"mintRecipient\":\"Address (as bytes32) of recipient on destination domain\"}}},\"title\":\"ITokenMessengerV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)\":{\"notice\":\"Burns tokens and sends a message to the destination domain for minting\"},\"depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)\":{\"notice\":\"Burns tokens and sends a message with hook data to the destination domain for minting\"}},\"notice\":\"Interface for Circle's CCTP TokenMessengerV2 contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/ITokenMessengerV2.sol\":\"ITokenMessengerV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/ITokenMessengerV2.sol\":{\"keccak256\":\"0x851cb7eac88913592ba06e918e76a9e853c8ceaf351c0338987667fa14da2ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d204c85e437d744e213cd7c0fa51ae5f155f2d0aacb159a0f6d11fc3c8b0716\",\"dweb:/ipfs/QmdzbAbUPUBKMnAcjo4LLppU1gyDUSESwuFy7mjpX7kRD6\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "depositForBurn(uint256,uint32,bytes32,address,bytes32,uint256,uint32)": {
                "notice": "Burns tokens and sends a message to the destination domain for minting"
              },
              "depositForBurnWithHook(uint256,uint32,bytes32,address,bytes32,uint256,uint32,bytes)": {
                "notice": "Burns tokens and sends a message with hook data to the destination domain for minting"
              }
            },
            "notice": "Interface for Circle's CCTP TokenMessengerV2 contract",
            "version": 1
          }
        }
      }
    }
  }
}